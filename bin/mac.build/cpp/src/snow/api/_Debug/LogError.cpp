// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_snow_api__Debug_LogError
#include <snow/api/_Debug/LogError.h>
#endif
namespace snow{
namespace api{
namespace _Debug{

::snow::api::_Debug::LogError LogError_obj::RequireString(::String detail)
{
	return hx::CreateEnum< LogError_obj >(HX_("RequireString",f6,ed,9b,b7),0,1)->_hx_init(0,detail);
}

bool LogError_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("RequireString",f6,ed,9b,b7)) { outValue = LogError_obj::RequireString_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(LogError_obj)

int LogError_obj::__FindIndex(::String inName)
{
	if (inName==HX_("RequireString",f6,ed,9b,b7)) return 0;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LogError_obj,RequireString,return)

int LogError_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("RequireString",f6,ed,9b,b7)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val LogError_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("RequireString",f6,ed,9b,b7)) return RequireString_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String LogError_obj_sStaticFields[] = {
	HX_("RequireString",f6,ed,9b,b7),
	::String(null())
};

static void LogError_obj_sMarkStatics(HX_MARK_PARAMS) {
};

#ifdef HXCPP_VISIT_ALLOCS
static void LogError_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LogError_obj::__mClass,"__mClass");
};
#endif

hx::Class LogError_obj::__mClass;

Dynamic __Create_LogError_obj() { return new LogError_obj; }

void LogError_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("snow.api._Debug.LogError","\xbf","\xe9","\xb8","\x18"), hx::TCanCast< LogError_obj >,LogError_obj_sStaticFields,0,
	&__Create_LogError_obj, &__Create,
	&super::__SGetClass(), &CreateLogError_obj, LogError_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , LogError_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &LogError_obj::__GetStatic;
}

void LogError_obj::__boot()
{
}


} // end namespace snow
} // end namespace api
} // end namespace _Debug
