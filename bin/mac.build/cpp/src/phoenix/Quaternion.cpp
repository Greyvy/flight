// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_phoenix_Matrix
#include <phoenix/Matrix.h>
#endif
#ifndef INCLUDED_phoenix_Quaternion
#include <phoenix/Quaternion.h>
#endif
#ifndef INCLUDED_phoenix_Vector
#include <phoenix/Vector.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9ac8276792cde9b0_7_new,"phoenix.Quaternion","new",0x41d5772f,"phoenix.Quaternion.new","phoenix/Quaternion.hx",7,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_42_toString,"phoenix.Quaternion","toString",0xe5131b7d,"phoenix.Quaternion.toString","phoenix/Quaternion.hx",42,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_46_set,"phoenix.Quaternion","set",0x41d94271,"phoenix.Quaternion.set","phoenix/Quaternion.hx",46,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_55_copy,"phoenix.Quaternion","copy",0x51b50a06,"phoenix.Quaternion.copy","phoenix/Quaternion.hx",55,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_67_dot,"phoenix.Quaternion","dot",0x41cde958,"phoenix.Quaternion.dot","phoenix/Quaternion.hx",67,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_71_setFromEuler,"phoenix.Quaternion","setFromEuler",0x1a4a0aee,"phoenix.Quaternion.setFromEuler","phoenix/Quaternion.hx",71,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_141_setFromAxisAngle,"phoenix.Quaternion","setFromAxisAngle",0xa0e70777,"phoenix.Quaternion.setFromAxisAngle","phoenix/Quaternion.hx",141,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_159_setFromRotationMatrix,"phoenix.Quaternion","setFromRotationMatrix",0xe63a5ffa,"phoenix.Quaternion.setFromRotationMatrix","phoenix/Quaternion.hx",159,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_226_inverse,"phoenix.Quaternion","inverse",0x883005ff,"phoenix.Quaternion.inverse","phoenix/Quaternion.hx",226,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_231_conjugate,"phoenix.Quaternion","conjugate",0xa5a66227,"phoenix.Quaternion.conjugate","phoenix/Quaternion.hx",231,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_242_lengthSq,"phoenix.Quaternion","lengthSq",0xcc67adf5,"phoenix.Quaternion.lengthSq","phoenix/Quaternion.hx",242,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_249_length,"phoenix.Quaternion","length",0xc664d977,"phoenix.Quaternion.length","phoenix/Quaternion.hx",249,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_254_normalize,"phoenix.Quaternion","normalize",0x0ebe639c,"phoenix.Quaternion.normalize","phoenix/Quaternion.hx",254,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_288_multiply,"phoenix.Quaternion","multiply",0x47312cf5,"phoenix.Quaternion.multiply","phoenix/Quaternion.hx",288,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_294_add,"phoenix.Quaternion","add",0x41cb98f0,"phoenix.Quaternion.add","phoenix/Quaternion.hx",294,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_298_addQuaternions,"phoenix.Quaternion","addQuaternions",0xb1d63285,"phoenix.Quaternion.addQuaternions","phoenix/Quaternion.hx",298,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_309_multiplyScalar,"phoenix.Quaternion","multiplyScalar",0x2f1f2e01,"phoenix.Quaternion.multiplyScalar","phoenix/Quaternion.hx",309,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_320_multiplyQuaternions,"phoenix.Quaternion","multiplyQuaternions",0x00ae42a0,"phoenix.Quaternion.multiplyQuaternions","phoenix/Quaternion.hx",320,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_335_slerp,"phoenix.Quaternion","slerp",0x611900f9,"phoenix.Quaternion.slerp","phoenix/Quaternion.hx",335,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_398_equals,"phoenix.Quaternion","equals",0xe75032d0,"phoenix.Quaternion.equals","phoenix/Quaternion.hx",398,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_403_fromArray,"phoenix.Quaternion","fromArray",0x3d3583de,"phoenix.Quaternion.fromArray","phoenix/Quaternion.hx",403,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_414_toArray,"phoenix.Quaternion","toArray",0x3c52746d,"phoenix.Quaternion.toArray","phoenix/Quaternion.hx",414,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_420_clone,"phoenix.Quaternion","clone",0x2ab74bec,"phoenix.Quaternion.clone","phoenix/Quaternion.hx",420,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_425_toeuler,"phoenix.Quaternion","toeuler",0xf8b6705d,"phoenix.Quaternion.toeuler","phoenix/Quaternion.hx",425,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_438_update_euler,"phoenix.Quaternion","update_euler",0x0887dac4,"phoenix.Quaternion.update_euler","phoenix/Quaternion.hx",438,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_450_set_xyzw,"phoenix.Quaternion","set_xyzw",0x2a6a35cc,"phoenix.Quaternion.set_xyzw","phoenix/Quaternion.hx",450,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_470_set_xyz,"phoenix.Quaternion","set_xyz",0x64108c4b,"phoenix.Quaternion.set_xyz","phoenix/Quaternion.hx",470,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_488_set_x,"phoenix.Quaternion","set_x",0x5c83d3ea,"phoenix.Quaternion.set_x","phoenix/Quaternion.hx",488,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_502_set_y,"phoenix.Quaternion","set_y",0x5c83d3eb,"phoenix.Quaternion.set_y","phoenix/Quaternion.hx",502,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_516_set_z,"phoenix.Quaternion","set_z",0x5c83d3ec,"phoenix.Quaternion.set_z","phoenix/Quaternion.hx",516,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_530_set_w,"phoenix.Quaternion","set_w",0x5c83d3e9,"phoenix.Quaternion.set_w","phoenix/Quaternion.hx",530,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_275_Add,"phoenix.Quaternion","Add",0x41b350d0,"phoenix.Quaternion.Add","phoenix/Quaternion.hx",275,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_279_Multiply,"phoenix.Quaternion","Multiply",0x20e2e915,"phoenix.Quaternion.Multiply","phoenix/Quaternion.hx",279,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_283_MultiplyScalar,"phoenix.Quaternion","MultiplyScalar",0xd974c221,"phoenix.Quaternion.MultiplyScalar","phoenix/Quaternion.hx",283,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_430_Slerp,"phoenix.Quaternion","Slerp",0xf44670d9,"phoenix.Quaternion.Slerp","phoenix/Quaternion.hx",430,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_435_Dot,"phoenix.Quaternion","Dot",0x41b5a138,"phoenix.Quaternion.Dot","phoenix/Quaternion.hx",435,0x23671680)
HX_LOCAL_STACK_FRAME(_hx_pos_9ac8276792cde9b0_544_Listen,"phoenix.Quaternion","Listen",0x4beb80f8,"phoenix.Quaternion.Listen","phoenix/Quaternion.hx",544,0x23671680)
namespace phoenix{

void Quaternion_obj::__construct(hx::Null< Float >  __o__x,hx::Null< Float >  __o__y,hx::Null< Float >  __o__z,hx::Null< Float >  __o__w){
Float _x = __o__x.Default(0);
Float _y = __o__y.Default(0);
Float _z = __o__z.Default(0);
Float _w = __o__w.Default(1);
            	HX_GC_STACKFRAME(&_hx_pos_9ac8276792cde9b0_7_new)
HXLINE( 448)		this->ignore_euler = false;
HXLINE(  23)		this->_construct = false;
HXLINE(  16)		this->ignore_listeners = false;
HXLINE(  12)		this->w = ((Float)0.0);
HXLINE(  11)		this->z = ((Float)0.0);
HXLINE(  10)		this->y = ((Float)0.0);
HXLINE(   9)		this->x = ((Float)0.0);
HXLINE(  27)		this->_construct = true;
HXLINE(  29)		{
HXLINE(  29)			this->x = _x;
HXDLIN(  29)			if (!(this->_construct)) {
HXLINE(  29)				bool _hx_tmp;
HXDLIN(  29)				bool _hx_tmp1;
HXDLIN(  29)				if (hx::IsNotNull( this->euler )) {
HXLINE(  29)					_hx_tmp1 = this->ignore_euler;
            				}
            				else {
HXLINE(  29)					_hx_tmp1 = true;
            				}
HXDLIN(  29)				if (!(_hx_tmp1)) {
HXLINE(  29)					_hx_tmp = this->_construct;
            				}
            				else {
HXLINE(  29)					_hx_tmp = true;
            				}
HXDLIN(  29)				if (!(_hx_tmp)) {
HXLINE(  29)					 ::phoenix::Vector _this = this->euler;
HXDLIN(  29)					int order = (int)0;
HXDLIN(  29)					Float sqx = (this->x * this->x);
HXDLIN(  29)					Float sqy = (this->y * this->y);
HXDLIN(  29)					Float sqz = (this->z * this->z);
HXDLIN(  29)					Float sqw = (this->w * this->w);
HXDLIN(  29)					Float _x1 = _this->x;
HXDLIN(  29)					Float _y1 = _this->y;
HXDLIN(  29)					Float _z1 = _this->z;
HXDLIN(  29)					if ((order == (int)0)) {
HXLINE(  29)						Float _x2 = (this->x * this->w);
HXDLIN(  29)						Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN(  29)						_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  29)						Float value = (this->x * this->z);
HXDLIN(  29)						Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN(  29)						Float _y2;
HXDLIN(  29)						if ((value1 < (int)-1)) {
HXLINE(  29)							_y2 = (int)-1;
            						}
            						else {
HXLINE(  29)							if ((value1 > (int)1)) {
HXLINE(  29)								_y2 = (int)1;
            							}
            							else {
HXLINE(  29)								_y2 = value1;
            							}
            						}
HXDLIN(  29)						_y1 = ::Math_obj::asin(_y2);
HXDLIN(  29)						Float _z2 = (this->z * this->w);
HXDLIN(  29)						Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN(  29)						_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            					}
            					else {
HXLINE(  29)						if ((order == (int)1)) {
HXLINE(  29)							Float value2 = (this->x * this->w);
HXDLIN(  29)							Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN(  29)							Float _x4;
HXDLIN(  29)							if ((value3 < (int)-1)) {
HXLINE(  29)								_x4 = (int)-1;
            							}
            							else {
HXLINE(  29)								if ((value3 > (int)1)) {
HXLINE(  29)									_x4 = (int)1;
            								}
            								else {
HXLINE(  29)									_x4 = value3;
            								}
            							}
HXDLIN(  29)							_x1 = ::Math_obj::asin(_x4);
HXDLIN(  29)							Float _y3 = (this->x * this->z);
HXDLIN(  29)							Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN(  29)							_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  29)							Float _z4 = (this->x * this->y);
HXDLIN(  29)							Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN(  29)							_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            						}
            						else {
HXLINE(  29)							if ((order == (int)2)) {
HXLINE(  29)								Float value4 = (this->x * this->w);
HXDLIN(  29)								Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN(  29)								Float _x5;
HXDLIN(  29)								if ((value5 < (int)-1)) {
HXLINE(  29)									_x5 = (int)-1;
            								}
            								else {
HXLINE(  29)									if ((value5 > (int)1)) {
HXLINE(  29)										_x5 = (int)1;
            									}
            									else {
HXLINE(  29)										_x5 = value5;
            									}
            								}
HXDLIN(  29)								_x1 = ::Math_obj::asin(_x5);
HXDLIN(  29)								Float _y5 = (this->y * this->w);
HXDLIN(  29)								Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN(  29)								_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  29)								Float _z6 = (this->z * this->w);
HXDLIN(  29)								Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN(  29)								_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE(  29)								if ((order == (int)3)) {
HXLINE(  29)									Float _x6 = (this->x * this->w);
HXDLIN(  29)									Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN(  29)									_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  29)									Float value6 = (this->y * this->w);
HXDLIN(  29)									Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN(  29)									Float _y7;
HXDLIN(  29)									if ((value7 < (int)-1)) {
HXLINE(  29)										_y7 = (int)-1;
            									}
            									else {
HXLINE(  29)										if ((value7 > (int)1)) {
HXLINE(  29)											_y7 = (int)1;
            										}
            										else {
HXLINE(  29)											_y7 = value7;
            										}
            									}
HXDLIN(  29)									_y1 = ::Math_obj::asin(_y7);
HXDLIN(  29)									Float _z8 = (this->x * this->y);
HXDLIN(  29)									Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN(  29)									_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            								}
            								else {
HXLINE(  29)									if ((order == (int)4)) {
HXLINE(  29)										Float _x8 = (this->x * this->w);
HXDLIN(  29)										Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN(  29)										_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN(  29)										Float _y8 = (this->y * this->w);
HXDLIN(  29)										Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN(  29)										_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN(  29)										Float value8 = (this->x * this->y);
HXDLIN(  29)										Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN(  29)										Float _z10;
HXDLIN(  29)										if ((value9 < (int)-1)) {
HXLINE(  29)											_z10 = (int)-1;
            										}
            										else {
HXLINE(  29)											if ((value9 > (int)1)) {
HXLINE(  29)												_z10 = (int)1;
            											}
            											else {
HXLINE(  29)												_z10 = value9;
            											}
            										}
HXDLIN(  29)										_z1 = ::Math_obj::asin(_z10);
            									}
            									else {
HXLINE(  29)										if ((order == (int)5)) {
HXLINE(  29)											Float _x10 = (this->x * this->w);
HXDLIN(  29)											Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN(  29)											_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN(  29)											Float _y10 = (this->x * this->z);
HXDLIN(  29)											Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN(  29)											_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN(  29)											Float value10 = (this->z * this->w);
HXDLIN(  29)											Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN(  29)											Float _z11;
HXDLIN(  29)											if ((value11 < (int)-1)) {
HXLINE(  29)												_z11 = (int)-1;
            											}
            											else {
HXLINE(  29)												if ((value11 > (int)1)) {
HXLINE(  29)													_z11 = (int)1;
            												}
            												else {
HXLINE(  29)													_z11 = value11;
            												}
            											}
HXDLIN(  29)											_z1 = ::Math_obj::asin(_z11);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN(  29)					{
HXLINE(  29)						bool prev = _this->ignore_listeners;
HXDLIN(  29)						_this->ignore_listeners = true;
HXDLIN(  29)						{
HXLINE(  29)							_this->x = _x1;
HXDLIN(  29)							if (!(_this->_construct)) {
HXLINE(  29)								bool _hx_tmp2;
HXDLIN(  29)								if (hx::IsNotNull( _this->listen_x )) {
HXLINE(  29)									_hx_tmp2 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE(  29)									_hx_tmp2 = false;
            								}
HXDLIN(  29)								if (_hx_tmp2) {
HXLINE(  29)									_this->listen_x(_x1);
            								}
            							}
            						}
HXDLIN(  29)						{
HXLINE(  29)							_this->y = _y1;
HXDLIN(  29)							if (!(_this->_construct)) {
HXLINE(  29)								bool _hx_tmp3;
HXDLIN(  29)								if (hx::IsNotNull( _this->listen_y )) {
HXLINE(  29)									_hx_tmp3 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE(  29)									_hx_tmp3 = false;
            								}
HXDLIN(  29)								if (_hx_tmp3) {
HXLINE(  29)									_this->listen_y(_y1);
            								}
            							}
            						}
HXDLIN(  29)						{
HXLINE(  29)							_this->z = _z1;
HXDLIN(  29)							if (!(_this->_construct)) {
HXLINE(  29)								bool _hx_tmp4;
HXDLIN(  29)								if (hx::IsNotNull( _this->listen_z )) {
HXLINE(  29)									_hx_tmp4 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE(  29)									_hx_tmp4 = false;
            								}
HXDLIN(  29)								if (_hx_tmp4) {
HXLINE(  29)									_this->listen_z(_z1);
            								}
            							}
            						}
HXDLIN(  29)						_this->ignore_listeners = prev;
HXDLIN(  29)						bool _hx_tmp5;
HXDLIN(  29)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE(  29)							_hx_tmp5 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE(  29)							_hx_tmp5 = false;
            						}
HXDLIN(  29)						if (_hx_tmp5) {
HXLINE(  29)							_this->listen_x(_this->x);
            						}
HXDLIN(  29)						bool _hx_tmp6;
HXDLIN(  29)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE(  29)							_hx_tmp6 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE(  29)							_hx_tmp6 = false;
            						}
HXDLIN(  29)						if (_hx_tmp6) {
HXLINE(  29)							_this->listen_y(_this->y);
            						}
HXDLIN(  29)						bool _hx_tmp7;
HXDLIN(  29)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE(  29)							_hx_tmp7 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE(  29)							_hx_tmp7 = false;
            						}
HXDLIN(  29)						if (_hx_tmp7) {
HXLINE(  29)							_this->listen_z(_this->z);
            						}
            					}
            				}
HXDLIN(  29)				bool _hx_tmp8;
HXDLIN(  29)				if (hx::IsNotNull( this->listen_x )) {
HXLINE(  29)					_hx_tmp8 = !(this->ignore_listeners);
            				}
            				else {
HXLINE(  29)					_hx_tmp8 = false;
            				}
HXDLIN(  29)				if (_hx_tmp8) {
HXLINE(  29)					this->listen_x(this->x);
            				}
            			}
            		}
HXLINE(  30)		{
HXLINE(  30)			this->y = _y;
HXDLIN(  30)			if (!(this->_construct)) {
HXLINE(  30)				bool _hx_tmp9;
HXDLIN(  30)				bool _hx_tmp10;
HXDLIN(  30)				if (hx::IsNotNull( this->euler )) {
HXLINE(  30)					_hx_tmp10 = this->ignore_euler;
            				}
            				else {
HXLINE(  30)					_hx_tmp10 = true;
            				}
HXDLIN(  30)				if (!(_hx_tmp10)) {
HXLINE(  30)					_hx_tmp9 = this->_construct;
            				}
            				else {
HXLINE(  30)					_hx_tmp9 = true;
            				}
HXDLIN(  30)				if (!(_hx_tmp9)) {
HXLINE(  30)					 ::phoenix::Vector _this1 = this->euler;
HXDLIN(  30)					int order1 = (int)0;
HXDLIN(  30)					Float sqx1 = (this->x * this->x);
HXDLIN(  30)					Float sqy1 = (this->y * this->y);
HXDLIN(  30)					Float sqz1 = (this->z * this->z);
HXDLIN(  30)					Float sqw1 = (this->w * this->w);
HXDLIN(  30)					Float _x12 = _this1->x;
HXDLIN(  30)					Float _y12 = _this1->y;
HXDLIN(  30)					Float _z12 = _this1->z;
HXDLIN(  30)					if ((order1 == (int)0)) {
HXLINE(  30)						Float _x13 = (this->x * this->w);
HXDLIN(  30)						Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN(  30)						_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  30)						Float value12 = (this->x * this->z);
HXDLIN(  30)						Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN(  30)						Float _y13;
HXDLIN(  30)						if ((value13 < (int)-1)) {
HXLINE(  30)							_y13 = (int)-1;
            						}
            						else {
HXLINE(  30)							if ((value13 > (int)1)) {
HXLINE(  30)								_y13 = (int)1;
            							}
            							else {
HXLINE(  30)								_y13 = value13;
            							}
            						}
HXDLIN(  30)						_y12 = ::Math_obj::asin(_y13);
HXDLIN(  30)						Float _z13 = (this->z * this->w);
HXDLIN(  30)						Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN(  30)						_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            					}
            					else {
HXLINE(  30)						if ((order1 == (int)1)) {
HXLINE(  30)							Float value14 = (this->x * this->w);
HXDLIN(  30)							Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN(  30)							Float _x15;
HXDLIN(  30)							if ((value15 < (int)-1)) {
HXLINE(  30)								_x15 = (int)-1;
            							}
            							else {
HXLINE(  30)								if ((value15 > (int)1)) {
HXLINE(  30)									_x15 = (int)1;
            								}
            								else {
HXLINE(  30)									_x15 = value15;
            								}
            							}
HXDLIN(  30)							_x12 = ::Math_obj::asin(_x15);
HXDLIN(  30)							Float _y14 = (this->x * this->z);
HXDLIN(  30)							Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN(  30)							_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  30)							Float _z15 = (this->x * this->y);
HXDLIN(  30)							Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN(  30)							_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            						}
            						else {
HXLINE(  30)							if ((order1 == (int)2)) {
HXLINE(  30)								Float value16 = (this->x * this->w);
HXDLIN(  30)								Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN(  30)								Float _x16;
HXDLIN(  30)								if ((value17 < (int)-1)) {
HXLINE(  30)									_x16 = (int)-1;
            								}
            								else {
HXLINE(  30)									if ((value17 > (int)1)) {
HXLINE(  30)										_x16 = (int)1;
            									}
            									else {
HXLINE(  30)										_x16 = value17;
            									}
            								}
HXDLIN(  30)								_x12 = ::Math_obj::asin(_x16);
HXDLIN(  30)								Float _y16 = (this->y * this->w);
HXDLIN(  30)								Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN(  30)								_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  30)								Float _z17 = (this->z * this->w);
HXDLIN(  30)								Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN(  30)								_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE(  30)								if ((order1 == (int)3)) {
HXLINE(  30)									Float _x17 = (this->x * this->w);
HXDLIN(  30)									Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN(  30)									_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  30)									Float value18 = (this->y * this->w);
HXDLIN(  30)									Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN(  30)									Float _y18;
HXDLIN(  30)									if ((value19 < (int)-1)) {
HXLINE(  30)										_y18 = (int)-1;
            									}
            									else {
HXLINE(  30)										if ((value19 > (int)1)) {
HXLINE(  30)											_y18 = (int)1;
            										}
            										else {
HXLINE(  30)											_y18 = value19;
            										}
            									}
HXDLIN(  30)									_y12 = ::Math_obj::asin(_y18);
HXDLIN(  30)									Float _z19 = (this->x * this->y);
HXDLIN(  30)									Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN(  30)									_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            								}
            								else {
HXLINE(  30)									if ((order1 == (int)4)) {
HXLINE(  30)										Float _x19 = (this->x * this->w);
HXDLIN(  30)										Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN(  30)										_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN(  30)										Float _y19 = (this->y * this->w);
HXDLIN(  30)										Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN(  30)										_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN(  30)										Float value20 = (this->x * this->y);
HXDLIN(  30)										Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN(  30)										Float _z21;
HXDLIN(  30)										if ((value21 < (int)-1)) {
HXLINE(  30)											_z21 = (int)-1;
            										}
            										else {
HXLINE(  30)											if ((value21 > (int)1)) {
HXLINE(  30)												_z21 = (int)1;
            											}
            											else {
HXLINE(  30)												_z21 = value21;
            											}
            										}
HXDLIN(  30)										_z12 = ::Math_obj::asin(_z21);
            									}
            									else {
HXLINE(  30)										if ((order1 == (int)5)) {
HXLINE(  30)											Float _x21 = (this->x * this->w);
HXDLIN(  30)											Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN(  30)											_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN(  30)											Float _y21 = (this->x * this->z);
HXDLIN(  30)											Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN(  30)											_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN(  30)											Float value22 = (this->z * this->w);
HXDLIN(  30)											Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN(  30)											Float _z22;
HXDLIN(  30)											if ((value23 < (int)-1)) {
HXLINE(  30)												_z22 = (int)-1;
            											}
            											else {
HXLINE(  30)												if ((value23 > (int)1)) {
HXLINE(  30)													_z22 = (int)1;
            												}
            												else {
HXLINE(  30)													_z22 = value23;
            												}
            											}
HXDLIN(  30)											_z12 = ::Math_obj::asin(_z22);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN(  30)					{
HXLINE(  30)						bool prev1 = _this1->ignore_listeners;
HXDLIN(  30)						_this1->ignore_listeners = true;
HXDLIN(  30)						{
HXLINE(  30)							_this1->x = _x12;
HXDLIN(  30)							if (!(_this1->_construct)) {
HXLINE(  30)								bool _hx_tmp11;
HXDLIN(  30)								if (hx::IsNotNull( _this1->listen_x )) {
HXLINE(  30)									_hx_tmp11 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE(  30)									_hx_tmp11 = false;
            								}
HXDLIN(  30)								if (_hx_tmp11) {
HXLINE(  30)									_this1->listen_x(_x12);
            								}
            							}
            						}
HXDLIN(  30)						{
HXLINE(  30)							_this1->y = _y12;
HXDLIN(  30)							if (!(_this1->_construct)) {
HXLINE(  30)								bool _hx_tmp12;
HXDLIN(  30)								if (hx::IsNotNull( _this1->listen_y )) {
HXLINE(  30)									_hx_tmp12 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE(  30)									_hx_tmp12 = false;
            								}
HXDLIN(  30)								if (_hx_tmp12) {
HXLINE(  30)									_this1->listen_y(_y12);
            								}
            							}
            						}
HXDLIN(  30)						{
HXLINE(  30)							_this1->z = _z12;
HXDLIN(  30)							if (!(_this1->_construct)) {
HXLINE(  30)								bool _hx_tmp13;
HXDLIN(  30)								if (hx::IsNotNull( _this1->listen_z )) {
HXLINE(  30)									_hx_tmp13 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE(  30)									_hx_tmp13 = false;
            								}
HXDLIN(  30)								if (_hx_tmp13) {
HXLINE(  30)									_this1->listen_z(_z12);
            								}
            							}
            						}
HXDLIN(  30)						_this1->ignore_listeners = prev1;
HXDLIN(  30)						bool _hx_tmp14;
HXDLIN(  30)						if (hx::IsNotNull( _this1->listen_x )) {
HXLINE(  30)							_hx_tmp14 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE(  30)							_hx_tmp14 = false;
            						}
HXDLIN(  30)						if (_hx_tmp14) {
HXLINE(  30)							_this1->listen_x(_this1->x);
            						}
HXDLIN(  30)						bool _hx_tmp15;
HXDLIN(  30)						if (hx::IsNotNull( _this1->listen_y )) {
HXLINE(  30)							_hx_tmp15 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE(  30)							_hx_tmp15 = false;
            						}
HXDLIN(  30)						if (_hx_tmp15) {
HXLINE(  30)							_this1->listen_y(_this1->y);
            						}
HXDLIN(  30)						bool _hx_tmp16;
HXDLIN(  30)						if (hx::IsNotNull( _this1->listen_z )) {
HXLINE(  30)							_hx_tmp16 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE(  30)							_hx_tmp16 = false;
            						}
HXDLIN(  30)						if (_hx_tmp16) {
HXLINE(  30)							_this1->listen_z(_this1->z);
            						}
            					}
            				}
HXDLIN(  30)				bool _hx_tmp17;
HXDLIN(  30)				if (hx::IsNotNull( this->listen_y )) {
HXLINE(  30)					_hx_tmp17 = !(this->ignore_listeners);
            				}
            				else {
HXLINE(  30)					_hx_tmp17 = false;
            				}
HXDLIN(  30)				if (_hx_tmp17) {
HXLINE(  30)					this->listen_y(this->y);
            				}
            			}
            		}
HXLINE(  31)		{
HXLINE(  31)			this->z = _z;
HXDLIN(  31)			if (!(this->_construct)) {
HXLINE(  31)				bool _hx_tmp18;
HXDLIN(  31)				bool _hx_tmp19;
HXDLIN(  31)				if (hx::IsNotNull( this->euler )) {
HXLINE(  31)					_hx_tmp19 = this->ignore_euler;
            				}
            				else {
HXLINE(  31)					_hx_tmp19 = true;
            				}
HXDLIN(  31)				if (!(_hx_tmp19)) {
HXLINE(  31)					_hx_tmp18 = this->_construct;
            				}
            				else {
HXLINE(  31)					_hx_tmp18 = true;
            				}
HXDLIN(  31)				if (!(_hx_tmp18)) {
HXLINE(  31)					 ::phoenix::Vector _this2 = this->euler;
HXDLIN(  31)					int order2 = (int)0;
HXDLIN(  31)					Float sqx2 = (this->x * this->x);
HXDLIN(  31)					Float sqy2 = (this->y * this->y);
HXDLIN(  31)					Float sqz2 = (this->z * this->z);
HXDLIN(  31)					Float sqw2 = (this->w * this->w);
HXDLIN(  31)					Float _x23 = _this2->x;
HXDLIN(  31)					Float _y23 = _this2->y;
HXDLIN(  31)					Float _z23 = _this2->z;
HXDLIN(  31)					if ((order2 == (int)0)) {
HXLINE(  31)						Float _x24 = (this->x * this->w);
HXDLIN(  31)						Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN(  31)						_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  31)						Float value24 = (this->x * this->z);
HXDLIN(  31)						Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN(  31)						Float _y24;
HXDLIN(  31)						if ((value25 < (int)-1)) {
HXLINE(  31)							_y24 = (int)-1;
            						}
            						else {
HXLINE(  31)							if ((value25 > (int)1)) {
HXLINE(  31)								_y24 = (int)1;
            							}
            							else {
HXLINE(  31)								_y24 = value25;
            							}
            						}
HXDLIN(  31)						_y23 = ::Math_obj::asin(_y24);
HXDLIN(  31)						Float _z24 = (this->z * this->w);
HXDLIN(  31)						Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN(  31)						_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            					}
            					else {
HXLINE(  31)						if ((order2 == (int)1)) {
HXLINE(  31)							Float value26 = (this->x * this->w);
HXDLIN(  31)							Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN(  31)							Float _x26;
HXDLIN(  31)							if ((value27 < (int)-1)) {
HXLINE(  31)								_x26 = (int)-1;
            							}
            							else {
HXLINE(  31)								if ((value27 > (int)1)) {
HXLINE(  31)									_x26 = (int)1;
            								}
            								else {
HXLINE(  31)									_x26 = value27;
            								}
            							}
HXDLIN(  31)							_x23 = ::Math_obj::asin(_x26);
HXDLIN(  31)							Float _y25 = (this->x * this->z);
HXDLIN(  31)							Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN(  31)							_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  31)							Float _z26 = (this->x * this->y);
HXDLIN(  31)							Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN(  31)							_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            						}
            						else {
HXLINE(  31)							if ((order2 == (int)2)) {
HXLINE(  31)								Float value28 = (this->x * this->w);
HXDLIN(  31)								Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN(  31)								Float _x27;
HXDLIN(  31)								if ((value29 < (int)-1)) {
HXLINE(  31)									_x27 = (int)-1;
            								}
            								else {
HXLINE(  31)									if ((value29 > (int)1)) {
HXLINE(  31)										_x27 = (int)1;
            									}
            									else {
HXLINE(  31)										_x27 = value29;
            									}
            								}
HXDLIN(  31)								_x23 = ::Math_obj::asin(_x27);
HXDLIN(  31)								Float _y27 = (this->y * this->w);
HXDLIN(  31)								Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN(  31)								_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  31)								Float _z28 = (this->z * this->w);
HXDLIN(  31)								Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN(  31)								_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE(  31)								if ((order2 == (int)3)) {
HXLINE(  31)									Float _x28 = (this->x * this->w);
HXDLIN(  31)									Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN(  31)									_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  31)									Float value30 = (this->y * this->w);
HXDLIN(  31)									Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN(  31)									Float _y29;
HXDLIN(  31)									if ((value31 < (int)-1)) {
HXLINE(  31)										_y29 = (int)-1;
            									}
            									else {
HXLINE(  31)										if ((value31 > (int)1)) {
HXLINE(  31)											_y29 = (int)1;
            										}
            										else {
HXLINE(  31)											_y29 = value31;
            										}
            									}
HXDLIN(  31)									_y23 = ::Math_obj::asin(_y29);
HXDLIN(  31)									Float _z30 = (this->x * this->y);
HXDLIN(  31)									Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN(  31)									_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            								}
            								else {
HXLINE(  31)									if ((order2 == (int)4)) {
HXLINE(  31)										Float _x30 = (this->x * this->w);
HXDLIN(  31)										Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN(  31)										_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN(  31)										Float _y30 = (this->y * this->w);
HXDLIN(  31)										Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN(  31)										_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN(  31)										Float value32 = (this->x * this->y);
HXDLIN(  31)										Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN(  31)										Float _z32;
HXDLIN(  31)										if ((value33 < (int)-1)) {
HXLINE(  31)											_z32 = (int)-1;
            										}
            										else {
HXLINE(  31)											if ((value33 > (int)1)) {
HXLINE(  31)												_z32 = (int)1;
            											}
            											else {
HXLINE(  31)												_z32 = value33;
            											}
            										}
HXDLIN(  31)										_z23 = ::Math_obj::asin(_z32);
            									}
            									else {
HXLINE(  31)										if ((order2 == (int)5)) {
HXLINE(  31)											Float _x32 = (this->x * this->w);
HXDLIN(  31)											Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN(  31)											_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN(  31)											Float _y32 = (this->x * this->z);
HXDLIN(  31)											Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN(  31)											_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN(  31)											Float value34 = (this->z * this->w);
HXDLIN(  31)											Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN(  31)											Float _z33;
HXDLIN(  31)											if ((value35 < (int)-1)) {
HXLINE(  31)												_z33 = (int)-1;
            											}
            											else {
HXLINE(  31)												if ((value35 > (int)1)) {
HXLINE(  31)													_z33 = (int)1;
            												}
            												else {
HXLINE(  31)													_z33 = value35;
            												}
            											}
HXDLIN(  31)											_z23 = ::Math_obj::asin(_z33);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN(  31)					{
HXLINE(  31)						bool prev2 = _this2->ignore_listeners;
HXDLIN(  31)						_this2->ignore_listeners = true;
HXDLIN(  31)						{
HXLINE(  31)							_this2->x = _x23;
HXDLIN(  31)							if (!(_this2->_construct)) {
HXLINE(  31)								bool _hx_tmp20;
HXDLIN(  31)								if (hx::IsNotNull( _this2->listen_x )) {
HXLINE(  31)									_hx_tmp20 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE(  31)									_hx_tmp20 = false;
            								}
HXDLIN(  31)								if (_hx_tmp20) {
HXLINE(  31)									_this2->listen_x(_x23);
            								}
            							}
            						}
HXDLIN(  31)						{
HXLINE(  31)							_this2->y = _y23;
HXDLIN(  31)							if (!(_this2->_construct)) {
HXLINE(  31)								bool _hx_tmp21;
HXDLIN(  31)								if (hx::IsNotNull( _this2->listen_y )) {
HXLINE(  31)									_hx_tmp21 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE(  31)									_hx_tmp21 = false;
            								}
HXDLIN(  31)								if (_hx_tmp21) {
HXLINE(  31)									_this2->listen_y(_y23);
            								}
            							}
            						}
HXDLIN(  31)						{
HXLINE(  31)							_this2->z = _z23;
HXDLIN(  31)							if (!(_this2->_construct)) {
HXLINE(  31)								bool _hx_tmp22;
HXDLIN(  31)								if (hx::IsNotNull( _this2->listen_z )) {
HXLINE(  31)									_hx_tmp22 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE(  31)									_hx_tmp22 = false;
            								}
HXDLIN(  31)								if (_hx_tmp22) {
HXLINE(  31)									_this2->listen_z(_z23);
            								}
            							}
            						}
HXDLIN(  31)						_this2->ignore_listeners = prev2;
HXDLIN(  31)						bool _hx_tmp23;
HXDLIN(  31)						if (hx::IsNotNull( _this2->listen_x )) {
HXLINE(  31)							_hx_tmp23 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE(  31)							_hx_tmp23 = false;
            						}
HXDLIN(  31)						if (_hx_tmp23) {
HXLINE(  31)							_this2->listen_x(_this2->x);
            						}
HXDLIN(  31)						bool _hx_tmp24;
HXDLIN(  31)						if (hx::IsNotNull( _this2->listen_y )) {
HXLINE(  31)							_hx_tmp24 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE(  31)							_hx_tmp24 = false;
            						}
HXDLIN(  31)						if (_hx_tmp24) {
HXLINE(  31)							_this2->listen_y(_this2->y);
            						}
HXDLIN(  31)						bool _hx_tmp25;
HXDLIN(  31)						if (hx::IsNotNull( _this2->listen_z )) {
HXLINE(  31)							_hx_tmp25 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE(  31)							_hx_tmp25 = false;
            						}
HXDLIN(  31)						if (_hx_tmp25) {
HXLINE(  31)							_this2->listen_z(_this2->z);
            						}
            					}
            				}
HXDLIN(  31)				bool _hx_tmp26;
HXDLIN(  31)				if (hx::IsNotNull( this->listen_z )) {
HXLINE(  31)					_hx_tmp26 = !(this->ignore_listeners);
            				}
            				else {
HXLINE(  31)					_hx_tmp26 = false;
            				}
HXDLIN(  31)				if (_hx_tmp26) {
HXLINE(  31)					this->listen_z(this->z);
            				}
            			}
            		}
HXLINE(  32)		{
HXLINE(  32)			this->w = _w;
HXDLIN(  32)			if (!(this->_construct)) {
HXLINE(  32)				bool _hx_tmp27;
HXDLIN(  32)				bool _hx_tmp28;
HXDLIN(  32)				if (hx::IsNotNull( this->euler )) {
HXLINE(  32)					_hx_tmp28 = this->ignore_euler;
            				}
            				else {
HXLINE(  32)					_hx_tmp28 = true;
            				}
HXDLIN(  32)				if (!(_hx_tmp28)) {
HXLINE(  32)					_hx_tmp27 = this->_construct;
            				}
            				else {
HXLINE(  32)					_hx_tmp27 = true;
            				}
HXDLIN(  32)				if (!(_hx_tmp27)) {
HXLINE(  32)					 ::phoenix::Vector _this3 = this->euler;
HXDLIN(  32)					int order3 = (int)0;
HXDLIN(  32)					Float sqx3 = (this->x * this->x);
HXDLIN(  32)					Float sqy3 = (this->y * this->y);
HXDLIN(  32)					Float sqz3 = (this->z * this->z);
HXDLIN(  32)					Float sqw3 = (this->w * this->w);
HXDLIN(  32)					Float _x34 = _this3->x;
HXDLIN(  32)					Float _y34 = _this3->y;
HXDLIN(  32)					Float _z34 = _this3->z;
HXDLIN(  32)					if ((order3 == (int)0)) {
HXLINE(  32)						Float _x35 = (this->x * this->w);
HXDLIN(  32)						Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN(  32)						_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  32)						Float value36 = (this->x * this->z);
HXDLIN(  32)						Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN(  32)						Float _y35;
HXDLIN(  32)						if ((value37 < (int)-1)) {
HXLINE(  32)							_y35 = (int)-1;
            						}
            						else {
HXLINE(  32)							if ((value37 > (int)1)) {
HXLINE(  32)								_y35 = (int)1;
            							}
            							else {
HXLINE(  32)								_y35 = value37;
            							}
            						}
HXDLIN(  32)						_y34 = ::Math_obj::asin(_y35);
HXDLIN(  32)						Float _z35 = (this->z * this->w);
HXDLIN(  32)						Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN(  32)						_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            					}
            					else {
HXLINE(  32)						if ((order3 == (int)1)) {
HXLINE(  32)							Float value38 = (this->x * this->w);
HXDLIN(  32)							Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN(  32)							Float _x37;
HXDLIN(  32)							if ((value39 < (int)-1)) {
HXLINE(  32)								_x37 = (int)-1;
            							}
            							else {
HXLINE(  32)								if ((value39 > (int)1)) {
HXLINE(  32)									_x37 = (int)1;
            								}
            								else {
HXLINE(  32)									_x37 = value39;
            								}
            							}
HXDLIN(  32)							_x34 = ::Math_obj::asin(_x37);
HXDLIN(  32)							Float _y36 = (this->x * this->z);
HXDLIN(  32)							Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN(  32)							_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  32)							Float _z37 = (this->x * this->y);
HXDLIN(  32)							Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN(  32)							_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            						}
            						else {
HXLINE(  32)							if ((order3 == (int)2)) {
HXLINE(  32)								Float value40 = (this->x * this->w);
HXDLIN(  32)								Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN(  32)								Float _x38;
HXDLIN(  32)								if ((value41 < (int)-1)) {
HXLINE(  32)									_x38 = (int)-1;
            								}
            								else {
HXLINE(  32)									if ((value41 > (int)1)) {
HXLINE(  32)										_x38 = (int)1;
            									}
            									else {
HXLINE(  32)										_x38 = value41;
            									}
            								}
HXDLIN(  32)								_x34 = ::Math_obj::asin(_x38);
HXDLIN(  32)								Float _y38 = (this->y * this->w);
HXDLIN(  32)								Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN(  32)								_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  32)								Float _z39 = (this->z * this->w);
HXDLIN(  32)								Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN(  32)								_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE(  32)								if ((order3 == (int)3)) {
HXLINE(  32)									Float _x39 = (this->x * this->w);
HXDLIN(  32)									Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN(  32)									_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  32)									Float value42 = (this->y * this->w);
HXDLIN(  32)									Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN(  32)									Float _y40;
HXDLIN(  32)									if ((value43 < (int)-1)) {
HXLINE(  32)										_y40 = (int)-1;
            									}
            									else {
HXLINE(  32)										if ((value43 > (int)1)) {
HXLINE(  32)											_y40 = (int)1;
            										}
            										else {
HXLINE(  32)											_y40 = value43;
            										}
            									}
HXDLIN(  32)									_y34 = ::Math_obj::asin(_y40);
HXDLIN(  32)									Float _z41 = (this->x * this->y);
HXDLIN(  32)									Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN(  32)									_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            								}
            								else {
HXLINE(  32)									if ((order3 == (int)4)) {
HXLINE(  32)										Float _x41 = (this->x * this->w);
HXDLIN(  32)										Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN(  32)										_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN(  32)										Float _y41 = (this->y * this->w);
HXDLIN(  32)										Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN(  32)										_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN(  32)										Float value44 = (this->x * this->y);
HXDLIN(  32)										Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN(  32)										Float _z43;
HXDLIN(  32)										if ((value45 < (int)-1)) {
HXLINE(  32)											_z43 = (int)-1;
            										}
            										else {
HXLINE(  32)											if ((value45 > (int)1)) {
HXLINE(  32)												_z43 = (int)1;
            											}
            											else {
HXLINE(  32)												_z43 = value45;
            											}
            										}
HXDLIN(  32)										_z34 = ::Math_obj::asin(_z43);
            									}
            									else {
HXLINE(  32)										if ((order3 == (int)5)) {
HXLINE(  32)											Float _x43 = (this->x * this->w);
HXDLIN(  32)											Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN(  32)											_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN(  32)											Float _y43 = (this->x * this->z);
HXDLIN(  32)											Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN(  32)											_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN(  32)											Float value46 = (this->z * this->w);
HXDLIN(  32)											Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN(  32)											Float _z44;
HXDLIN(  32)											if ((value47 < (int)-1)) {
HXLINE(  32)												_z44 = (int)-1;
            											}
            											else {
HXLINE(  32)												if ((value47 > (int)1)) {
HXLINE(  32)													_z44 = (int)1;
            												}
            												else {
HXLINE(  32)													_z44 = value47;
            												}
            											}
HXDLIN(  32)											_z34 = ::Math_obj::asin(_z44);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN(  32)					{
HXLINE(  32)						bool prev3 = _this3->ignore_listeners;
HXDLIN(  32)						_this3->ignore_listeners = true;
HXDLIN(  32)						{
HXLINE(  32)							_this3->x = _x34;
HXDLIN(  32)							if (!(_this3->_construct)) {
HXLINE(  32)								bool _hx_tmp29;
HXDLIN(  32)								if (hx::IsNotNull( _this3->listen_x )) {
HXLINE(  32)									_hx_tmp29 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE(  32)									_hx_tmp29 = false;
            								}
HXDLIN(  32)								if (_hx_tmp29) {
HXLINE(  32)									_this3->listen_x(_x34);
            								}
            							}
            						}
HXDLIN(  32)						{
HXLINE(  32)							_this3->y = _y34;
HXDLIN(  32)							if (!(_this3->_construct)) {
HXLINE(  32)								bool _hx_tmp30;
HXDLIN(  32)								if (hx::IsNotNull( _this3->listen_y )) {
HXLINE(  32)									_hx_tmp30 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE(  32)									_hx_tmp30 = false;
            								}
HXDLIN(  32)								if (_hx_tmp30) {
HXLINE(  32)									_this3->listen_y(_y34);
            								}
            							}
            						}
HXDLIN(  32)						{
HXLINE(  32)							_this3->z = _z34;
HXDLIN(  32)							if (!(_this3->_construct)) {
HXLINE(  32)								bool _hx_tmp31;
HXDLIN(  32)								if (hx::IsNotNull( _this3->listen_z )) {
HXLINE(  32)									_hx_tmp31 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE(  32)									_hx_tmp31 = false;
            								}
HXDLIN(  32)								if (_hx_tmp31) {
HXLINE(  32)									_this3->listen_z(_z34);
            								}
            							}
            						}
HXDLIN(  32)						_this3->ignore_listeners = prev3;
HXDLIN(  32)						bool _hx_tmp32;
HXDLIN(  32)						if (hx::IsNotNull( _this3->listen_x )) {
HXLINE(  32)							_hx_tmp32 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE(  32)							_hx_tmp32 = false;
            						}
HXDLIN(  32)						if (_hx_tmp32) {
HXLINE(  32)							_this3->listen_x(_this3->x);
            						}
HXDLIN(  32)						bool _hx_tmp33;
HXDLIN(  32)						if (hx::IsNotNull( _this3->listen_y )) {
HXLINE(  32)							_hx_tmp33 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE(  32)							_hx_tmp33 = false;
            						}
HXDLIN(  32)						if (_hx_tmp33) {
HXLINE(  32)							_this3->listen_y(_this3->y);
            						}
HXDLIN(  32)						bool _hx_tmp34;
HXDLIN(  32)						if (hx::IsNotNull( _this3->listen_z )) {
HXLINE(  32)							_hx_tmp34 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE(  32)							_hx_tmp34 = false;
            						}
HXDLIN(  32)						if (_hx_tmp34) {
HXLINE(  32)							_this3->listen_z(_this3->z);
            						}
            					}
            				}
HXDLIN(  32)				bool _hx_tmp35;
HXDLIN(  32)				if (hx::IsNotNull( this->listen_w )) {
HXLINE(  32)					_hx_tmp35 = !(this->ignore_listeners);
            				}
            				else {
HXLINE(  32)					_hx_tmp35 = false;
            				}
HXDLIN(  32)				if (_hx_tmp35) {
HXLINE(  32)					this->listen_w(this->w);
            				}
            			}
            		}
HXLINE(  34)		this->euler =  ::phoenix::Vector_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE(  36)		this->_construct = false;
            	}

Dynamic Quaternion_obj::__CreateEmpty() { return new Quaternion_obj; }

void *Quaternion_obj::_hx_vtable = 0;

Dynamic Quaternion_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Quaternion_obj > _hx_result = new Quaternion_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Quaternion_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fb82d35;
}

::String Quaternion_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_42_toString)
HXDLIN(  42)		return ((((((((HX_("{ x:",47,ef,65,51) + this->x) + HX_(", y:",15,15,2e,1d)) + this->y) + HX_(", z:",f4,15,2e,1d)) + this->z) + HX_(", w:",57,13,2e,1d)) + this->w) + HX_(" }",5d,1c,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,toString,return )

 ::phoenix::Quaternion Quaternion_obj::set(Float _x,Float _y,Float _z,Float _w){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_46_set)
HXLINE(  48)		{
HXLINE(  48)			this->ignore_euler = true;
HXDLIN(  48)			{
HXLINE(  48)				this->x = _x;
HXDLIN(  48)				if (!(this->_construct)) {
HXLINE(  48)					bool _hx_tmp;
HXDLIN(  48)					bool _hx_tmp1;
HXDLIN(  48)					if (hx::IsNotNull( this->euler )) {
HXLINE(  48)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE(  48)						_hx_tmp1 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp1)) {
HXLINE(  48)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE(  48)						_hx_tmp = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp)) {
HXLINE(  48)						 ::phoenix::Vector _this = this->euler;
HXDLIN(  48)						int order = (int)0;
HXDLIN(  48)						Float sqx = (this->x * this->x);
HXDLIN(  48)						Float sqy = (this->y * this->y);
HXDLIN(  48)						Float sqz = (this->z * this->z);
HXDLIN(  48)						Float sqw = (this->w * this->w);
HXDLIN(  48)						Float _x1 = _this->x;
HXDLIN(  48)						Float _y1 = _this->y;
HXDLIN(  48)						Float _z1 = _this->z;
HXDLIN(  48)						if ((order == (int)0)) {
HXLINE(  48)							Float _x2 = (this->x * this->w);
HXDLIN(  48)							Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN(  48)							_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  48)							Float value = (this->x * this->z);
HXDLIN(  48)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN(  48)							Float _y2;
HXDLIN(  48)							if ((value1 < (int)-1)) {
HXLINE(  48)								_y2 = (int)-1;
            							}
            							else {
HXLINE(  48)								if ((value1 > (int)1)) {
HXLINE(  48)									_y2 = (int)1;
            								}
            								else {
HXLINE(  48)									_y2 = value1;
            								}
            							}
HXDLIN(  48)							_y1 = ::Math_obj::asin(_y2);
HXDLIN(  48)							Float _z2 = (this->z * this->w);
HXDLIN(  48)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN(  48)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE(  48)							if ((order == (int)1)) {
HXLINE(  48)								Float value2 = (this->x * this->w);
HXDLIN(  48)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN(  48)								Float _x4;
HXDLIN(  48)								if ((value3 < (int)-1)) {
HXLINE(  48)									_x4 = (int)-1;
            								}
            								else {
HXLINE(  48)									if ((value3 > (int)1)) {
HXLINE(  48)										_x4 = (int)1;
            									}
            									else {
HXLINE(  48)										_x4 = value3;
            									}
            								}
HXDLIN(  48)								_x1 = ::Math_obj::asin(_x4);
HXDLIN(  48)								Float _y3 = (this->x * this->z);
HXDLIN(  48)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN(  48)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  48)								Float _z4 = (this->x * this->y);
HXDLIN(  48)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN(  48)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE(  48)								if ((order == (int)2)) {
HXLINE(  48)									Float value4 = (this->x * this->w);
HXDLIN(  48)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN(  48)									Float _x5;
HXDLIN(  48)									if ((value5 < (int)-1)) {
HXLINE(  48)										_x5 = (int)-1;
            									}
            									else {
HXLINE(  48)										if ((value5 > (int)1)) {
HXLINE(  48)											_x5 = (int)1;
            										}
            										else {
HXLINE(  48)											_x5 = value5;
            										}
            									}
HXDLIN(  48)									_x1 = ::Math_obj::asin(_x5);
HXDLIN(  48)									Float _y5 = (this->y * this->w);
HXDLIN(  48)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN(  48)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  48)									Float _z6 = (this->z * this->w);
HXDLIN(  48)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN(  48)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE(  48)									if ((order == (int)3)) {
HXLINE(  48)										Float _x6 = (this->x * this->w);
HXDLIN(  48)										Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN(  48)										_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  48)										Float value6 = (this->y * this->w);
HXDLIN(  48)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN(  48)										Float _y7;
HXDLIN(  48)										if ((value7 < (int)-1)) {
HXLINE(  48)											_y7 = (int)-1;
            										}
            										else {
HXLINE(  48)											if ((value7 > (int)1)) {
HXLINE(  48)												_y7 = (int)1;
            											}
            											else {
HXLINE(  48)												_y7 = value7;
            											}
            										}
HXDLIN(  48)										_y1 = ::Math_obj::asin(_y7);
HXDLIN(  48)										Float _z8 = (this->x * this->y);
HXDLIN(  48)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN(  48)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE(  48)										if ((order == (int)4)) {
HXLINE(  48)											Float _x8 = (this->x * this->w);
HXDLIN(  48)											Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN(  48)											_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN(  48)											Float _y8 = (this->y * this->w);
HXDLIN(  48)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN(  48)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN(  48)											Float value8 = (this->x * this->y);
HXDLIN(  48)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN(  48)											Float _z10;
HXDLIN(  48)											if ((value9 < (int)-1)) {
HXLINE(  48)												_z10 = (int)-1;
            											}
            											else {
HXLINE(  48)												if ((value9 > (int)1)) {
HXLINE(  48)													_z10 = (int)1;
            												}
            												else {
HXLINE(  48)													_z10 = value9;
            												}
            											}
HXDLIN(  48)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE(  48)											if ((order == (int)5)) {
HXLINE(  48)												Float _x10 = (this->x * this->w);
HXDLIN(  48)												Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN(  48)												_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN(  48)												Float _y10 = (this->x * this->z);
HXDLIN(  48)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN(  48)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN(  48)												Float value10 = (this->z * this->w);
HXDLIN(  48)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN(  48)												Float _z11;
HXDLIN(  48)												if ((value11 < (int)-1)) {
HXLINE(  48)													_z11 = (int)-1;
            												}
            												else {
HXLINE(  48)													if ((value11 > (int)1)) {
HXLINE(  48)														_z11 = (int)1;
            													}
            													else {
HXLINE(  48)														_z11 = value11;
            													}
            												}
HXDLIN(  48)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  48)						{
HXLINE(  48)							bool prev = _this->ignore_listeners;
HXDLIN(  48)							_this->ignore_listeners = true;
HXDLIN(  48)							{
HXLINE(  48)								_this->x = _x1;
HXDLIN(  48)								if (!(_this->_construct)) {
HXLINE(  48)									bool _hx_tmp2;
HXDLIN(  48)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE(  48)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp2 = false;
            									}
HXDLIN(  48)									if (_hx_tmp2) {
HXLINE(  48)										_this->listen_x(_x1);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this->y = _y1;
HXDLIN(  48)								if (!(_this->_construct)) {
HXLINE(  48)									bool _hx_tmp3;
HXDLIN(  48)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE(  48)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp3 = false;
            									}
HXDLIN(  48)									if (_hx_tmp3) {
HXLINE(  48)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this->z = _z1;
HXDLIN(  48)								if (!(_this->_construct)) {
HXLINE(  48)									bool _hx_tmp4;
HXDLIN(  48)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE(  48)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp4 = false;
            									}
HXDLIN(  48)									if (_hx_tmp4) {
HXLINE(  48)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN(  48)							_this->ignore_listeners = prev;
HXDLIN(  48)							bool _hx_tmp5;
HXDLIN(  48)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE(  48)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp5 = false;
            							}
HXDLIN(  48)							if (_hx_tmp5) {
HXLINE(  48)								_this->listen_x(_this->x);
            							}
HXDLIN(  48)							bool _hx_tmp6;
HXDLIN(  48)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE(  48)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp6 = false;
            							}
HXDLIN(  48)							if (_hx_tmp6) {
HXLINE(  48)								_this->listen_y(_this->y);
            							}
HXDLIN(  48)							bool _hx_tmp7;
HXDLIN(  48)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE(  48)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp7 = false;
            							}
HXDLIN(  48)							if (_hx_tmp7) {
HXLINE(  48)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN(  48)					bool _hx_tmp8;
HXDLIN(  48)					if (hx::IsNotNull( this->listen_x )) {
HXLINE(  48)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp8 = false;
            					}
HXDLIN(  48)					if (_hx_tmp8) {
HXLINE(  48)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN(  48)			{
HXLINE(  48)				this->y = _y;
HXDLIN(  48)				if (!(this->_construct)) {
HXLINE(  48)					bool _hx_tmp9;
HXDLIN(  48)					bool _hx_tmp10;
HXDLIN(  48)					if (hx::IsNotNull( this->euler )) {
HXLINE(  48)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE(  48)						_hx_tmp10 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp10)) {
HXLINE(  48)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE(  48)						_hx_tmp9 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp9)) {
HXLINE(  48)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN(  48)						int order1 = (int)0;
HXDLIN(  48)						Float sqx1 = (this->x * this->x);
HXDLIN(  48)						Float sqy1 = (this->y * this->y);
HXDLIN(  48)						Float sqz1 = (this->z * this->z);
HXDLIN(  48)						Float sqw1 = (this->w * this->w);
HXDLIN(  48)						Float _x12 = _this1->x;
HXDLIN(  48)						Float _y12 = _this1->y;
HXDLIN(  48)						Float _z12 = _this1->z;
HXDLIN(  48)						if ((order1 == (int)0)) {
HXLINE(  48)							Float _x13 = (this->x * this->w);
HXDLIN(  48)							Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN(  48)							_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  48)							Float value12 = (this->x * this->z);
HXDLIN(  48)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN(  48)							Float _y13;
HXDLIN(  48)							if ((value13 < (int)-1)) {
HXLINE(  48)								_y13 = (int)-1;
            							}
            							else {
HXLINE(  48)								if ((value13 > (int)1)) {
HXLINE(  48)									_y13 = (int)1;
            								}
            								else {
HXLINE(  48)									_y13 = value13;
            								}
            							}
HXDLIN(  48)							_y12 = ::Math_obj::asin(_y13);
HXDLIN(  48)							Float _z13 = (this->z * this->w);
HXDLIN(  48)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN(  48)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE(  48)							if ((order1 == (int)1)) {
HXLINE(  48)								Float value14 = (this->x * this->w);
HXDLIN(  48)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN(  48)								Float _x15;
HXDLIN(  48)								if ((value15 < (int)-1)) {
HXLINE(  48)									_x15 = (int)-1;
            								}
            								else {
HXLINE(  48)									if ((value15 > (int)1)) {
HXLINE(  48)										_x15 = (int)1;
            									}
            									else {
HXLINE(  48)										_x15 = value15;
            									}
            								}
HXDLIN(  48)								_x12 = ::Math_obj::asin(_x15);
HXDLIN(  48)								Float _y14 = (this->x * this->z);
HXDLIN(  48)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN(  48)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  48)								Float _z15 = (this->x * this->y);
HXDLIN(  48)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN(  48)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE(  48)								if ((order1 == (int)2)) {
HXLINE(  48)									Float value16 = (this->x * this->w);
HXDLIN(  48)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN(  48)									Float _x16;
HXDLIN(  48)									if ((value17 < (int)-1)) {
HXLINE(  48)										_x16 = (int)-1;
            									}
            									else {
HXLINE(  48)										if ((value17 > (int)1)) {
HXLINE(  48)											_x16 = (int)1;
            										}
            										else {
HXLINE(  48)											_x16 = value17;
            										}
            									}
HXDLIN(  48)									_x12 = ::Math_obj::asin(_x16);
HXDLIN(  48)									Float _y16 = (this->y * this->w);
HXDLIN(  48)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN(  48)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  48)									Float _z17 = (this->z * this->w);
HXDLIN(  48)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN(  48)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE(  48)									if ((order1 == (int)3)) {
HXLINE(  48)										Float _x17 = (this->x * this->w);
HXDLIN(  48)										Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN(  48)										_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  48)										Float value18 = (this->y * this->w);
HXDLIN(  48)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN(  48)										Float _y18;
HXDLIN(  48)										if ((value19 < (int)-1)) {
HXLINE(  48)											_y18 = (int)-1;
            										}
            										else {
HXLINE(  48)											if ((value19 > (int)1)) {
HXLINE(  48)												_y18 = (int)1;
            											}
            											else {
HXLINE(  48)												_y18 = value19;
            											}
            										}
HXDLIN(  48)										_y12 = ::Math_obj::asin(_y18);
HXDLIN(  48)										Float _z19 = (this->x * this->y);
HXDLIN(  48)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN(  48)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE(  48)										if ((order1 == (int)4)) {
HXLINE(  48)											Float _x19 = (this->x * this->w);
HXDLIN(  48)											Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN(  48)											_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN(  48)											Float _y19 = (this->y * this->w);
HXDLIN(  48)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN(  48)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN(  48)											Float value20 = (this->x * this->y);
HXDLIN(  48)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN(  48)											Float _z21;
HXDLIN(  48)											if ((value21 < (int)-1)) {
HXLINE(  48)												_z21 = (int)-1;
            											}
            											else {
HXLINE(  48)												if ((value21 > (int)1)) {
HXLINE(  48)													_z21 = (int)1;
            												}
            												else {
HXLINE(  48)													_z21 = value21;
            												}
            											}
HXDLIN(  48)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE(  48)											if ((order1 == (int)5)) {
HXLINE(  48)												Float _x21 = (this->x * this->w);
HXDLIN(  48)												Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN(  48)												_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN(  48)												Float _y21 = (this->x * this->z);
HXDLIN(  48)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN(  48)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN(  48)												Float value22 = (this->z * this->w);
HXDLIN(  48)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN(  48)												Float _z22;
HXDLIN(  48)												if ((value23 < (int)-1)) {
HXLINE(  48)													_z22 = (int)-1;
            												}
            												else {
HXLINE(  48)													if ((value23 > (int)1)) {
HXLINE(  48)														_z22 = (int)1;
            													}
            													else {
HXLINE(  48)														_z22 = value23;
            													}
            												}
HXDLIN(  48)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  48)						{
HXLINE(  48)							bool prev1 = _this1->ignore_listeners;
HXDLIN(  48)							_this1->ignore_listeners = true;
HXDLIN(  48)							{
HXLINE(  48)								_this1->x = _x12;
HXDLIN(  48)								if (!(_this1->_construct)) {
HXLINE(  48)									bool _hx_tmp11;
HXDLIN(  48)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE(  48)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp11 = false;
            									}
HXDLIN(  48)									if (_hx_tmp11) {
HXLINE(  48)										_this1->listen_x(_x12);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this1->y = _y12;
HXDLIN(  48)								if (!(_this1->_construct)) {
HXLINE(  48)									bool _hx_tmp12;
HXDLIN(  48)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE(  48)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp12 = false;
            									}
HXDLIN(  48)									if (_hx_tmp12) {
HXLINE(  48)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this1->z = _z12;
HXDLIN(  48)								if (!(_this1->_construct)) {
HXLINE(  48)									bool _hx_tmp13;
HXDLIN(  48)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE(  48)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp13 = false;
            									}
HXDLIN(  48)									if (_hx_tmp13) {
HXLINE(  48)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN(  48)							_this1->ignore_listeners = prev1;
HXDLIN(  48)							bool _hx_tmp14;
HXDLIN(  48)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE(  48)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp14 = false;
            							}
HXDLIN(  48)							if (_hx_tmp14) {
HXLINE(  48)								_this1->listen_x(_this1->x);
            							}
HXDLIN(  48)							bool _hx_tmp15;
HXDLIN(  48)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE(  48)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp15 = false;
            							}
HXDLIN(  48)							if (_hx_tmp15) {
HXLINE(  48)								_this1->listen_y(_this1->y);
            							}
HXDLIN(  48)							bool _hx_tmp16;
HXDLIN(  48)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE(  48)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp16 = false;
            							}
HXDLIN(  48)							if (_hx_tmp16) {
HXLINE(  48)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN(  48)					bool _hx_tmp17;
HXDLIN(  48)					if (hx::IsNotNull( this->listen_y )) {
HXLINE(  48)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp17 = false;
            					}
HXDLIN(  48)					if (_hx_tmp17) {
HXLINE(  48)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN(  48)			{
HXLINE(  48)				this->z = _z;
HXDLIN(  48)				if (!(this->_construct)) {
HXLINE(  48)					bool _hx_tmp18;
HXDLIN(  48)					bool _hx_tmp19;
HXDLIN(  48)					if (hx::IsNotNull( this->euler )) {
HXLINE(  48)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE(  48)						_hx_tmp19 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp19)) {
HXLINE(  48)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE(  48)						_hx_tmp18 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp18)) {
HXLINE(  48)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN(  48)						int order2 = (int)0;
HXDLIN(  48)						Float sqx2 = (this->x * this->x);
HXDLIN(  48)						Float sqy2 = (this->y * this->y);
HXDLIN(  48)						Float sqz2 = (this->z * this->z);
HXDLIN(  48)						Float sqw2 = (this->w * this->w);
HXDLIN(  48)						Float _x23 = _this2->x;
HXDLIN(  48)						Float _y23 = _this2->y;
HXDLIN(  48)						Float _z23 = _this2->z;
HXDLIN(  48)						if ((order2 == (int)0)) {
HXLINE(  48)							Float _x24 = (this->x * this->w);
HXDLIN(  48)							Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN(  48)							_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  48)							Float value24 = (this->x * this->z);
HXDLIN(  48)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN(  48)							Float _y24;
HXDLIN(  48)							if ((value25 < (int)-1)) {
HXLINE(  48)								_y24 = (int)-1;
            							}
            							else {
HXLINE(  48)								if ((value25 > (int)1)) {
HXLINE(  48)									_y24 = (int)1;
            								}
            								else {
HXLINE(  48)									_y24 = value25;
            								}
            							}
HXDLIN(  48)							_y23 = ::Math_obj::asin(_y24);
HXDLIN(  48)							Float _z24 = (this->z * this->w);
HXDLIN(  48)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN(  48)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE(  48)							if ((order2 == (int)1)) {
HXLINE(  48)								Float value26 = (this->x * this->w);
HXDLIN(  48)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN(  48)								Float _x26;
HXDLIN(  48)								if ((value27 < (int)-1)) {
HXLINE(  48)									_x26 = (int)-1;
            								}
            								else {
HXLINE(  48)									if ((value27 > (int)1)) {
HXLINE(  48)										_x26 = (int)1;
            									}
            									else {
HXLINE(  48)										_x26 = value27;
            									}
            								}
HXDLIN(  48)								_x23 = ::Math_obj::asin(_x26);
HXDLIN(  48)								Float _y25 = (this->x * this->z);
HXDLIN(  48)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN(  48)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  48)								Float _z26 = (this->x * this->y);
HXDLIN(  48)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN(  48)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE(  48)								if ((order2 == (int)2)) {
HXLINE(  48)									Float value28 = (this->x * this->w);
HXDLIN(  48)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN(  48)									Float _x27;
HXDLIN(  48)									if ((value29 < (int)-1)) {
HXLINE(  48)										_x27 = (int)-1;
            									}
            									else {
HXLINE(  48)										if ((value29 > (int)1)) {
HXLINE(  48)											_x27 = (int)1;
            										}
            										else {
HXLINE(  48)											_x27 = value29;
            										}
            									}
HXDLIN(  48)									_x23 = ::Math_obj::asin(_x27);
HXDLIN(  48)									Float _y27 = (this->y * this->w);
HXDLIN(  48)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN(  48)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  48)									Float _z28 = (this->z * this->w);
HXDLIN(  48)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN(  48)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE(  48)									if ((order2 == (int)3)) {
HXLINE(  48)										Float _x28 = (this->x * this->w);
HXDLIN(  48)										Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN(  48)										_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  48)										Float value30 = (this->y * this->w);
HXDLIN(  48)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN(  48)										Float _y29;
HXDLIN(  48)										if ((value31 < (int)-1)) {
HXLINE(  48)											_y29 = (int)-1;
            										}
            										else {
HXLINE(  48)											if ((value31 > (int)1)) {
HXLINE(  48)												_y29 = (int)1;
            											}
            											else {
HXLINE(  48)												_y29 = value31;
            											}
            										}
HXDLIN(  48)										_y23 = ::Math_obj::asin(_y29);
HXDLIN(  48)										Float _z30 = (this->x * this->y);
HXDLIN(  48)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN(  48)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE(  48)										if ((order2 == (int)4)) {
HXLINE(  48)											Float _x30 = (this->x * this->w);
HXDLIN(  48)											Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN(  48)											_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN(  48)											Float _y30 = (this->y * this->w);
HXDLIN(  48)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN(  48)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN(  48)											Float value32 = (this->x * this->y);
HXDLIN(  48)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN(  48)											Float _z32;
HXDLIN(  48)											if ((value33 < (int)-1)) {
HXLINE(  48)												_z32 = (int)-1;
            											}
            											else {
HXLINE(  48)												if ((value33 > (int)1)) {
HXLINE(  48)													_z32 = (int)1;
            												}
            												else {
HXLINE(  48)													_z32 = value33;
            												}
            											}
HXDLIN(  48)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE(  48)											if ((order2 == (int)5)) {
HXLINE(  48)												Float _x32 = (this->x * this->w);
HXDLIN(  48)												Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN(  48)												_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN(  48)												Float _y32 = (this->x * this->z);
HXDLIN(  48)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN(  48)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN(  48)												Float value34 = (this->z * this->w);
HXDLIN(  48)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN(  48)												Float _z33;
HXDLIN(  48)												if ((value35 < (int)-1)) {
HXLINE(  48)													_z33 = (int)-1;
            												}
            												else {
HXLINE(  48)													if ((value35 > (int)1)) {
HXLINE(  48)														_z33 = (int)1;
            													}
            													else {
HXLINE(  48)														_z33 = value35;
            													}
            												}
HXDLIN(  48)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  48)						{
HXLINE(  48)							bool prev2 = _this2->ignore_listeners;
HXDLIN(  48)							_this2->ignore_listeners = true;
HXDLIN(  48)							{
HXLINE(  48)								_this2->x = _x23;
HXDLIN(  48)								if (!(_this2->_construct)) {
HXLINE(  48)									bool _hx_tmp20;
HXDLIN(  48)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE(  48)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp20 = false;
            									}
HXDLIN(  48)									if (_hx_tmp20) {
HXLINE(  48)										_this2->listen_x(_x23);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this2->y = _y23;
HXDLIN(  48)								if (!(_this2->_construct)) {
HXLINE(  48)									bool _hx_tmp21;
HXDLIN(  48)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE(  48)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp21 = false;
            									}
HXDLIN(  48)									if (_hx_tmp21) {
HXLINE(  48)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this2->z = _z23;
HXDLIN(  48)								if (!(_this2->_construct)) {
HXLINE(  48)									bool _hx_tmp22;
HXDLIN(  48)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE(  48)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp22 = false;
            									}
HXDLIN(  48)									if (_hx_tmp22) {
HXLINE(  48)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN(  48)							_this2->ignore_listeners = prev2;
HXDLIN(  48)							bool _hx_tmp23;
HXDLIN(  48)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE(  48)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp23 = false;
            							}
HXDLIN(  48)							if (_hx_tmp23) {
HXLINE(  48)								_this2->listen_x(_this2->x);
            							}
HXDLIN(  48)							bool _hx_tmp24;
HXDLIN(  48)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE(  48)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp24 = false;
            							}
HXDLIN(  48)							if (_hx_tmp24) {
HXLINE(  48)								_this2->listen_y(_this2->y);
            							}
HXDLIN(  48)							bool _hx_tmp25;
HXDLIN(  48)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE(  48)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp25 = false;
            							}
HXDLIN(  48)							if (_hx_tmp25) {
HXLINE(  48)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN(  48)					bool _hx_tmp26;
HXDLIN(  48)					if (hx::IsNotNull( this->listen_z )) {
HXLINE(  48)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp26 = false;
            					}
HXDLIN(  48)					if (_hx_tmp26) {
HXLINE(  48)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN(  48)			{
HXLINE(  48)				this->w = _w;
HXDLIN(  48)				if (!(this->_construct)) {
HXLINE(  48)					bool _hx_tmp27;
HXDLIN(  48)					bool _hx_tmp28;
HXDLIN(  48)					if (hx::IsNotNull( this->euler )) {
HXLINE(  48)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE(  48)						_hx_tmp28 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp28)) {
HXLINE(  48)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE(  48)						_hx_tmp27 = true;
            					}
HXDLIN(  48)					if (!(_hx_tmp27)) {
HXLINE(  48)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN(  48)						int order3 = (int)0;
HXDLIN(  48)						Float sqx3 = (this->x * this->x);
HXDLIN(  48)						Float sqy3 = (this->y * this->y);
HXDLIN(  48)						Float sqz3 = (this->z * this->z);
HXDLIN(  48)						Float sqw3 = (this->w * this->w);
HXDLIN(  48)						Float _x34 = _this3->x;
HXDLIN(  48)						Float _y34 = _this3->y;
HXDLIN(  48)						Float _z34 = _this3->z;
HXDLIN(  48)						if ((order3 == (int)0)) {
HXLINE(  48)							Float _x35 = (this->x * this->w);
HXDLIN(  48)							Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN(  48)							_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  48)							Float value36 = (this->x * this->z);
HXDLIN(  48)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN(  48)							Float _y35;
HXDLIN(  48)							if ((value37 < (int)-1)) {
HXLINE(  48)								_y35 = (int)-1;
            							}
            							else {
HXLINE(  48)								if ((value37 > (int)1)) {
HXLINE(  48)									_y35 = (int)1;
            								}
            								else {
HXLINE(  48)									_y35 = value37;
            								}
            							}
HXDLIN(  48)							_y34 = ::Math_obj::asin(_y35);
HXDLIN(  48)							Float _z35 = (this->z * this->w);
HXDLIN(  48)							Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN(  48)							_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE(  48)							if ((order3 == (int)1)) {
HXLINE(  48)								Float value38 = (this->x * this->w);
HXDLIN(  48)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN(  48)								Float _x37;
HXDLIN(  48)								if ((value39 < (int)-1)) {
HXLINE(  48)									_x37 = (int)-1;
            								}
            								else {
HXLINE(  48)									if ((value39 > (int)1)) {
HXLINE(  48)										_x37 = (int)1;
            									}
            									else {
HXLINE(  48)										_x37 = value39;
            									}
            								}
HXDLIN(  48)								_x34 = ::Math_obj::asin(_x37);
HXDLIN(  48)								Float _y36 = (this->x * this->z);
HXDLIN(  48)								Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN(  48)								_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  48)								Float _z37 = (this->x * this->y);
HXDLIN(  48)								Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN(  48)								_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE(  48)								if ((order3 == (int)2)) {
HXLINE(  48)									Float value40 = (this->x * this->w);
HXDLIN(  48)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN(  48)									Float _x38;
HXDLIN(  48)									if ((value41 < (int)-1)) {
HXLINE(  48)										_x38 = (int)-1;
            									}
            									else {
HXLINE(  48)										if ((value41 > (int)1)) {
HXLINE(  48)											_x38 = (int)1;
            										}
            										else {
HXLINE(  48)											_x38 = value41;
            										}
            									}
HXDLIN(  48)									_x34 = ::Math_obj::asin(_x38);
HXDLIN(  48)									Float _y38 = (this->y * this->w);
HXDLIN(  48)									Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN(  48)									_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  48)									Float _z39 = (this->z * this->w);
HXDLIN(  48)									Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN(  48)									_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE(  48)									if ((order3 == (int)3)) {
HXLINE(  48)										Float _x39 = (this->x * this->w);
HXDLIN(  48)										Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN(  48)										_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  48)										Float value42 = (this->y * this->w);
HXDLIN(  48)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN(  48)										Float _y40;
HXDLIN(  48)										if ((value43 < (int)-1)) {
HXLINE(  48)											_y40 = (int)-1;
            										}
            										else {
HXLINE(  48)											if ((value43 > (int)1)) {
HXLINE(  48)												_y40 = (int)1;
            											}
            											else {
HXLINE(  48)												_y40 = value43;
            											}
            										}
HXDLIN(  48)										_y34 = ::Math_obj::asin(_y40);
HXDLIN(  48)										Float _z41 = (this->x * this->y);
HXDLIN(  48)										Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN(  48)										_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE(  48)										if ((order3 == (int)4)) {
HXLINE(  48)											Float _x41 = (this->x * this->w);
HXDLIN(  48)											Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN(  48)											_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN(  48)											Float _y41 = (this->y * this->w);
HXDLIN(  48)											Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN(  48)											_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN(  48)											Float value44 = (this->x * this->y);
HXDLIN(  48)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN(  48)											Float _z43;
HXDLIN(  48)											if ((value45 < (int)-1)) {
HXLINE(  48)												_z43 = (int)-1;
            											}
            											else {
HXLINE(  48)												if ((value45 > (int)1)) {
HXLINE(  48)													_z43 = (int)1;
            												}
            												else {
HXLINE(  48)													_z43 = value45;
            												}
            											}
HXDLIN(  48)											_z34 = ::Math_obj::asin(_z43);
            										}
            										else {
HXLINE(  48)											if ((order3 == (int)5)) {
HXLINE(  48)												Float _x43 = (this->x * this->w);
HXDLIN(  48)												Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN(  48)												_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN(  48)												Float _y43 = (this->x * this->z);
HXDLIN(  48)												Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN(  48)												_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN(  48)												Float value46 = (this->z * this->w);
HXDLIN(  48)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN(  48)												Float _z44;
HXDLIN(  48)												if ((value47 < (int)-1)) {
HXLINE(  48)													_z44 = (int)-1;
            												}
            												else {
HXLINE(  48)													if ((value47 > (int)1)) {
HXLINE(  48)														_z44 = (int)1;
            													}
            													else {
HXLINE(  48)														_z44 = value47;
            													}
            												}
HXDLIN(  48)												_z34 = ::Math_obj::asin(_z44);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  48)						{
HXLINE(  48)							bool prev3 = _this3->ignore_listeners;
HXDLIN(  48)							_this3->ignore_listeners = true;
HXDLIN(  48)							{
HXLINE(  48)								_this3->x = _x34;
HXDLIN(  48)								if (!(_this3->_construct)) {
HXLINE(  48)									bool _hx_tmp29;
HXDLIN(  48)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE(  48)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp29 = false;
            									}
HXDLIN(  48)									if (_hx_tmp29) {
HXLINE(  48)										_this3->listen_x(_x34);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this3->y = _y34;
HXDLIN(  48)								if (!(_this3->_construct)) {
HXLINE(  48)									bool _hx_tmp30;
HXDLIN(  48)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE(  48)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp30 = false;
            									}
HXDLIN(  48)									if (_hx_tmp30) {
HXLINE(  48)										_this3->listen_y(_y34);
            									}
            								}
            							}
HXDLIN(  48)							{
HXLINE(  48)								_this3->z = _z34;
HXDLIN(  48)								if (!(_this3->_construct)) {
HXLINE(  48)									bool _hx_tmp31;
HXDLIN(  48)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE(  48)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE(  48)										_hx_tmp31 = false;
            									}
HXDLIN(  48)									if (_hx_tmp31) {
HXLINE(  48)										_this3->listen_z(_z34);
            									}
            								}
            							}
HXDLIN(  48)							_this3->ignore_listeners = prev3;
HXDLIN(  48)							bool _hx_tmp32;
HXDLIN(  48)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE(  48)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp32 = false;
            							}
HXDLIN(  48)							if (_hx_tmp32) {
HXLINE(  48)								_this3->listen_x(_this3->x);
            							}
HXDLIN(  48)							bool _hx_tmp33;
HXDLIN(  48)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE(  48)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp33 = false;
            							}
HXDLIN(  48)							if (_hx_tmp33) {
HXLINE(  48)								_this3->listen_y(_this3->y);
            							}
HXDLIN(  48)							bool _hx_tmp34;
HXDLIN(  48)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE(  48)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp34 = false;
            							}
HXDLIN(  48)							if (_hx_tmp34) {
HXLINE(  48)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN(  48)					bool _hx_tmp35;
HXDLIN(  48)					if (hx::IsNotNull( this->listen_w )) {
HXLINE(  48)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp35 = false;
            					}
HXDLIN(  48)					if (_hx_tmp35) {
HXLINE(  48)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN(  48)			this->ignore_euler = false;
HXDLIN(  48)			bool _hx_tmp36;
HXDLIN(  48)			bool _hx_tmp37;
HXDLIN(  48)			if (hx::IsNotNull( this->euler )) {
HXLINE(  48)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE(  48)				_hx_tmp37 = true;
            			}
HXDLIN(  48)			if (!(_hx_tmp37)) {
HXLINE(  48)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE(  48)				_hx_tmp36 = true;
            			}
HXDLIN(  48)			if (!(_hx_tmp36)) {
HXLINE(  48)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN(  48)				int order4 = (int)0;
HXDLIN(  48)				Float sqx4 = (this->x * this->x);
HXDLIN(  48)				Float sqy4 = (this->y * this->y);
HXDLIN(  48)				Float sqz4 = (this->z * this->z);
HXDLIN(  48)				Float sqw4 = (this->w * this->w);
HXDLIN(  48)				Float _x45 = _this4->x;
HXDLIN(  48)				Float _y45 = _this4->y;
HXDLIN(  48)				Float _z45 = _this4->z;
HXDLIN(  48)				if ((order4 == (int)0)) {
HXLINE(  48)					Float _x46 = (this->x * this->w);
HXDLIN(  48)					Float _x47 = ((int)2 * (_x46 - (this->y * this->z)));
HXDLIN(  48)					_x45 = ::Math_obj::atan2(_x47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  48)					Float value48 = (this->x * this->z);
HXDLIN(  48)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN(  48)					Float _y46;
HXDLIN(  48)					if ((value49 < (int)-1)) {
HXLINE(  48)						_y46 = (int)-1;
            					}
            					else {
HXLINE(  48)						if ((value49 > (int)1)) {
HXLINE(  48)							_y46 = (int)1;
            						}
            						else {
HXLINE(  48)							_y46 = value49;
            						}
            					}
HXDLIN(  48)					_y45 = ::Math_obj::asin(_y46);
HXDLIN(  48)					Float _z46 = (this->z * this->w);
HXDLIN(  48)					Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN(  48)					_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE(  48)					if ((order4 == (int)1)) {
HXLINE(  48)						Float value50 = (this->x * this->w);
HXDLIN(  48)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN(  48)						Float _x48;
HXDLIN(  48)						if ((value51 < (int)-1)) {
HXLINE(  48)							_x48 = (int)-1;
            						}
            						else {
HXLINE(  48)							if ((value51 > (int)1)) {
HXLINE(  48)								_x48 = (int)1;
            							}
            							else {
HXLINE(  48)								_x48 = value51;
            							}
            						}
HXDLIN(  48)						_x45 = ::Math_obj::asin(_x48);
HXDLIN(  48)						Float _y47 = (this->x * this->z);
HXDLIN(  48)						Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN(  48)						_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  48)						Float _z48 = (this->x * this->y);
HXDLIN(  48)						Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN(  48)						_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE(  48)						if ((order4 == (int)2)) {
HXLINE(  48)							Float value52 = (this->x * this->w);
HXDLIN(  48)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN(  48)							Float _x49;
HXDLIN(  48)							if ((value53 < (int)-1)) {
HXLINE(  48)								_x49 = (int)-1;
            							}
            							else {
HXLINE(  48)								if ((value53 > (int)1)) {
HXLINE(  48)									_x49 = (int)1;
            								}
            								else {
HXLINE(  48)									_x49 = value53;
            								}
            							}
HXDLIN(  48)							_x45 = ::Math_obj::asin(_x49);
HXDLIN(  48)							Float _y49 = (this->y * this->w);
HXDLIN(  48)							Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN(  48)							_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  48)							Float _z50 = (this->z * this->w);
HXDLIN(  48)							Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN(  48)							_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE(  48)							if ((order4 == (int)3)) {
HXLINE(  48)								Float _x50 = (this->x * this->w);
HXDLIN(  48)								Float _x51 = ((int)2 * (_x50 + (this->z * this->y)));
HXDLIN(  48)								_x45 = ::Math_obj::atan2(_x51,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  48)								Float value54 = (this->y * this->w);
HXDLIN(  48)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN(  48)								Float _y51;
HXDLIN(  48)								if ((value55 < (int)-1)) {
HXLINE(  48)									_y51 = (int)-1;
            								}
            								else {
HXLINE(  48)									if ((value55 > (int)1)) {
HXLINE(  48)										_y51 = (int)1;
            									}
            									else {
HXLINE(  48)										_y51 = value55;
            									}
            								}
HXDLIN(  48)								_y45 = ::Math_obj::asin(_y51);
HXDLIN(  48)								Float _z52 = (this->x * this->y);
HXDLIN(  48)								Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN(  48)								_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE(  48)								if ((order4 == (int)4)) {
HXLINE(  48)									Float _x52 = (this->x * this->w);
HXDLIN(  48)									Float _x53 = ((int)2 * (_x52 - (this->z * this->y)));
HXDLIN(  48)									_x45 = ::Math_obj::atan2(_x53,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN(  48)									Float _y52 = (this->y * this->w);
HXDLIN(  48)									Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN(  48)									_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN(  48)									Float value56 = (this->x * this->y);
HXDLIN(  48)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN(  48)									Float _z54;
HXDLIN(  48)									if ((value57 < (int)-1)) {
HXLINE(  48)										_z54 = (int)-1;
            									}
            									else {
HXLINE(  48)										if ((value57 > (int)1)) {
HXLINE(  48)											_z54 = (int)1;
            										}
            										else {
HXLINE(  48)											_z54 = value57;
            										}
            									}
HXDLIN(  48)									_z45 = ::Math_obj::asin(_z54);
            								}
            								else {
HXLINE(  48)									if ((order4 == (int)5)) {
HXLINE(  48)										Float _x54 = (this->x * this->w);
HXDLIN(  48)										Float _x55 = ((int)2 * (_x54 + (this->y * this->z)));
HXDLIN(  48)										_x45 = ::Math_obj::atan2(_x55,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN(  48)										Float _y54 = (this->x * this->z);
HXDLIN(  48)										Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN(  48)										_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN(  48)										Float value58 = (this->z * this->w);
HXDLIN(  48)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN(  48)										Float _z55;
HXDLIN(  48)										if ((value59 < (int)-1)) {
HXLINE(  48)											_z55 = (int)-1;
            										}
            										else {
HXLINE(  48)											if ((value59 > (int)1)) {
HXLINE(  48)												_z55 = (int)1;
            											}
            											else {
HXLINE(  48)												_z55 = value59;
            											}
            										}
HXDLIN(  48)										_z45 = ::Math_obj::asin(_z55);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN(  48)				{
HXLINE(  48)					bool prev4 = _this4->ignore_listeners;
HXDLIN(  48)					_this4->ignore_listeners = true;
HXDLIN(  48)					{
HXLINE(  48)						_this4->x = _x45;
HXDLIN(  48)						if (!(_this4->_construct)) {
HXLINE(  48)							bool _hx_tmp38;
HXDLIN(  48)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE(  48)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp38 = false;
            							}
HXDLIN(  48)							if (_hx_tmp38) {
HXLINE(  48)								_this4->listen_x(_x45);
            							}
            						}
            					}
HXDLIN(  48)					{
HXLINE(  48)						_this4->y = _y45;
HXDLIN(  48)						if (!(_this4->_construct)) {
HXLINE(  48)							bool _hx_tmp39;
HXDLIN(  48)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE(  48)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp39 = false;
            							}
HXDLIN(  48)							if (_hx_tmp39) {
HXLINE(  48)								_this4->listen_y(_y45);
            							}
            						}
            					}
HXDLIN(  48)					{
HXLINE(  48)						_this4->z = _z45;
HXDLIN(  48)						if (!(_this4->_construct)) {
HXLINE(  48)							bool _hx_tmp40;
HXDLIN(  48)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE(  48)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE(  48)								_hx_tmp40 = false;
            							}
HXDLIN(  48)							if (_hx_tmp40) {
HXLINE(  48)								_this4->listen_z(_z45);
            							}
            						}
            					}
HXDLIN(  48)					_this4->ignore_listeners = prev4;
HXDLIN(  48)					bool _hx_tmp41;
HXDLIN(  48)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE(  48)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp41 = false;
            					}
HXDLIN(  48)					if (_hx_tmp41) {
HXLINE(  48)						_this4->listen_x(_this4->x);
            					}
HXDLIN(  48)					bool _hx_tmp42;
HXDLIN(  48)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE(  48)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp42 = false;
            					}
HXDLIN(  48)					if (_hx_tmp42) {
HXLINE(  48)						_this4->listen_y(_this4->y);
            					}
HXDLIN(  48)					bool _hx_tmp43;
HXDLIN(  48)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE(  48)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE(  48)						_hx_tmp43 = false;
            					}
HXDLIN(  48)					if (_hx_tmp43) {
HXLINE(  48)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN(  48)			bool _hx_tmp44;
HXDLIN(  48)			if (hx::IsNotNull( this->listen_x )) {
HXLINE(  48)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  48)				_hx_tmp44 = false;
            			}
HXDLIN(  48)			if (_hx_tmp44) {
HXLINE(  48)				this->listen_x(this->x);
            			}
HXDLIN(  48)			bool _hx_tmp45;
HXDLIN(  48)			if (hx::IsNotNull( this->listen_y )) {
HXLINE(  48)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  48)				_hx_tmp45 = false;
            			}
HXDLIN(  48)			if (_hx_tmp45) {
HXLINE(  48)				this->listen_y(this->y);
            			}
HXDLIN(  48)			bool _hx_tmp46;
HXDLIN(  48)			if (hx::IsNotNull( this->listen_z )) {
HXLINE(  48)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  48)				_hx_tmp46 = false;
            			}
HXDLIN(  48)			if (_hx_tmp46) {
HXLINE(  48)				this->listen_z(this->z);
            			}
HXDLIN(  48)			bool _hx_tmp47;
HXDLIN(  48)			if (hx::IsNotNull( this->listen_w )) {
HXLINE(  48)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  48)				_hx_tmp47 = false;
            			}
HXDLIN(  48)			if (_hx_tmp47) {
HXLINE(  48)				this->listen_w(this->w);
            			}
            		}
HXLINE(  50)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Quaternion_obj,set,return )

 ::phoenix::Quaternion Quaternion_obj::copy( ::phoenix::Quaternion _quaternion){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_55_copy)
HXLINE(  57)		{
HXLINE(  57)			Float _y = _quaternion->y;
HXDLIN(  57)			Float _z = _quaternion->z;
HXDLIN(  57)			Float _w = _quaternion->w;
HXDLIN(  57)			this->ignore_euler = true;
HXDLIN(  57)			{
HXLINE(  57)				this->x = _quaternion->x;
HXDLIN(  57)				if (!(this->_construct)) {
HXLINE(  57)					bool _hx_tmp;
HXDLIN(  57)					bool _hx_tmp1;
HXDLIN(  57)					if (hx::IsNotNull( this->euler )) {
HXLINE(  57)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE(  57)						_hx_tmp1 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp1)) {
HXLINE(  57)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE(  57)						_hx_tmp = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp)) {
HXLINE(  57)						 ::phoenix::Vector _this = this->euler;
HXDLIN(  57)						int order = (int)0;
HXDLIN(  57)						Float sqx = (this->x * this->x);
HXDLIN(  57)						Float sqy = (this->y * this->y);
HXDLIN(  57)						Float sqz = (this->z * this->z);
HXDLIN(  57)						Float sqw = (this->w * this->w);
HXDLIN(  57)						Float _x = _this->x;
HXDLIN(  57)						Float _y1 = _this->y;
HXDLIN(  57)						Float _z1 = _this->z;
HXDLIN(  57)						if ((order == (int)0)) {
HXLINE(  57)							Float _x1 = (this->x * this->w);
HXDLIN(  57)							Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN(  57)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  57)							Float value = (this->x * this->z);
HXDLIN(  57)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN(  57)							Float _y2;
HXDLIN(  57)							if ((value1 < (int)-1)) {
HXLINE(  57)								_y2 = (int)-1;
            							}
            							else {
HXLINE(  57)								if ((value1 > (int)1)) {
HXLINE(  57)									_y2 = (int)1;
            								}
            								else {
HXLINE(  57)									_y2 = value1;
            								}
            							}
HXDLIN(  57)							_y1 = ::Math_obj::asin(_y2);
HXDLIN(  57)							Float _z2 = (this->z * this->w);
HXDLIN(  57)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN(  57)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE(  57)							if ((order == (int)1)) {
HXLINE(  57)								Float value2 = (this->x * this->w);
HXDLIN(  57)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN(  57)								Float _x3;
HXDLIN(  57)								if ((value3 < (int)-1)) {
HXLINE(  57)									_x3 = (int)-1;
            								}
            								else {
HXLINE(  57)									if ((value3 > (int)1)) {
HXLINE(  57)										_x3 = (int)1;
            									}
            									else {
HXLINE(  57)										_x3 = value3;
            									}
            								}
HXDLIN(  57)								_x = ::Math_obj::asin(_x3);
HXDLIN(  57)								Float _y3 = (this->x * this->z);
HXDLIN(  57)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN(  57)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  57)								Float _z4 = (this->x * this->y);
HXDLIN(  57)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN(  57)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE(  57)								if ((order == (int)2)) {
HXLINE(  57)									Float value4 = (this->x * this->w);
HXDLIN(  57)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN(  57)									Float _x4;
HXDLIN(  57)									if ((value5 < (int)-1)) {
HXLINE(  57)										_x4 = (int)-1;
            									}
            									else {
HXLINE(  57)										if ((value5 > (int)1)) {
HXLINE(  57)											_x4 = (int)1;
            										}
            										else {
HXLINE(  57)											_x4 = value5;
            										}
            									}
HXDLIN(  57)									_x = ::Math_obj::asin(_x4);
HXDLIN(  57)									Float _y5 = (this->y * this->w);
HXDLIN(  57)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN(  57)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  57)									Float _z6 = (this->z * this->w);
HXDLIN(  57)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN(  57)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE(  57)									if ((order == (int)3)) {
HXLINE(  57)										Float _x5 = (this->x * this->w);
HXDLIN(  57)										Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN(  57)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN(  57)										Float value6 = (this->y * this->w);
HXDLIN(  57)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN(  57)										Float _y7;
HXDLIN(  57)										if ((value7 < (int)-1)) {
HXLINE(  57)											_y7 = (int)-1;
            										}
            										else {
HXLINE(  57)											if ((value7 > (int)1)) {
HXLINE(  57)												_y7 = (int)1;
            											}
            											else {
HXLINE(  57)												_y7 = value7;
            											}
            										}
HXDLIN(  57)										_y1 = ::Math_obj::asin(_y7);
HXDLIN(  57)										Float _z8 = (this->x * this->y);
HXDLIN(  57)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN(  57)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE(  57)										if ((order == (int)4)) {
HXLINE(  57)											Float _x7 = (this->x * this->w);
HXDLIN(  57)											Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN(  57)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN(  57)											Float _y8 = (this->y * this->w);
HXDLIN(  57)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN(  57)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN(  57)											Float value8 = (this->x * this->y);
HXDLIN(  57)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN(  57)											Float _z10;
HXDLIN(  57)											if ((value9 < (int)-1)) {
HXLINE(  57)												_z10 = (int)-1;
            											}
            											else {
HXLINE(  57)												if ((value9 > (int)1)) {
HXLINE(  57)													_z10 = (int)1;
            												}
            												else {
HXLINE(  57)													_z10 = value9;
            												}
            											}
HXDLIN(  57)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE(  57)											if ((order == (int)5)) {
HXLINE(  57)												Float _x9 = (this->x * this->w);
HXDLIN(  57)												Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN(  57)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN(  57)												Float _y10 = (this->x * this->z);
HXDLIN(  57)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN(  57)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN(  57)												Float value10 = (this->z * this->w);
HXDLIN(  57)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN(  57)												Float _z11;
HXDLIN(  57)												if ((value11 < (int)-1)) {
HXLINE(  57)													_z11 = (int)-1;
            												}
            												else {
HXLINE(  57)													if ((value11 > (int)1)) {
HXLINE(  57)														_z11 = (int)1;
            													}
            													else {
HXLINE(  57)														_z11 = value11;
            													}
            												}
HXDLIN(  57)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  57)						{
HXLINE(  57)							bool prev = _this->ignore_listeners;
HXDLIN(  57)							_this->ignore_listeners = true;
HXDLIN(  57)							{
HXLINE(  57)								_this->x = _x;
HXDLIN(  57)								if (!(_this->_construct)) {
HXLINE(  57)									bool _hx_tmp2;
HXDLIN(  57)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE(  57)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp2 = false;
            									}
HXDLIN(  57)									if (_hx_tmp2) {
HXLINE(  57)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this->y = _y1;
HXDLIN(  57)								if (!(_this->_construct)) {
HXLINE(  57)									bool _hx_tmp3;
HXDLIN(  57)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE(  57)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp3 = false;
            									}
HXDLIN(  57)									if (_hx_tmp3) {
HXLINE(  57)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this->z = _z1;
HXDLIN(  57)								if (!(_this->_construct)) {
HXLINE(  57)									bool _hx_tmp4;
HXDLIN(  57)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE(  57)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp4 = false;
            									}
HXDLIN(  57)									if (_hx_tmp4) {
HXLINE(  57)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN(  57)							_this->ignore_listeners = prev;
HXDLIN(  57)							bool _hx_tmp5;
HXDLIN(  57)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE(  57)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp5 = false;
            							}
HXDLIN(  57)							if (_hx_tmp5) {
HXLINE(  57)								_this->listen_x(_this->x);
            							}
HXDLIN(  57)							bool _hx_tmp6;
HXDLIN(  57)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE(  57)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp6 = false;
            							}
HXDLIN(  57)							if (_hx_tmp6) {
HXLINE(  57)								_this->listen_y(_this->y);
            							}
HXDLIN(  57)							bool _hx_tmp7;
HXDLIN(  57)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE(  57)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp7 = false;
            							}
HXDLIN(  57)							if (_hx_tmp7) {
HXLINE(  57)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN(  57)					bool _hx_tmp8;
HXDLIN(  57)					if (hx::IsNotNull( this->listen_x )) {
HXLINE(  57)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp8 = false;
            					}
HXDLIN(  57)					if (_hx_tmp8) {
HXLINE(  57)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN(  57)			{
HXLINE(  57)				this->y = _y;
HXDLIN(  57)				if (!(this->_construct)) {
HXLINE(  57)					bool _hx_tmp9;
HXDLIN(  57)					bool _hx_tmp10;
HXDLIN(  57)					if (hx::IsNotNull( this->euler )) {
HXLINE(  57)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE(  57)						_hx_tmp10 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp10)) {
HXLINE(  57)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE(  57)						_hx_tmp9 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp9)) {
HXLINE(  57)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN(  57)						int order1 = (int)0;
HXDLIN(  57)						Float sqx1 = (this->x * this->x);
HXDLIN(  57)						Float sqy1 = (this->y * this->y);
HXDLIN(  57)						Float sqz1 = (this->z * this->z);
HXDLIN(  57)						Float sqw1 = (this->w * this->w);
HXDLIN(  57)						Float _x11 = _this1->x;
HXDLIN(  57)						Float _y12 = _this1->y;
HXDLIN(  57)						Float _z12 = _this1->z;
HXDLIN(  57)						if ((order1 == (int)0)) {
HXLINE(  57)							Float _x12 = (this->x * this->w);
HXDLIN(  57)							Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN(  57)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  57)							Float value12 = (this->x * this->z);
HXDLIN(  57)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN(  57)							Float _y13;
HXDLIN(  57)							if ((value13 < (int)-1)) {
HXLINE(  57)								_y13 = (int)-1;
            							}
            							else {
HXLINE(  57)								if ((value13 > (int)1)) {
HXLINE(  57)									_y13 = (int)1;
            								}
            								else {
HXLINE(  57)									_y13 = value13;
            								}
            							}
HXDLIN(  57)							_y12 = ::Math_obj::asin(_y13);
HXDLIN(  57)							Float _z13 = (this->z * this->w);
HXDLIN(  57)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN(  57)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE(  57)							if ((order1 == (int)1)) {
HXLINE(  57)								Float value14 = (this->x * this->w);
HXDLIN(  57)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN(  57)								Float _x14;
HXDLIN(  57)								if ((value15 < (int)-1)) {
HXLINE(  57)									_x14 = (int)-1;
            								}
            								else {
HXLINE(  57)									if ((value15 > (int)1)) {
HXLINE(  57)										_x14 = (int)1;
            									}
            									else {
HXLINE(  57)										_x14 = value15;
            									}
            								}
HXDLIN(  57)								_x11 = ::Math_obj::asin(_x14);
HXDLIN(  57)								Float _y14 = (this->x * this->z);
HXDLIN(  57)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN(  57)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  57)								Float _z15 = (this->x * this->y);
HXDLIN(  57)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN(  57)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE(  57)								if ((order1 == (int)2)) {
HXLINE(  57)									Float value16 = (this->x * this->w);
HXDLIN(  57)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN(  57)									Float _x15;
HXDLIN(  57)									if ((value17 < (int)-1)) {
HXLINE(  57)										_x15 = (int)-1;
            									}
            									else {
HXLINE(  57)										if ((value17 > (int)1)) {
HXLINE(  57)											_x15 = (int)1;
            										}
            										else {
HXLINE(  57)											_x15 = value17;
            										}
            									}
HXDLIN(  57)									_x11 = ::Math_obj::asin(_x15);
HXDLIN(  57)									Float _y16 = (this->y * this->w);
HXDLIN(  57)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN(  57)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  57)									Float _z17 = (this->z * this->w);
HXDLIN(  57)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN(  57)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE(  57)									if ((order1 == (int)3)) {
HXLINE(  57)										Float _x16 = (this->x * this->w);
HXDLIN(  57)										Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN(  57)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN(  57)										Float value18 = (this->y * this->w);
HXDLIN(  57)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN(  57)										Float _y18;
HXDLIN(  57)										if ((value19 < (int)-1)) {
HXLINE(  57)											_y18 = (int)-1;
            										}
            										else {
HXLINE(  57)											if ((value19 > (int)1)) {
HXLINE(  57)												_y18 = (int)1;
            											}
            											else {
HXLINE(  57)												_y18 = value19;
            											}
            										}
HXDLIN(  57)										_y12 = ::Math_obj::asin(_y18);
HXDLIN(  57)										Float _z19 = (this->x * this->y);
HXDLIN(  57)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN(  57)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE(  57)										if ((order1 == (int)4)) {
HXLINE(  57)											Float _x18 = (this->x * this->w);
HXDLIN(  57)											Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN(  57)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN(  57)											Float _y19 = (this->y * this->w);
HXDLIN(  57)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN(  57)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN(  57)											Float value20 = (this->x * this->y);
HXDLIN(  57)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN(  57)											Float _z21;
HXDLIN(  57)											if ((value21 < (int)-1)) {
HXLINE(  57)												_z21 = (int)-1;
            											}
            											else {
HXLINE(  57)												if ((value21 > (int)1)) {
HXLINE(  57)													_z21 = (int)1;
            												}
            												else {
HXLINE(  57)													_z21 = value21;
            												}
            											}
HXDLIN(  57)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE(  57)											if ((order1 == (int)5)) {
HXLINE(  57)												Float _x20 = (this->x * this->w);
HXDLIN(  57)												Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN(  57)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN(  57)												Float _y21 = (this->x * this->z);
HXDLIN(  57)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN(  57)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN(  57)												Float value22 = (this->z * this->w);
HXDLIN(  57)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN(  57)												Float _z22;
HXDLIN(  57)												if ((value23 < (int)-1)) {
HXLINE(  57)													_z22 = (int)-1;
            												}
            												else {
HXLINE(  57)													if ((value23 > (int)1)) {
HXLINE(  57)														_z22 = (int)1;
            													}
            													else {
HXLINE(  57)														_z22 = value23;
            													}
            												}
HXDLIN(  57)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  57)						{
HXLINE(  57)							bool prev1 = _this1->ignore_listeners;
HXDLIN(  57)							_this1->ignore_listeners = true;
HXDLIN(  57)							{
HXLINE(  57)								_this1->x = _x11;
HXDLIN(  57)								if (!(_this1->_construct)) {
HXLINE(  57)									bool _hx_tmp11;
HXDLIN(  57)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE(  57)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp11 = false;
            									}
HXDLIN(  57)									if (_hx_tmp11) {
HXLINE(  57)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this1->y = _y12;
HXDLIN(  57)								if (!(_this1->_construct)) {
HXLINE(  57)									bool _hx_tmp12;
HXDLIN(  57)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE(  57)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp12 = false;
            									}
HXDLIN(  57)									if (_hx_tmp12) {
HXLINE(  57)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this1->z = _z12;
HXDLIN(  57)								if (!(_this1->_construct)) {
HXLINE(  57)									bool _hx_tmp13;
HXDLIN(  57)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE(  57)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp13 = false;
            									}
HXDLIN(  57)									if (_hx_tmp13) {
HXLINE(  57)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN(  57)							_this1->ignore_listeners = prev1;
HXDLIN(  57)							bool _hx_tmp14;
HXDLIN(  57)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE(  57)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp14 = false;
            							}
HXDLIN(  57)							if (_hx_tmp14) {
HXLINE(  57)								_this1->listen_x(_this1->x);
            							}
HXDLIN(  57)							bool _hx_tmp15;
HXDLIN(  57)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE(  57)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp15 = false;
            							}
HXDLIN(  57)							if (_hx_tmp15) {
HXLINE(  57)								_this1->listen_y(_this1->y);
            							}
HXDLIN(  57)							bool _hx_tmp16;
HXDLIN(  57)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE(  57)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp16 = false;
            							}
HXDLIN(  57)							if (_hx_tmp16) {
HXLINE(  57)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN(  57)					bool _hx_tmp17;
HXDLIN(  57)					if (hx::IsNotNull( this->listen_y )) {
HXLINE(  57)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp17 = false;
            					}
HXDLIN(  57)					if (_hx_tmp17) {
HXLINE(  57)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN(  57)			{
HXLINE(  57)				this->z = _z;
HXDLIN(  57)				if (!(this->_construct)) {
HXLINE(  57)					bool _hx_tmp18;
HXDLIN(  57)					bool _hx_tmp19;
HXDLIN(  57)					if (hx::IsNotNull( this->euler )) {
HXLINE(  57)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE(  57)						_hx_tmp19 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp19)) {
HXLINE(  57)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE(  57)						_hx_tmp18 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp18)) {
HXLINE(  57)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN(  57)						int order2 = (int)0;
HXDLIN(  57)						Float sqx2 = (this->x * this->x);
HXDLIN(  57)						Float sqy2 = (this->y * this->y);
HXDLIN(  57)						Float sqz2 = (this->z * this->z);
HXDLIN(  57)						Float sqw2 = (this->w * this->w);
HXDLIN(  57)						Float _x22 = _this2->x;
HXDLIN(  57)						Float _y23 = _this2->y;
HXDLIN(  57)						Float _z23 = _this2->z;
HXDLIN(  57)						if ((order2 == (int)0)) {
HXLINE(  57)							Float _x23 = (this->x * this->w);
HXDLIN(  57)							Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN(  57)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  57)							Float value24 = (this->x * this->z);
HXDLIN(  57)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN(  57)							Float _y24;
HXDLIN(  57)							if ((value25 < (int)-1)) {
HXLINE(  57)								_y24 = (int)-1;
            							}
            							else {
HXLINE(  57)								if ((value25 > (int)1)) {
HXLINE(  57)									_y24 = (int)1;
            								}
            								else {
HXLINE(  57)									_y24 = value25;
            								}
            							}
HXDLIN(  57)							_y23 = ::Math_obj::asin(_y24);
HXDLIN(  57)							Float _z24 = (this->z * this->w);
HXDLIN(  57)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN(  57)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE(  57)							if ((order2 == (int)1)) {
HXLINE(  57)								Float value26 = (this->x * this->w);
HXDLIN(  57)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN(  57)								Float _x25;
HXDLIN(  57)								if ((value27 < (int)-1)) {
HXLINE(  57)									_x25 = (int)-1;
            								}
            								else {
HXLINE(  57)									if ((value27 > (int)1)) {
HXLINE(  57)										_x25 = (int)1;
            									}
            									else {
HXLINE(  57)										_x25 = value27;
            									}
            								}
HXDLIN(  57)								_x22 = ::Math_obj::asin(_x25);
HXDLIN(  57)								Float _y25 = (this->x * this->z);
HXDLIN(  57)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN(  57)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  57)								Float _z26 = (this->x * this->y);
HXDLIN(  57)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN(  57)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE(  57)								if ((order2 == (int)2)) {
HXLINE(  57)									Float value28 = (this->x * this->w);
HXDLIN(  57)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN(  57)									Float _x26;
HXDLIN(  57)									if ((value29 < (int)-1)) {
HXLINE(  57)										_x26 = (int)-1;
            									}
            									else {
HXLINE(  57)										if ((value29 > (int)1)) {
HXLINE(  57)											_x26 = (int)1;
            										}
            										else {
HXLINE(  57)											_x26 = value29;
            										}
            									}
HXDLIN(  57)									_x22 = ::Math_obj::asin(_x26);
HXDLIN(  57)									Float _y27 = (this->y * this->w);
HXDLIN(  57)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN(  57)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  57)									Float _z28 = (this->z * this->w);
HXDLIN(  57)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN(  57)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE(  57)									if ((order2 == (int)3)) {
HXLINE(  57)										Float _x27 = (this->x * this->w);
HXDLIN(  57)										Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN(  57)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN(  57)										Float value30 = (this->y * this->w);
HXDLIN(  57)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN(  57)										Float _y29;
HXDLIN(  57)										if ((value31 < (int)-1)) {
HXLINE(  57)											_y29 = (int)-1;
            										}
            										else {
HXLINE(  57)											if ((value31 > (int)1)) {
HXLINE(  57)												_y29 = (int)1;
            											}
            											else {
HXLINE(  57)												_y29 = value31;
            											}
            										}
HXDLIN(  57)										_y23 = ::Math_obj::asin(_y29);
HXDLIN(  57)										Float _z30 = (this->x * this->y);
HXDLIN(  57)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN(  57)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE(  57)										if ((order2 == (int)4)) {
HXLINE(  57)											Float _x29 = (this->x * this->w);
HXDLIN(  57)											Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN(  57)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN(  57)											Float _y30 = (this->y * this->w);
HXDLIN(  57)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN(  57)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN(  57)											Float value32 = (this->x * this->y);
HXDLIN(  57)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN(  57)											Float _z32;
HXDLIN(  57)											if ((value33 < (int)-1)) {
HXLINE(  57)												_z32 = (int)-1;
            											}
            											else {
HXLINE(  57)												if ((value33 > (int)1)) {
HXLINE(  57)													_z32 = (int)1;
            												}
            												else {
HXLINE(  57)													_z32 = value33;
            												}
            											}
HXDLIN(  57)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE(  57)											if ((order2 == (int)5)) {
HXLINE(  57)												Float _x31 = (this->x * this->w);
HXDLIN(  57)												Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN(  57)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN(  57)												Float _y32 = (this->x * this->z);
HXDLIN(  57)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN(  57)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN(  57)												Float value34 = (this->z * this->w);
HXDLIN(  57)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN(  57)												Float _z33;
HXDLIN(  57)												if ((value35 < (int)-1)) {
HXLINE(  57)													_z33 = (int)-1;
            												}
            												else {
HXLINE(  57)													if ((value35 > (int)1)) {
HXLINE(  57)														_z33 = (int)1;
            													}
            													else {
HXLINE(  57)														_z33 = value35;
            													}
            												}
HXDLIN(  57)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  57)						{
HXLINE(  57)							bool prev2 = _this2->ignore_listeners;
HXDLIN(  57)							_this2->ignore_listeners = true;
HXDLIN(  57)							{
HXLINE(  57)								_this2->x = _x22;
HXDLIN(  57)								if (!(_this2->_construct)) {
HXLINE(  57)									bool _hx_tmp20;
HXDLIN(  57)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE(  57)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp20 = false;
            									}
HXDLIN(  57)									if (_hx_tmp20) {
HXLINE(  57)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this2->y = _y23;
HXDLIN(  57)								if (!(_this2->_construct)) {
HXLINE(  57)									bool _hx_tmp21;
HXDLIN(  57)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE(  57)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp21 = false;
            									}
HXDLIN(  57)									if (_hx_tmp21) {
HXLINE(  57)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this2->z = _z23;
HXDLIN(  57)								if (!(_this2->_construct)) {
HXLINE(  57)									bool _hx_tmp22;
HXDLIN(  57)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE(  57)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp22 = false;
            									}
HXDLIN(  57)									if (_hx_tmp22) {
HXLINE(  57)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN(  57)							_this2->ignore_listeners = prev2;
HXDLIN(  57)							bool _hx_tmp23;
HXDLIN(  57)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE(  57)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp23 = false;
            							}
HXDLIN(  57)							if (_hx_tmp23) {
HXLINE(  57)								_this2->listen_x(_this2->x);
            							}
HXDLIN(  57)							bool _hx_tmp24;
HXDLIN(  57)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE(  57)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp24 = false;
            							}
HXDLIN(  57)							if (_hx_tmp24) {
HXLINE(  57)								_this2->listen_y(_this2->y);
            							}
HXDLIN(  57)							bool _hx_tmp25;
HXDLIN(  57)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE(  57)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp25 = false;
            							}
HXDLIN(  57)							if (_hx_tmp25) {
HXLINE(  57)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN(  57)					bool _hx_tmp26;
HXDLIN(  57)					if (hx::IsNotNull( this->listen_z )) {
HXLINE(  57)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp26 = false;
            					}
HXDLIN(  57)					if (_hx_tmp26) {
HXLINE(  57)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN(  57)			{
HXLINE(  57)				this->w = _w;
HXDLIN(  57)				if (!(this->_construct)) {
HXLINE(  57)					bool _hx_tmp27;
HXDLIN(  57)					bool _hx_tmp28;
HXDLIN(  57)					if (hx::IsNotNull( this->euler )) {
HXLINE(  57)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE(  57)						_hx_tmp28 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp28)) {
HXLINE(  57)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE(  57)						_hx_tmp27 = true;
            					}
HXDLIN(  57)					if (!(_hx_tmp27)) {
HXLINE(  57)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN(  57)						int order3 = (int)0;
HXDLIN(  57)						Float sqx3 = (this->x * this->x);
HXDLIN(  57)						Float sqy3 = (this->y * this->y);
HXDLIN(  57)						Float sqz3 = (this->z * this->z);
HXDLIN(  57)						Float sqw3 = (this->w * this->w);
HXDLIN(  57)						Float _x33 = _this3->x;
HXDLIN(  57)						Float _y34 = _this3->y;
HXDLIN(  57)						Float _z34 = _this3->z;
HXDLIN(  57)						if ((order3 == (int)0)) {
HXLINE(  57)							Float _x34 = (this->x * this->w);
HXDLIN(  57)							Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN(  57)							_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  57)							Float value36 = (this->x * this->z);
HXDLIN(  57)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN(  57)							Float _y35;
HXDLIN(  57)							if ((value37 < (int)-1)) {
HXLINE(  57)								_y35 = (int)-1;
            							}
            							else {
HXLINE(  57)								if ((value37 > (int)1)) {
HXLINE(  57)									_y35 = (int)1;
            								}
            								else {
HXLINE(  57)									_y35 = value37;
            								}
            							}
HXDLIN(  57)							_y34 = ::Math_obj::asin(_y35);
HXDLIN(  57)							Float _z35 = (this->z * this->w);
HXDLIN(  57)							Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN(  57)							_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE(  57)							if ((order3 == (int)1)) {
HXLINE(  57)								Float value38 = (this->x * this->w);
HXDLIN(  57)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN(  57)								Float _x36;
HXDLIN(  57)								if ((value39 < (int)-1)) {
HXLINE(  57)									_x36 = (int)-1;
            								}
            								else {
HXLINE(  57)									if ((value39 > (int)1)) {
HXLINE(  57)										_x36 = (int)1;
            									}
            									else {
HXLINE(  57)										_x36 = value39;
            									}
            								}
HXDLIN(  57)								_x33 = ::Math_obj::asin(_x36);
HXDLIN(  57)								Float _y36 = (this->x * this->z);
HXDLIN(  57)								Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN(  57)								_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  57)								Float _z37 = (this->x * this->y);
HXDLIN(  57)								Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN(  57)								_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE(  57)								if ((order3 == (int)2)) {
HXLINE(  57)									Float value40 = (this->x * this->w);
HXDLIN(  57)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN(  57)									Float _x37;
HXDLIN(  57)									if ((value41 < (int)-1)) {
HXLINE(  57)										_x37 = (int)-1;
            									}
            									else {
HXLINE(  57)										if ((value41 > (int)1)) {
HXLINE(  57)											_x37 = (int)1;
            										}
            										else {
HXLINE(  57)											_x37 = value41;
            										}
            									}
HXDLIN(  57)									_x33 = ::Math_obj::asin(_x37);
HXDLIN(  57)									Float _y38 = (this->y * this->w);
HXDLIN(  57)									Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN(  57)									_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  57)									Float _z39 = (this->z * this->w);
HXDLIN(  57)									Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN(  57)									_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE(  57)									if ((order3 == (int)3)) {
HXLINE(  57)										Float _x38 = (this->x * this->w);
HXDLIN(  57)										Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN(  57)										_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN(  57)										Float value42 = (this->y * this->w);
HXDLIN(  57)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN(  57)										Float _y40;
HXDLIN(  57)										if ((value43 < (int)-1)) {
HXLINE(  57)											_y40 = (int)-1;
            										}
            										else {
HXLINE(  57)											if ((value43 > (int)1)) {
HXLINE(  57)												_y40 = (int)1;
            											}
            											else {
HXLINE(  57)												_y40 = value43;
            											}
            										}
HXDLIN(  57)										_y34 = ::Math_obj::asin(_y40);
HXDLIN(  57)										Float _z41 = (this->x * this->y);
HXDLIN(  57)										Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN(  57)										_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE(  57)										if ((order3 == (int)4)) {
HXLINE(  57)											Float _x40 = (this->x * this->w);
HXDLIN(  57)											Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN(  57)											_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN(  57)											Float _y41 = (this->y * this->w);
HXDLIN(  57)											Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN(  57)											_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN(  57)											Float value44 = (this->x * this->y);
HXDLIN(  57)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN(  57)											Float _z43;
HXDLIN(  57)											if ((value45 < (int)-1)) {
HXLINE(  57)												_z43 = (int)-1;
            											}
            											else {
HXLINE(  57)												if ((value45 > (int)1)) {
HXLINE(  57)													_z43 = (int)1;
            												}
            												else {
HXLINE(  57)													_z43 = value45;
            												}
            											}
HXDLIN(  57)											_z34 = ::Math_obj::asin(_z43);
            										}
            										else {
HXLINE(  57)											if ((order3 == (int)5)) {
HXLINE(  57)												Float _x42 = (this->x * this->w);
HXDLIN(  57)												Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN(  57)												_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN(  57)												Float _y43 = (this->x * this->z);
HXDLIN(  57)												Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN(  57)												_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN(  57)												Float value46 = (this->z * this->w);
HXDLIN(  57)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN(  57)												Float _z44;
HXDLIN(  57)												if ((value47 < (int)-1)) {
HXLINE(  57)													_z44 = (int)-1;
            												}
            												else {
HXLINE(  57)													if ((value47 > (int)1)) {
HXLINE(  57)														_z44 = (int)1;
            													}
            													else {
HXLINE(  57)														_z44 = value47;
            													}
            												}
HXDLIN(  57)												_z34 = ::Math_obj::asin(_z44);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN(  57)						{
HXLINE(  57)							bool prev3 = _this3->ignore_listeners;
HXDLIN(  57)							_this3->ignore_listeners = true;
HXDLIN(  57)							{
HXLINE(  57)								_this3->x = _x33;
HXDLIN(  57)								if (!(_this3->_construct)) {
HXLINE(  57)									bool _hx_tmp29;
HXDLIN(  57)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE(  57)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp29 = false;
            									}
HXDLIN(  57)									if (_hx_tmp29) {
HXLINE(  57)										_this3->listen_x(_x33);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this3->y = _y34;
HXDLIN(  57)								if (!(_this3->_construct)) {
HXLINE(  57)									bool _hx_tmp30;
HXDLIN(  57)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE(  57)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp30 = false;
            									}
HXDLIN(  57)									if (_hx_tmp30) {
HXLINE(  57)										_this3->listen_y(_y34);
            									}
            								}
            							}
HXDLIN(  57)							{
HXLINE(  57)								_this3->z = _z34;
HXDLIN(  57)								if (!(_this3->_construct)) {
HXLINE(  57)									bool _hx_tmp31;
HXDLIN(  57)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE(  57)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE(  57)										_hx_tmp31 = false;
            									}
HXDLIN(  57)									if (_hx_tmp31) {
HXLINE(  57)										_this3->listen_z(_z34);
            									}
            								}
            							}
HXDLIN(  57)							_this3->ignore_listeners = prev3;
HXDLIN(  57)							bool _hx_tmp32;
HXDLIN(  57)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE(  57)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp32 = false;
            							}
HXDLIN(  57)							if (_hx_tmp32) {
HXLINE(  57)								_this3->listen_x(_this3->x);
            							}
HXDLIN(  57)							bool _hx_tmp33;
HXDLIN(  57)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE(  57)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp33 = false;
            							}
HXDLIN(  57)							if (_hx_tmp33) {
HXLINE(  57)								_this3->listen_y(_this3->y);
            							}
HXDLIN(  57)							bool _hx_tmp34;
HXDLIN(  57)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE(  57)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp34 = false;
            							}
HXDLIN(  57)							if (_hx_tmp34) {
HXLINE(  57)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN(  57)					bool _hx_tmp35;
HXDLIN(  57)					if (hx::IsNotNull( this->listen_w )) {
HXLINE(  57)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp35 = false;
            					}
HXDLIN(  57)					if (_hx_tmp35) {
HXLINE(  57)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN(  57)			this->ignore_euler = false;
HXDLIN(  57)			bool _hx_tmp36;
HXDLIN(  57)			bool _hx_tmp37;
HXDLIN(  57)			if (hx::IsNotNull( this->euler )) {
HXLINE(  57)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE(  57)				_hx_tmp37 = true;
            			}
HXDLIN(  57)			if (!(_hx_tmp37)) {
HXLINE(  57)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE(  57)				_hx_tmp36 = true;
            			}
HXDLIN(  57)			if (!(_hx_tmp36)) {
HXLINE(  57)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN(  57)				int order4 = (int)0;
HXDLIN(  57)				Float sqx4 = (this->x * this->x);
HXDLIN(  57)				Float sqy4 = (this->y * this->y);
HXDLIN(  57)				Float sqz4 = (this->z * this->z);
HXDLIN(  57)				Float sqw4 = (this->w * this->w);
HXDLIN(  57)				Float _x44 = _this4->x;
HXDLIN(  57)				Float _y45 = _this4->y;
HXDLIN(  57)				Float _z45 = _this4->z;
HXDLIN(  57)				if ((order4 == (int)0)) {
HXLINE(  57)					Float _x45 = (this->x * this->w);
HXDLIN(  57)					Float _x46 = ((int)2 * (_x45 - (this->y * this->z)));
HXDLIN(  57)					_x44 = ::Math_obj::atan2(_x46,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  57)					Float value48 = (this->x * this->z);
HXDLIN(  57)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN(  57)					Float _y46;
HXDLIN(  57)					if ((value49 < (int)-1)) {
HXLINE(  57)						_y46 = (int)-1;
            					}
            					else {
HXLINE(  57)						if ((value49 > (int)1)) {
HXLINE(  57)							_y46 = (int)1;
            						}
            						else {
HXLINE(  57)							_y46 = value49;
            						}
            					}
HXDLIN(  57)					_y45 = ::Math_obj::asin(_y46);
HXDLIN(  57)					Float _z46 = (this->z * this->w);
HXDLIN(  57)					Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN(  57)					_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE(  57)					if ((order4 == (int)1)) {
HXLINE(  57)						Float value50 = (this->x * this->w);
HXDLIN(  57)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN(  57)						Float _x47;
HXDLIN(  57)						if ((value51 < (int)-1)) {
HXLINE(  57)							_x47 = (int)-1;
            						}
            						else {
HXLINE(  57)							if ((value51 > (int)1)) {
HXLINE(  57)								_x47 = (int)1;
            							}
            							else {
HXLINE(  57)								_x47 = value51;
            							}
            						}
HXDLIN(  57)						_x44 = ::Math_obj::asin(_x47);
HXDLIN(  57)						Float _y47 = (this->x * this->z);
HXDLIN(  57)						Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN(  57)						_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  57)						Float _z48 = (this->x * this->y);
HXDLIN(  57)						Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN(  57)						_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE(  57)						if ((order4 == (int)2)) {
HXLINE(  57)							Float value52 = (this->x * this->w);
HXDLIN(  57)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN(  57)							Float _x48;
HXDLIN(  57)							if ((value53 < (int)-1)) {
HXLINE(  57)								_x48 = (int)-1;
            							}
            							else {
HXLINE(  57)								if ((value53 > (int)1)) {
HXLINE(  57)									_x48 = (int)1;
            								}
            								else {
HXLINE(  57)									_x48 = value53;
            								}
            							}
HXDLIN(  57)							_x44 = ::Math_obj::asin(_x48);
HXDLIN(  57)							Float _y49 = (this->y * this->w);
HXDLIN(  57)							Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN(  57)							_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  57)							Float _z50 = (this->z * this->w);
HXDLIN(  57)							Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN(  57)							_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE(  57)							if ((order4 == (int)3)) {
HXLINE(  57)								Float _x49 = (this->x * this->w);
HXDLIN(  57)								Float _x50 = ((int)2 * (_x49 + (this->z * this->y)));
HXDLIN(  57)								_x44 = ::Math_obj::atan2(_x50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN(  57)								Float value54 = (this->y * this->w);
HXDLIN(  57)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN(  57)								Float _y51;
HXDLIN(  57)								if ((value55 < (int)-1)) {
HXLINE(  57)									_y51 = (int)-1;
            								}
            								else {
HXLINE(  57)									if ((value55 > (int)1)) {
HXLINE(  57)										_y51 = (int)1;
            									}
            									else {
HXLINE(  57)										_y51 = value55;
            									}
            								}
HXDLIN(  57)								_y45 = ::Math_obj::asin(_y51);
HXDLIN(  57)								Float _z52 = (this->x * this->y);
HXDLIN(  57)								Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN(  57)								_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE(  57)								if ((order4 == (int)4)) {
HXLINE(  57)									Float _x51 = (this->x * this->w);
HXDLIN(  57)									Float _x52 = ((int)2 * (_x51 - (this->z * this->y)));
HXDLIN(  57)									_x44 = ::Math_obj::atan2(_x52,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN(  57)									Float _y52 = (this->y * this->w);
HXDLIN(  57)									Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN(  57)									_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN(  57)									Float value56 = (this->x * this->y);
HXDLIN(  57)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN(  57)									Float _z54;
HXDLIN(  57)									if ((value57 < (int)-1)) {
HXLINE(  57)										_z54 = (int)-1;
            									}
            									else {
HXLINE(  57)										if ((value57 > (int)1)) {
HXLINE(  57)											_z54 = (int)1;
            										}
            										else {
HXLINE(  57)											_z54 = value57;
            										}
            									}
HXDLIN(  57)									_z45 = ::Math_obj::asin(_z54);
            								}
            								else {
HXLINE(  57)									if ((order4 == (int)5)) {
HXLINE(  57)										Float _x53 = (this->x * this->w);
HXDLIN(  57)										Float _x54 = ((int)2 * (_x53 + (this->y * this->z)));
HXDLIN(  57)										_x44 = ::Math_obj::atan2(_x54,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN(  57)										Float _y54 = (this->x * this->z);
HXDLIN(  57)										Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN(  57)										_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN(  57)										Float value58 = (this->z * this->w);
HXDLIN(  57)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN(  57)										Float _z55;
HXDLIN(  57)										if ((value59 < (int)-1)) {
HXLINE(  57)											_z55 = (int)-1;
            										}
            										else {
HXLINE(  57)											if ((value59 > (int)1)) {
HXLINE(  57)												_z55 = (int)1;
            											}
            											else {
HXLINE(  57)												_z55 = value59;
            											}
            										}
HXDLIN(  57)										_z45 = ::Math_obj::asin(_z55);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN(  57)				{
HXLINE(  57)					bool prev4 = _this4->ignore_listeners;
HXDLIN(  57)					_this4->ignore_listeners = true;
HXDLIN(  57)					{
HXLINE(  57)						_this4->x = _x44;
HXDLIN(  57)						if (!(_this4->_construct)) {
HXLINE(  57)							bool _hx_tmp38;
HXDLIN(  57)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE(  57)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp38 = false;
            							}
HXDLIN(  57)							if (_hx_tmp38) {
HXLINE(  57)								_this4->listen_x(_x44);
            							}
            						}
            					}
HXDLIN(  57)					{
HXLINE(  57)						_this4->y = _y45;
HXDLIN(  57)						if (!(_this4->_construct)) {
HXLINE(  57)							bool _hx_tmp39;
HXDLIN(  57)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE(  57)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp39 = false;
            							}
HXDLIN(  57)							if (_hx_tmp39) {
HXLINE(  57)								_this4->listen_y(_y45);
            							}
            						}
            					}
HXDLIN(  57)					{
HXLINE(  57)						_this4->z = _z45;
HXDLIN(  57)						if (!(_this4->_construct)) {
HXLINE(  57)							bool _hx_tmp40;
HXDLIN(  57)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE(  57)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE(  57)								_hx_tmp40 = false;
            							}
HXDLIN(  57)							if (_hx_tmp40) {
HXLINE(  57)								_this4->listen_z(_z45);
            							}
            						}
            					}
HXDLIN(  57)					_this4->ignore_listeners = prev4;
HXDLIN(  57)					bool _hx_tmp41;
HXDLIN(  57)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE(  57)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp41 = false;
            					}
HXDLIN(  57)					if (_hx_tmp41) {
HXLINE(  57)						_this4->listen_x(_this4->x);
            					}
HXDLIN(  57)					bool _hx_tmp42;
HXDLIN(  57)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE(  57)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp42 = false;
            					}
HXDLIN(  57)					if (_hx_tmp42) {
HXLINE(  57)						_this4->listen_y(_this4->y);
            					}
HXDLIN(  57)					bool _hx_tmp43;
HXDLIN(  57)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE(  57)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE(  57)						_hx_tmp43 = false;
            					}
HXDLIN(  57)					if (_hx_tmp43) {
HXLINE(  57)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN(  57)			bool _hx_tmp44;
HXDLIN(  57)			if (hx::IsNotNull( this->listen_x )) {
HXLINE(  57)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  57)				_hx_tmp44 = false;
            			}
HXDLIN(  57)			if (_hx_tmp44) {
HXLINE(  57)				this->listen_x(this->x);
            			}
HXDLIN(  57)			bool _hx_tmp45;
HXDLIN(  57)			if (hx::IsNotNull( this->listen_y )) {
HXLINE(  57)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  57)				_hx_tmp45 = false;
            			}
HXDLIN(  57)			if (_hx_tmp45) {
HXLINE(  57)				this->listen_y(this->y);
            			}
HXDLIN(  57)			bool _hx_tmp46;
HXDLIN(  57)			if (hx::IsNotNull( this->listen_z )) {
HXLINE(  57)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  57)				_hx_tmp46 = false;
            			}
HXDLIN(  57)			if (_hx_tmp46) {
HXLINE(  57)				this->listen_z(this->z);
            			}
HXDLIN(  57)			bool _hx_tmp47;
HXDLIN(  57)			if (hx::IsNotNull( this->listen_w )) {
HXLINE(  57)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE(  57)				_hx_tmp47 = false;
            			}
HXDLIN(  57)			if (_hx_tmp47) {
HXLINE(  57)				this->listen_w(this->w);
            			}
            		}
HXLINE(  62)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,copy,return )

Float Quaternion_obj::dot( ::phoenix::Quaternion _other){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_67_dot)
HXDLIN(  67)		Float _hx_tmp = (this->x * _other->x);
HXDLIN(  67)		Float _hx_tmp1 = (_hx_tmp + (this->y * _other->y));
HXDLIN(  67)		Float _hx_tmp2 = (_hx_tmp1 + (this->z * _other->z));
HXDLIN(  67)		return (_hx_tmp2 + (this->w * _other->w));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,dot,return )

 ::phoenix::Quaternion Quaternion_obj::setFromEuler( ::phoenix::Vector _euler,hx::Null< int >  __o__order){
int _order = __o__order.Default(0);
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_71_setFromEuler)
HXLINE(  77)		Float _x = this->x;
HXLINE(  78)		Float _y = this->y;
HXLINE(  79)		Float _z = this->z;
HXLINE(  80)		Float _w = this->w;
HXLINE(  82)		Float c1 = ::Math_obj::cos(((Float)_euler->x / (Float)(int)2));
HXLINE(  83)		Float c2 = ::Math_obj::cos(((Float)_euler->y / (Float)(int)2));
HXLINE(  84)		Float c3 = ::Math_obj::cos(((Float)_euler->z / (Float)(int)2));
HXLINE(  86)		Float s1 = ::Math_obj::sin(((Float)_euler->x / (Float)(int)2));
HXLINE(  87)		Float s2 = ::Math_obj::sin(((Float)_euler->y / (Float)(int)2));
HXLINE(  88)		Float s3 = ::Math_obj::sin(((Float)_euler->z / (Float)(int)2));
HXLINE(  90)		if ((_order == (int)0)) {
HXLINE(  92)			_x = (((s1 * c2) * c3) + ((c1 * s2) * s3));
HXLINE(  93)			_y = (((c1 * s2) * c3) - ((s1 * c2) * s3));
HXLINE(  94)			_z = (((c1 * c2) * s3) + ((s1 * s2) * c3));
HXLINE(  95)			_w = (((c1 * c2) * c3) - ((s1 * s2) * s3));
            		}
            		else {
HXLINE(  97)			if ((_order == (int)1)) {
HXLINE(  99)				_x = (((s1 * c2) * c3) + ((c1 * s2) * s3));
HXLINE( 100)				_y = (((c1 * s2) * c3) - ((s1 * c2) * s3));
HXLINE( 101)				_z = (((c1 * c2) * s3) - ((s1 * s2) * c3));
HXLINE( 102)				_w = (((c1 * c2) * c3) + ((s1 * s2) * s3));
            			}
            			else {
HXLINE( 104)				if ((_order == (int)2)) {
HXLINE( 106)					_x = (((s1 * c2) * c3) - ((c1 * s2) * s3));
HXLINE( 107)					_y = (((c1 * s2) * c3) + ((s1 * c2) * s3));
HXLINE( 108)					_z = (((c1 * c2) * s3) + ((s1 * s2) * c3));
HXLINE( 109)					_w = (((c1 * c2) * c3) - ((s1 * s2) * s3));
            				}
            				else {
HXLINE( 111)					if ((_order == (int)3)) {
HXLINE( 113)						_x = (((s1 * c2) * c3) - ((c1 * s2) * s3));
HXLINE( 114)						_y = (((c1 * s2) * c3) + ((s1 * c2) * s3));
HXLINE( 115)						_z = (((c1 * c2) * s3) - ((s1 * s2) * c3));
HXLINE( 116)						_w = (((c1 * c2) * c3) + ((s1 * s2) * s3));
            					}
            					else {
HXLINE( 118)						if ((_order == (int)4)) {
HXLINE( 120)							_x = (((s1 * c2) * c3) + ((c1 * s2) * s3));
HXLINE( 121)							_y = (((c1 * s2) * c3) + ((s1 * c2) * s3));
HXLINE( 122)							_z = (((c1 * c2) * s3) - ((s1 * s2) * c3));
HXLINE( 123)							_w = (((c1 * c2) * c3) - ((s1 * s2) * s3));
            						}
            						else {
HXLINE( 125)							if ((_order == (int)5)) {
HXLINE( 127)								_x = (((s1 * c2) * c3) - ((c1 * s2) * s3));
HXLINE( 128)								_y = (((c1 * s2) * c3) - ((s1 * c2) * s3));
HXLINE( 129)								_z = (((c1 * c2) * s3) + ((s1 * s2) * c3));
HXLINE( 130)								_w = (((c1 * c2) * c3) + ((s1 * s2) * s3));
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 134)		{
HXLINE( 134)			this->ignore_euler = true;
HXDLIN( 134)			{
HXLINE( 134)				this->x = _x;
HXDLIN( 134)				if (!(this->_construct)) {
HXLINE( 134)					bool _hx_tmp;
HXDLIN( 134)					bool _hx_tmp1;
HXDLIN( 134)					if (hx::IsNotNull( this->euler )) {
HXLINE( 134)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 134)						_hx_tmp1 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp1)) {
HXLINE( 134)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 134)						_hx_tmp = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp)) {
HXLINE( 134)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 134)						int order = (int)0;
HXDLIN( 134)						Float sqx = (this->x * this->x);
HXDLIN( 134)						Float sqy = (this->y * this->y);
HXDLIN( 134)						Float sqz = (this->z * this->z);
HXDLIN( 134)						Float sqw = (this->w * this->w);
HXDLIN( 134)						Float _x1 = _this->x;
HXDLIN( 134)						Float _y1 = _this->y;
HXDLIN( 134)						Float _z1 = _this->z;
HXDLIN( 134)						if ((order == (int)0)) {
HXLINE( 134)							Float _x2 = (this->x * this->w);
HXDLIN( 134)							Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN( 134)							_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 134)							Float value = (this->x * this->z);
HXDLIN( 134)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 134)							Float _y2;
HXDLIN( 134)							if ((value1 < (int)-1)) {
HXLINE( 134)								_y2 = (int)-1;
            							}
            							else {
HXLINE( 134)								if ((value1 > (int)1)) {
HXLINE( 134)									_y2 = (int)1;
            								}
            								else {
HXLINE( 134)									_y2 = value1;
            								}
            							}
HXDLIN( 134)							_y1 = ::Math_obj::asin(_y2);
HXDLIN( 134)							Float _z2 = (this->z * this->w);
HXDLIN( 134)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 134)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 134)							if ((order == (int)1)) {
HXLINE( 134)								Float value2 = (this->x * this->w);
HXDLIN( 134)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 134)								Float _x4;
HXDLIN( 134)								if ((value3 < (int)-1)) {
HXLINE( 134)									_x4 = (int)-1;
            								}
            								else {
HXLINE( 134)									if ((value3 > (int)1)) {
HXLINE( 134)										_x4 = (int)1;
            									}
            									else {
HXLINE( 134)										_x4 = value3;
            									}
            								}
HXDLIN( 134)								_x1 = ::Math_obj::asin(_x4);
HXDLIN( 134)								Float _y3 = (this->x * this->z);
HXDLIN( 134)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 134)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 134)								Float _z4 = (this->x * this->y);
HXDLIN( 134)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 134)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 134)								if ((order == (int)2)) {
HXLINE( 134)									Float value4 = (this->x * this->w);
HXDLIN( 134)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 134)									Float _x5;
HXDLIN( 134)									if ((value5 < (int)-1)) {
HXLINE( 134)										_x5 = (int)-1;
            									}
            									else {
HXLINE( 134)										if ((value5 > (int)1)) {
HXLINE( 134)											_x5 = (int)1;
            										}
            										else {
HXLINE( 134)											_x5 = value5;
            										}
            									}
HXDLIN( 134)									_x1 = ::Math_obj::asin(_x5);
HXDLIN( 134)									Float _y5 = (this->y * this->w);
HXDLIN( 134)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 134)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 134)									Float _z6 = (this->z * this->w);
HXDLIN( 134)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 134)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 134)									if ((order == (int)3)) {
HXLINE( 134)										Float _x6 = (this->x * this->w);
HXDLIN( 134)										Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN( 134)										_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 134)										Float value6 = (this->y * this->w);
HXDLIN( 134)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 134)										Float _y7;
HXDLIN( 134)										if ((value7 < (int)-1)) {
HXLINE( 134)											_y7 = (int)-1;
            										}
            										else {
HXLINE( 134)											if ((value7 > (int)1)) {
HXLINE( 134)												_y7 = (int)1;
            											}
            											else {
HXLINE( 134)												_y7 = value7;
            											}
            										}
HXDLIN( 134)										_y1 = ::Math_obj::asin(_y7);
HXDLIN( 134)										Float _z8 = (this->x * this->y);
HXDLIN( 134)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 134)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 134)										if ((order == (int)4)) {
HXLINE( 134)											Float _x8 = (this->x * this->w);
HXDLIN( 134)											Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN( 134)											_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 134)											Float _y8 = (this->y * this->w);
HXDLIN( 134)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 134)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 134)											Float value8 = (this->x * this->y);
HXDLIN( 134)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 134)											Float _z10;
HXDLIN( 134)											if ((value9 < (int)-1)) {
HXLINE( 134)												_z10 = (int)-1;
            											}
            											else {
HXLINE( 134)												if ((value9 > (int)1)) {
HXLINE( 134)													_z10 = (int)1;
            												}
            												else {
HXLINE( 134)													_z10 = value9;
            												}
            											}
HXDLIN( 134)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE( 134)											if ((order == (int)5)) {
HXLINE( 134)												Float _x10 = (this->x * this->w);
HXDLIN( 134)												Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN( 134)												_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 134)												Float _y10 = (this->x * this->z);
HXDLIN( 134)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 134)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 134)												Float value10 = (this->z * this->w);
HXDLIN( 134)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 134)												Float _z11;
HXDLIN( 134)												if ((value11 < (int)-1)) {
HXLINE( 134)													_z11 = (int)-1;
            												}
            												else {
HXLINE( 134)													if ((value11 > (int)1)) {
HXLINE( 134)														_z11 = (int)1;
            													}
            													else {
HXLINE( 134)														_z11 = value11;
            													}
            												}
HXDLIN( 134)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 134)						{
HXLINE( 134)							bool prev = _this->ignore_listeners;
HXDLIN( 134)							_this->ignore_listeners = true;
HXDLIN( 134)							{
HXLINE( 134)								_this->x = _x1;
HXDLIN( 134)								if (!(_this->_construct)) {
HXLINE( 134)									bool _hx_tmp2;
HXDLIN( 134)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 134)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp2 = false;
            									}
HXDLIN( 134)									if (_hx_tmp2) {
HXLINE( 134)										_this->listen_x(_x1);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this->y = _y1;
HXDLIN( 134)								if (!(_this->_construct)) {
HXLINE( 134)									bool _hx_tmp3;
HXDLIN( 134)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 134)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp3 = false;
            									}
HXDLIN( 134)									if (_hx_tmp3) {
HXLINE( 134)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this->z = _z1;
HXDLIN( 134)								if (!(_this->_construct)) {
HXLINE( 134)									bool _hx_tmp4;
HXDLIN( 134)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 134)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp4 = false;
            									}
HXDLIN( 134)									if (_hx_tmp4) {
HXLINE( 134)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN( 134)							_this->ignore_listeners = prev;
HXDLIN( 134)							bool _hx_tmp5;
HXDLIN( 134)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 134)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp5 = false;
            							}
HXDLIN( 134)							if (_hx_tmp5) {
HXLINE( 134)								_this->listen_x(_this->x);
            							}
HXDLIN( 134)							bool _hx_tmp6;
HXDLIN( 134)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 134)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp6 = false;
            							}
HXDLIN( 134)							if (_hx_tmp6) {
HXLINE( 134)								_this->listen_y(_this->y);
            							}
HXDLIN( 134)							bool _hx_tmp7;
HXDLIN( 134)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 134)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp7 = false;
            							}
HXDLIN( 134)							if (_hx_tmp7) {
HXLINE( 134)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 134)					bool _hx_tmp8;
HXDLIN( 134)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 134)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp8 = false;
            					}
HXDLIN( 134)					if (_hx_tmp8) {
HXLINE( 134)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 134)			{
HXLINE( 134)				this->y = _y;
HXDLIN( 134)				if (!(this->_construct)) {
HXLINE( 134)					bool _hx_tmp9;
HXDLIN( 134)					bool _hx_tmp10;
HXDLIN( 134)					if (hx::IsNotNull( this->euler )) {
HXLINE( 134)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 134)						_hx_tmp10 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp10)) {
HXLINE( 134)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 134)						_hx_tmp9 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp9)) {
HXLINE( 134)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 134)						int order1 = (int)0;
HXDLIN( 134)						Float sqx1 = (this->x * this->x);
HXDLIN( 134)						Float sqy1 = (this->y * this->y);
HXDLIN( 134)						Float sqz1 = (this->z * this->z);
HXDLIN( 134)						Float sqw1 = (this->w * this->w);
HXDLIN( 134)						Float _x12 = _this1->x;
HXDLIN( 134)						Float _y12 = _this1->y;
HXDLIN( 134)						Float _z12 = _this1->z;
HXDLIN( 134)						if ((order1 == (int)0)) {
HXLINE( 134)							Float _x13 = (this->x * this->w);
HXDLIN( 134)							Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN( 134)							_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 134)							Float value12 = (this->x * this->z);
HXDLIN( 134)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 134)							Float _y13;
HXDLIN( 134)							if ((value13 < (int)-1)) {
HXLINE( 134)								_y13 = (int)-1;
            							}
            							else {
HXLINE( 134)								if ((value13 > (int)1)) {
HXLINE( 134)									_y13 = (int)1;
            								}
            								else {
HXLINE( 134)									_y13 = value13;
            								}
            							}
HXDLIN( 134)							_y12 = ::Math_obj::asin(_y13);
HXDLIN( 134)							Float _z13 = (this->z * this->w);
HXDLIN( 134)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 134)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 134)							if ((order1 == (int)1)) {
HXLINE( 134)								Float value14 = (this->x * this->w);
HXDLIN( 134)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 134)								Float _x15;
HXDLIN( 134)								if ((value15 < (int)-1)) {
HXLINE( 134)									_x15 = (int)-1;
            								}
            								else {
HXLINE( 134)									if ((value15 > (int)1)) {
HXLINE( 134)										_x15 = (int)1;
            									}
            									else {
HXLINE( 134)										_x15 = value15;
            									}
            								}
HXDLIN( 134)								_x12 = ::Math_obj::asin(_x15);
HXDLIN( 134)								Float _y14 = (this->x * this->z);
HXDLIN( 134)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 134)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 134)								Float _z15 = (this->x * this->y);
HXDLIN( 134)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 134)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 134)								if ((order1 == (int)2)) {
HXLINE( 134)									Float value16 = (this->x * this->w);
HXDLIN( 134)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 134)									Float _x16;
HXDLIN( 134)									if ((value17 < (int)-1)) {
HXLINE( 134)										_x16 = (int)-1;
            									}
            									else {
HXLINE( 134)										if ((value17 > (int)1)) {
HXLINE( 134)											_x16 = (int)1;
            										}
            										else {
HXLINE( 134)											_x16 = value17;
            										}
            									}
HXDLIN( 134)									_x12 = ::Math_obj::asin(_x16);
HXDLIN( 134)									Float _y16 = (this->y * this->w);
HXDLIN( 134)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 134)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 134)									Float _z17 = (this->z * this->w);
HXDLIN( 134)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 134)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 134)									if ((order1 == (int)3)) {
HXLINE( 134)										Float _x17 = (this->x * this->w);
HXDLIN( 134)										Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN( 134)										_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 134)										Float value18 = (this->y * this->w);
HXDLIN( 134)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 134)										Float _y18;
HXDLIN( 134)										if ((value19 < (int)-1)) {
HXLINE( 134)											_y18 = (int)-1;
            										}
            										else {
HXLINE( 134)											if ((value19 > (int)1)) {
HXLINE( 134)												_y18 = (int)1;
            											}
            											else {
HXLINE( 134)												_y18 = value19;
            											}
            										}
HXDLIN( 134)										_y12 = ::Math_obj::asin(_y18);
HXDLIN( 134)										Float _z19 = (this->x * this->y);
HXDLIN( 134)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 134)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 134)										if ((order1 == (int)4)) {
HXLINE( 134)											Float _x19 = (this->x * this->w);
HXDLIN( 134)											Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN( 134)											_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 134)											Float _y19 = (this->y * this->w);
HXDLIN( 134)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 134)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 134)											Float value20 = (this->x * this->y);
HXDLIN( 134)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 134)											Float _z21;
HXDLIN( 134)											if ((value21 < (int)-1)) {
HXLINE( 134)												_z21 = (int)-1;
            											}
            											else {
HXLINE( 134)												if ((value21 > (int)1)) {
HXLINE( 134)													_z21 = (int)1;
            												}
            												else {
HXLINE( 134)													_z21 = value21;
            												}
            											}
HXDLIN( 134)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE( 134)											if ((order1 == (int)5)) {
HXLINE( 134)												Float _x21 = (this->x * this->w);
HXDLIN( 134)												Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN( 134)												_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 134)												Float _y21 = (this->x * this->z);
HXDLIN( 134)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 134)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 134)												Float value22 = (this->z * this->w);
HXDLIN( 134)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 134)												Float _z22;
HXDLIN( 134)												if ((value23 < (int)-1)) {
HXLINE( 134)													_z22 = (int)-1;
            												}
            												else {
HXLINE( 134)													if ((value23 > (int)1)) {
HXLINE( 134)														_z22 = (int)1;
            													}
            													else {
HXLINE( 134)														_z22 = value23;
            													}
            												}
HXDLIN( 134)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 134)						{
HXLINE( 134)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 134)							_this1->ignore_listeners = true;
HXDLIN( 134)							{
HXLINE( 134)								_this1->x = _x12;
HXDLIN( 134)								if (!(_this1->_construct)) {
HXLINE( 134)									bool _hx_tmp11;
HXDLIN( 134)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 134)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp11 = false;
            									}
HXDLIN( 134)									if (_hx_tmp11) {
HXLINE( 134)										_this1->listen_x(_x12);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this1->y = _y12;
HXDLIN( 134)								if (!(_this1->_construct)) {
HXLINE( 134)									bool _hx_tmp12;
HXDLIN( 134)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 134)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp12 = false;
            									}
HXDLIN( 134)									if (_hx_tmp12) {
HXLINE( 134)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this1->z = _z12;
HXDLIN( 134)								if (!(_this1->_construct)) {
HXLINE( 134)									bool _hx_tmp13;
HXDLIN( 134)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 134)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp13 = false;
            									}
HXDLIN( 134)									if (_hx_tmp13) {
HXLINE( 134)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN( 134)							_this1->ignore_listeners = prev1;
HXDLIN( 134)							bool _hx_tmp14;
HXDLIN( 134)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 134)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp14 = false;
            							}
HXDLIN( 134)							if (_hx_tmp14) {
HXLINE( 134)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 134)							bool _hx_tmp15;
HXDLIN( 134)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 134)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp15 = false;
            							}
HXDLIN( 134)							if (_hx_tmp15) {
HXLINE( 134)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 134)							bool _hx_tmp16;
HXDLIN( 134)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 134)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp16 = false;
            							}
HXDLIN( 134)							if (_hx_tmp16) {
HXLINE( 134)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 134)					bool _hx_tmp17;
HXDLIN( 134)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 134)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp17 = false;
            					}
HXDLIN( 134)					if (_hx_tmp17) {
HXLINE( 134)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 134)			{
HXLINE( 134)				this->z = _z;
HXDLIN( 134)				if (!(this->_construct)) {
HXLINE( 134)					bool _hx_tmp18;
HXDLIN( 134)					bool _hx_tmp19;
HXDLIN( 134)					if (hx::IsNotNull( this->euler )) {
HXLINE( 134)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 134)						_hx_tmp19 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp19)) {
HXLINE( 134)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 134)						_hx_tmp18 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp18)) {
HXLINE( 134)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 134)						int order2 = (int)0;
HXDLIN( 134)						Float sqx2 = (this->x * this->x);
HXDLIN( 134)						Float sqy2 = (this->y * this->y);
HXDLIN( 134)						Float sqz2 = (this->z * this->z);
HXDLIN( 134)						Float sqw2 = (this->w * this->w);
HXDLIN( 134)						Float _x23 = _this2->x;
HXDLIN( 134)						Float _y23 = _this2->y;
HXDLIN( 134)						Float _z23 = _this2->z;
HXDLIN( 134)						if ((order2 == (int)0)) {
HXLINE( 134)							Float _x24 = (this->x * this->w);
HXDLIN( 134)							Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN( 134)							_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 134)							Float value24 = (this->x * this->z);
HXDLIN( 134)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 134)							Float _y24;
HXDLIN( 134)							if ((value25 < (int)-1)) {
HXLINE( 134)								_y24 = (int)-1;
            							}
            							else {
HXLINE( 134)								if ((value25 > (int)1)) {
HXLINE( 134)									_y24 = (int)1;
            								}
            								else {
HXLINE( 134)									_y24 = value25;
            								}
            							}
HXDLIN( 134)							_y23 = ::Math_obj::asin(_y24);
HXDLIN( 134)							Float _z24 = (this->z * this->w);
HXDLIN( 134)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 134)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 134)							if ((order2 == (int)1)) {
HXLINE( 134)								Float value26 = (this->x * this->w);
HXDLIN( 134)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 134)								Float _x26;
HXDLIN( 134)								if ((value27 < (int)-1)) {
HXLINE( 134)									_x26 = (int)-1;
            								}
            								else {
HXLINE( 134)									if ((value27 > (int)1)) {
HXLINE( 134)										_x26 = (int)1;
            									}
            									else {
HXLINE( 134)										_x26 = value27;
            									}
            								}
HXDLIN( 134)								_x23 = ::Math_obj::asin(_x26);
HXDLIN( 134)								Float _y25 = (this->x * this->z);
HXDLIN( 134)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 134)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 134)								Float _z26 = (this->x * this->y);
HXDLIN( 134)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 134)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 134)								if ((order2 == (int)2)) {
HXLINE( 134)									Float value28 = (this->x * this->w);
HXDLIN( 134)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 134)									Float _x27;
HXDLIN( 134)									if ((value29 < (int)-1)) {
HXLINE( 134)										_x27 = (int)-1;
            									}
            									else {
HXLINE( 134)										if ((value29 > (int)1)) {
HXLINE( 134)											_x27 = (int)1;
            										}
            										else {
HXLINE( 134)											_x27 = value29;
            										}
            									}
HXDLIN( 134)									_x23 = ::Math_obj::asin(_x27);
HXDLIN( 134)									Float _y27 = (this->y * this->w);
HXDLIN( 134)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 134)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 134)									Float _z28 = (this->z * this->w);
HXDLIN( 134)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 134)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 134)									if ((order2 == (int)3)) {
HXLINE( 134)										Float _x28 = (this->x * this->w);
HXDLIN( 134)										Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN( 134)										_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 134)										Float value30 = (this->y * this->w);
HXDLIN( 134)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 134)										Float _y29;
HXDLIN( 134)										if ((value31 < (int)-1)) {
HXLINE( 134)											_y29 = (int)-1;
            										}
            										else {
HXLINE( 134)											if ((value31 > (int)1)) {
HXLINE( 134)												_y29 = (int)1;
            											}
            											else {
HXLINE( 134)												_y29 = value31;
            											}
            										}
HXDLIN( 134)										_y23 = ::Math_obj::asin(_y29);
HXDLIN( 134)										Float _z30 = (this->x * this->y);
HXDLIN( 134)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 134)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 134)										if ((order2 == (int)4)) {
HXLINE( 134)											Float _x30 = (this->x * this->w);
HXDLIN( 134)											Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN( 134)											_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 134)											Float _y30 = (this->y * this->w);
HXDLIN( 134)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 134)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 134)											Float value32 = (this->x * this->y);
HXDLIN( 134)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 134)											Float _z32;
HXDLIN( 134)											if ((value33 < (int)-1)) {
HXLINE( 134)												_z32 = (int)-1;
            											}
            											else {
HXLINE( 134)												if ((value33 > (int)1)) {
HXLINE( 134)													_z32 = (int)1;
            												}
            												else {
HXLINE( 134)													_z32 = value33;
            												}
            											}
HXDLIN( 134)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE( 134)											if ((order2 == (int)5)) {
HXLINE( 134)												Float _x32 = (this->x * this->w);
HXDLIN( 134)												Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN( 134)												_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 134)												Float _y32 = (this->x * this->z);
HXDLIN( 134)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 134)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 134)												Float value34 = (this->z * this->w);
HXDLIN( 134)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 134)												Float _z33;
HXDLIN( 134)												if ((value35 < (int)-1)) {
HXLINE( 134)													_z33 = (int)-1;
            												}
            												else {
HXLINE( 134)													if ((value35 > (int)1)) {
HXLINE( 134)														_z33 = (int)1;
            													}
            													else {
HXLINE( 134)														_z33 = value35;
            													}
            												}
HXDLIN( 134)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 134)						{
HXLINE( 134)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 134)							_this2->ignore_listeners = true;
HXDLIN( 134)							{
HXLINE( 134)								_this2->x = _x23;
HXDLIN( 134)								if (!(_this2->_construct)) {
HXLINE( 134)									bool _hx_tmp20;
HXDLIN( 134)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 134)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp20 = false;
            									}
HXDLIN( 134)									if (_hx_tmp20) {
HXLINE( 134)										_this2->listen_x(_x23);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this2->y = _y23;
HXDLIN( 134)								if (!(_this2->_construct)) {
HXLINE( 134)									bool _hx_tmp21;
HXDLIN( 134)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 134)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp21 = false;
            									}
HXDLIN( 134)									if (_hx_tmp21) {
HXLINE( 134)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this2->z = _z23;
HXDLIN( 134)								if (!(_this2->_construct)) {
HXLINE( 134)									bool _hx_tmp22;
HXDLIN( 134)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 134)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp22 = false;
            									}
HXDLIN( 134)									if (_hx_tmp22) {
HXLINE( 134)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN( 134)							_this2->ignore_listeners = prev2;
HXDLIN( 134)							bool _hx_tmp23;
HXDLIN( 134)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 134)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp23 = false;
            							}
HXDLIN( 134)							if (_hx_tmp23) {
HXLINE( 134)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 134)							bool _hx_tmp24;
HXDLIN( 134)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 134)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp24 = false;
            							}
HXDLIN( 134)							if (_hx_tmp24) {
HXLINE( 134)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 134)							bool _hx_tmp25;
HXDLIN( 134)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 134)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp25 = false;
            							}
HXDLIN( 134)							if (_hx_tmp25) {
HXLINE( 134)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 134)					bool _hx_tmp26;
HXDLIN( 134)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 134)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp26 = false;
            					}
HXDLIN( 134)					if (_hx_tmp26) {
HXLINE( 134)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 134)			{
HXLINE( 134)				this->w = _w;
HXDLIN( 134)				if (!(this->_construct)) {
HXLINE( 134)					bool _hx_tmp27;
HXDLIN( 134)					bool _hx_tmp28;
HXDLIN( 134)					if (hx::IsNotNull( this->euler )) {
HXLINE( 134)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE( 134)						_hx_tmp28 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp28)) {
HXLINE( 134)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE( 134)						_hx_tmp27 = true;
            					}
HXDLIN( 134)					if (!(_hx_tmp27)) {
HXLINE( 134)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 134)						int order3 = (int)0;
HXDLIN( 134)						Float sqx3 = (this->x * this->x);
HXDLIN( 134)						Float sqy3 = (this->y * this->y);
HXDLIN( 134)						Float sqz3 = (this->z * this->z);
HXDLIN( 134)						Float sqw3 = (this->w * this->w);
HXDLIN( 134)						Float _x34 = _this3->x;
HXDLIN( 134)						Float _y34 = _this3->y;
HXDLIN( 134)						Float _z34 = _this3->z;
HXDLIN( 134)						if ((order3 == (int)0)) {
HXLINE( 134)							Float _x35 = (this->x * this->w);
HXDLIN( 134)							Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN( 134)							_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 134)							Float value36 = (this->x * this->z);
HXDLIN( 134)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 134)							Float _y35;
HXDLIN( 134)							if ((value37 < (int)-1)) {
HXLINE( 134)								_y35 = (int)-1;
            							}
            							else {
HXLINE( 134)								if ((value37 > (int)1)) {
HXLINE( 134)									_y35 = (int)1;
            								}
            								else {
HXLINE( 134)									_y35 = value37;
            								}
            							}
HXDLIN( 134)							_y34 = ::Math_obj::asin(_y35);
HXDLIN( 134)							Float _z35 = (this->z * this->w);
HXDLIN( 134)							Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 134)							_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 134)							if ((order3 == (int)1)) {
HXLINE( 134)								Float value38 = (this->x * this->w);
HXDLIN( 134)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 134)								Float _x37;
HXDLIN( 134)								if ((value39 < (int)-1)) {
HXLINE( 134)									_x37 = (int)-1;
            								}
            								else {
HXLINE( 134)									if ((value39 > (int)1)) {
HXLINE( 134)										_x37 = (int)1;
            									}
            									else {
HXLINE( 134)										_x37 = value39;
            									}
            								}
HXDLIN( 134)								_x34 = ::Math_obj::asin(_x37);
HXDLIN( 134)								Float _y36 = (this->x * this->z);
HXDLIN( 134)								Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 134)								_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 134)								Float _z37 = (this->x * this->y);
HXDLIN( 134)								Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 134)								_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 134)								if ((order3 == (int)2)) {
HXLINE( 134)									Float value40 = (this->x * this->w);
HXDLIN( 134)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 134)									Float _x38;
HXDLIN( 134)									if ((value41 < (int)-1)) {
HXLINE( 134)										_x38 = (int)-1;
            									}
            									else {
HXLINE( 134)										if ((value41 > (int)1)) {
HXLINE( 134)											_x38 = (int)1;
            										}
            										else {
HXLINE( 134)											_x38 = value41;
            										}
            									}
HXDLIN( 134)									_x34 = ::Math_obj::asin(_x38);
HXDLIN( 134)									Float _y38 = (this->y * this->w);
HXDLIN( 134)									Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 134)									_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 134)									Float _z39 = (this->z * this->w);
HXDLIN( 134)									Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 134)									_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 134)									if ((order3 == (int)3)) {
HXLINE( 134)										Float _x39 = (this->x * this->w);
HXDLIN( 134)										Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN( 134)										_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 134)										Float value42 = (this->y * this->w);
HXDLIN( 134)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 134)										Float _y40;
HXDLIN( 134)										if ((value43 < (int)-1)) {
HXLINE( 134)											_y40 = (int)-1;
            										}
            										else {
HXLINE( 134)											if ((value43 > (int)1)) {
HXLINE( 134)												_y40 = (int)1;
            											}
            											else {
HXLINE( 134)												_y40 = value43;
            											}
            										}
HXDLIN( 134)										_y34 = ::Math_obj::asin(_y40);
HXDLIN( 134)										Float _z41 = (this->x * this->y);
HXDLIN( 134)										Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 134)										_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 134)										if ((order3 == (int)4)) {
HXLINE( 134)											Float _x41 = (this->x * this->w);
HXDLIN( 134)											Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN( 134)											_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 134)											Float _y41 = (this->y * this->w);
HXDLIN( 134)											Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 134)											_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 134)											Float value44 = (this->x * this->y);
HXDLIN( 134)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 134)											Float _z43;
HXDLIN( 134)											if ((value45 < (int)-1)) {
HXLINE( 134)												_z43 = (int)-1;
            											}
            											else {
HXLINE( 134)												if ((value45 > (int)1)) {
HXLINE( 134)													_z43 = (int)1;
            												}
            												else {
HXLINE( 134)													_z43 = value45;
            												}
            											}
HXDLIN( 134)											_z34 = ::Math_obj::asin(_z43);
            										}
            										else {
HXLINE( 134)											if ((order3 == (int)5)) {
HXLINE( 134)												Float _x43 = (this->x * this->w);
HXDLIN( 134)												Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN( 134)												_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 134)												Float _y43 = (this->x * this->z);
HXDLIN( 134)												Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 134)												_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 134)												Float value46 = (this->z * this->w);
HXDLIN( 134)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 134)												Float _z44;
HXDLIN( 134)												if ((value47 < (int)-1)) {
HXLINE( 134)													_z44 = (int)-1;
            												}
            												else {
HXLINE( 134)													if ((value47 > (int)1)) {
HXLINE( 134)														_z44 = (int)1;
            													}
            													else {
HXLINE( 134)														_z44 = value47;
            													}
            												}
HXDLIN( 134)												_z34 = ::Math_obj::asin(_z44);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 134)						{
HXLINE( 134)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 134)							_this3->ignore_listeners = true;
HXDLIN( 134)							{
HXLINE( 134)								_this3->x = _x34;
HXDLIN( 134)								if (!(_this3->_construct)) {
HXLINE( 134)									bool _hx_tmp29;
HXDLIN( 134)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 134)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp29 = false;
            									}
HXDLIN( 134)									if (_hx_tmp29) {
HXLINE( 134)										_this3->listen_x(_x34);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this3->y = _y34;
HXDLIN( 134)								if (!(_this3->_construct)) {
HXLINE( 134)									bool _hx_tmp30;
HXDLIN( 134)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 134)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp30 = false;
            									}
HXDLIN( 134)									if (_hx_tmp30) {
HXLINE( 134)										_this3->listen_y(_y34);
            									}
            								}
            							}
HXDLIN( 134)							{
HXLINE( 134)								_this3->z = _z34;
HXDLIN( 134)								if (!(_this3->_construct)) {
HXLINE( 134)									bool _hx_tmp31;
HXDLIN( 134)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 134)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 134)										_hx_tmp31 = false;
            									}
HXDLIN( 134)									if (_hx_tmp31) {
HXLINE( 134)										_this3->listen_z(_z34);
            									}
            								}
            							}
HXDLIN( 134)							_this3->ignore_listeners = prev3;
HXDLIN( 134)							bool _hx_tmp32;
HXDLIN( 134)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 134)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp32 = false;
            							}
HXDLIN( 134)							if (_hx_tmp32) {
HXLINE( 134)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 134)							bool _hx_tmp33;
HXDLIN( 134)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 134)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp33 = false;
            							}
HXDLIN( 134)							if (_hx_tmp33) {
HXLINE( 134)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 134)							bool _hx_tmp34;
HXDLIN( 134)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 134)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp34 = false;
            							}
HXDLIN( 134)							if (_hx_tmp34) {
HXLINE( 134)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 134)					bool _hx_tmp35;
HXDLIN( 134)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 134)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp35 = false;
            					}
HXDLIN( 134)					if (_hx_tmp35) {
HXLINE( 134)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 134)			this->ignore_euler = false;
HXDLIN( 134)			bool _hx_tmp36;
HXDLIN( 134)			bool _hx_tmp37;
HXDLIN( 134)			if (hx::IsNotNull( this->euler )) {
HXLINE( 134)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE( 134)				_hx_tmp37 = true;
            			}
HXDLIN( 134)			if (!(_hx_tmp37)) {
HXLINE( 134)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE( 134)				_hx_tmp36 = true;
            			}
HXDLIN( 134)			if (!(_hx_tmp36)) {
HXLINE( 134)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 134)				int order4 = (int)0;
HXDLIN( 134)				Float sqx4 = (this->x * this->x);
HXDLIN( 134)				Float sqy4 = (this->y * this->y);
HXDLIN( 134)				Float sqz4 = (this->z * this->z);
HXDLIN( 134)				Float sqw4 = (this->w * this->w);
HXDLIN( 134)				Float _x45 = _this4->x;
HXDLIN( 134)				Float _y45 = _this4->y;
HXDLIN( 134)				Float _z45 = _this4->z;
HXDLIN( 134)				if ((order4 == (int)0)) {
HXLINE( 134)					Float _x46 = (this->x * this->w);
HXDLIN( 134)					Float _x47 = ((int)2 * (_x46 - (this->y * this->z)));
HXDLIN( 134)					_x45 = ::Math_obj::atan2(_x47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 134)					Float value48 = (this->x * this->z);
HXDLIN( 134)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 134)					Float _y46;
HXDLIN( 134)					if ((value49 < (int)-1)) {
HXLINE( 134)						_y46 = (int)-1;
            					}
            					else {
HXLINE( 134)						if ((value49 > (int)1)) {
HXLINE( 134)							_y46 = (int)1;
            						}
            						else {
HXLINE( 134)							_y46 = value49;
            						}
            					}
HXDLIN( 134)					_y45 = ::Math_obj::asin(_y46);
HXDLIN( 134)					Float _z46 = (this->z * this->w);
HXDLIN( 134)					Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN( 134)					_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE( 134)					if ((order4 == (int)1)) {
HXLINE( 134)						Float value50 = (this->x * this->w);
HXDLIN( 134)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 134)						Float _x48;
HXDLIN( 134)						if ((value51 < (int)-1)) {
HXLINE( 134)							_x48 = (int)-1;
            						}
            						else {
HXLINE( 134)							if ((value51 > (int)1)) {
HXLINE( 134)								_x48 = (int)1;
            							}
            							else {
HXLINE( 134)								_x48 = value51;
            							}
            						}
HXDLIN( 134)						_x45 = ::Math_obj::asin(_x48);
HXDLIN( 134)						Float _y47 = (this->x * this->z);
HXDLIN( 134)						Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN( 134)						_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 134)						Float _z48 = (this->x * this->y);
HXDLIN( 134)						Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN( 134)						_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 134)						if ((order4 == (int)2)) {
HXLINE( 134)							Float value52 = (this->x * this->w);
HXDLIN( 134)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 134)							Float _x49;
HXDLIN( 134)							if ((value53 < (int)-1)) {
HXLINE( 134)								_x49 = (int)-1;
            							}
            							else {
HXLINE( 134)								if ((value53 > (int)1)) {
HXLINE( 134)									_x49 = (int)1;
            								}
            								else {
HXLINE( 134)									_x49 = value53;
            								}
            							}
HXDLIN( 134)							_x45 = ::Math_obj::asin(_x49);
HXDLIN( 134)							Float _y49 = (this->y * this->w);
HXDLIN( 134)							Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN( 134)							_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 134)							Float _z50 = (this->z * this->w);
HXDLIN( 134)							Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN( 134)							_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE( 134)							if ((order4 == (int)3)) {
HXLINE( 134)								Float _x50 = (this->x * this->w);
HXDLIN( 134)								Float _x51 = ((int)2 * (_x50 + (this->z * this->y)));
HXDLIN( 134)								_x45 = ::Math_obj::atan2(_x51,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 134)								Float value54 = (this->y * this->w);
HXDLIN( 134)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 134)								Float _y51;
HXDLIN( 134)								if ((value55 < (int)-1)) {
HXLINE( 134)									_y51 = (int)-1;
            								}
            								else {
HXLINE( 134)									if ((value55 > (int)1)) {
HXLINE( 134)										_y51 = (int)1;
            									}
            									else {
HXLINE( 134)										_y51 = value55;
            									}
            								}
HXDLIN( 134)								_y45 = ::Math_obj::asin(_y51);
HXDLIN( 134)								Float _z52 = (this->x * this->y);
HXDLIN( 134)								Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN( 134)								_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 134)								if ((order4 == (int)4)) {
HXLINE( 134)									Float _x52 = (this->x * this->w);
HXDLIN( 134)									Float _x53 = ((int)2 * (_x52 - (this->z * this->y)));
HXDLIN( 134)									_x45 = ::Math_obj::atan2(_x53,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 134)									Float _y52 = (this->y * this->w);
HXDLIN( 134)									Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN( 134)									_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 134)									Float value56 = (this->x * this->y);
HXDLIN( 134)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 134)									Float _z54;
HXDLIN( 134)									if ((value57 < (int)-1)) {
HXLINE( 134)										_z54 = (int)-1;
            									}
            									else {
HXLINE( 134)										if ((value57 > (int)1)) {
HXLINE( 134)											_z54 = (int)1;
            										}
            										else {
HXLINE( 134)											_z54 = value57;
            										}
            									}
HXDLIN( 134)									_z45 = ::Math_obj::asin(_z54);
            								}
            								else {
HXLINE( 134)									if ((order4 == (int)5)) {
HXLINE( 134)										Float _x54 = (this->x * this->w);
HXDLIN( 134)										Float _x55 = ((int)2 * (_x54 + (this->y * this->z)));
HXDLIN( 134)										_x45 = ::Math_obj::atan2(_x55,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 134)										Float _y54 = (this->x * this->z);
HXDLIN( 134)										Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN( 134)										_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 134)										Float value58 = (this->z * this->w);
HXDLIN( 134)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 134)										Float _z55;
HXDLIN( 134)										if ((value59 < (int)-1)) {
HXLINE( 134)											_z55 = (int)-1;
            										}
            										else {
HXLINE( 134)											if ((value59 > (int)1)) {
HXLINE( 134)												_z55 = (int)1;
            											}
            											else {
HXLINE( 134)												_z55 = value59;
            											}
            										}
HXDLIN( 134)										_z45 = ::Math_obj::asin(_z55);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 134)				{
HXLINE( 134)					bool prev4 = _this4->ignore_listeners;
HXDLIN( 134)					_this4->ignore_listeners = true;
HXDLIN( 134)					{
HXLINE( 134)						_this4->x = _x45;
HXDLIN( 134)						if (!(_this4->_construct)) {
HXLINE( 134)							bool _hx_tmp38;
HXDLIN( 134)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 134)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp38 = false;
            							}
HXDLIN( 134)							if (_hx_tmp38) {
HXLINE( 134)								_this4->listen_x(_x45);
            							}
            						}
            					}
HXDLIN( 134)					{
HXLINE( 134)						_this4->y = _y45;
HXDLIN( 134)						if (!(_this4->_construct)) {
HXLINE( 134)							bool _hx_tmp39;
HXDLIN( 134)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 134)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp39 = false;
            							}
HXDLIN( 134)							if (_hx_tmp39) {
HXLINE( 134)								_this4->listen_y(_y45);
            							}
            						}
            					}
HXDLIN( 134)					{
HXLINE( 134)						_this4->z = _z45;
HXDLIN( 134)						if (!(_this4->_construct)) {
HXLINE( 134)							bool _hx_tmp40;
HXDLIN( 134)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 134)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 134)								_hx_tmp40 = false;
            							}
HXDLIN( 134)							if (_hx_tmp40) {
HXLINE( 134)								_this4->listen_z(_z45);
            							}
            						}
            					}
HXDLIN( 134)					_this4->ignore_listeners = prev4;
HXDLIN( 134)					bool _hx_tmp41;
HXDLIN( 134)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 134)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp41 = false;
            					}
HXDLIN( 134)					if (_hx_tmp41) {
HXLINE( 134)						_this4->listen_x(_this4->x);
            					}
HXDLIN( 134)					bool _hx_tmp42;
HXDLIN( 134)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 134)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp42 = false;
            					}
HXDLIN( 134)					if (_hx_tmp42) {
HXLINE( 134)						_this4->listen_y(_this4->y);
            					}
HXDLIN( 134)					bool _hx_tmp43;
HXDLIN( 134)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 134)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 134)						_hx_tmp43 = false;
            					}
HXDLIN( 134)					if (_hx_tmp43) {
HXLINE( 134)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN( 134)			bool _hx_tmp44;
HXDLIN( 134)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 134)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 134)				_hx_tmp44 = false;
            			}
HXDLIN( 134)			if (_hx_tmp44) {
HXLINE( 134)				this->listen_x(this->x);
            			}
HXDLIN( 134)			bool _hx_tmp45;
HXDLIN( 134)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 134)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 134)				_hx_tmp45 = false;
            			}
HXDLIN( 134)			if (_hx_tmp45) {
HXLINE( 134)				this->listen_y(this->y);
            			}
HXDLIN( 134)			bool _hx_tmp46;
HXDLIN( 134)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 134)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 134)				_hx_tmp46 = false;
            			}
HXDLIN( 134)			if (_hx_tmp46) {
HXLINE( 134)				this->listen_z(this->z);
            			}
HXDLIN( 134)			bool _hx_tmp47;
HXDLIN( 134)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 134)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 134)				_hx_tmp47 = false;
            			}
HXDLIN( 134)			if (_hx_tmp47) {
HXLINE( 134)				this->listen_w(this->w);
            			}
            		}
HXLINE( 136)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,setFromEuler,return )

 ::phoenix::Quaternion Quaternion_obj::setFromAxisAngle( ::phoenix::Vector _axis,Float _angle){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_141_setFromAxisAngle)
HXLINE( 146)		Float _halfAngle = ((Float)_angle / (Float)(int)2);
HXLINE( 147)		Float _s = ::Math_obj::sin(_halfAngle);
HXLINE( 149)		{
HXLINE( 149)			Float _y = (_axis->y * _s);
HXDLIN( 149)			Float _z = (_axis->z * _s);
HXDLIN( 149)			Float _w = ::Math_obj::cos(_halfAngle);
HXDLIN( 149)			this->ignore_euler = true;
HXDLIN( 149)			{
HXLINE( 149)				this->x = (_axis->x * _s);
HXDLIN( 149)				if (!(this->_construct)) {
HXLINE( 149)					bool _hx_tmp;
HXDLIN( 149)					bool _hx_tmp1;
HXDLIN( 149)					if (hx::IsNotNull( this->euler )) {
HXLINE( 149)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 149)						_hx_tmp1 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp1)) {
HXLINE( 149)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 149)						_hx_tmp = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp)) {
HXLINE( 149)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 149)						int order = (int)0;
HXDLIN( 149)						Float sqx = (this->x * this->x);
HXDLIN( 149)						Float sqy = (this->y * this->y);
HXDLIN( 149)						Float sqz = (this->z * this->z);
HXDLIN( 149)						Float sqw = (this->w * this->w);
HXDLIN( 149)						Float _x = _this->x;
HXDLIN( 149)						Float _y1 = _this->y;
HXDLIN( 149)						Float _z1 = _this->z;
HXDLIN( 149)						if ((order == (int)0)) {
HXLINE( 149)							Float _x1 = (this->x * this->w);
HXDLIN( 149)							Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 149)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 149)							Float value = (this->x * this->z);
HXDLIN( 149)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 149)							Float _y2;
HXDLIN( 149)							if ((value1 < (int)-1)) {
HXLINE( 149)								_y2 = (int)-1;
            							}
            							else {
HXLINE( 149)								if ((value1 > (int)1)) {
HXLINE( 149)									_y2 = (int)1;
            								}
            								else {
HXLINE( 149)									_y2 = value1;
            								}
            							}
HXDLIN( 149)							_y1 = ::Math_obj::asin(_y2);
HXDLIN( 149)							Float _z2 = (this->z * this->w);
HXDLIN( 149)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 149)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 149)							if ((order == (int)1)) {
HXLINE( 149)								Float value2 = (this->x * this->w);
HXDLIN( 149)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 149)								Float _x3;
HXDLIN( 149)								if ((value3 < (int)-1)) {
HXLINE( 149)									_x3 = (int)-1;
            								}
            								else {
HXLINE( 149)									if ((value3 > (int)1)) {
HXLINE( 149)										_x3 = (int)1;
            									}
            									else {
HXLINE( 149)										_x3 = value3;
            									}
            								}
HXDLIN( 149)								_x = ::Math_obj::asin(_x3);
HXDLIN( 149)								Float _y3 = (this->x * this->z);
HXDLIN( 149)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 149)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 149)								Float _z4 = (this->x * this->y);
HXDLIN( 149)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 149)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 149)								if ((order == (int)2)) {
HXLINE( 149)									Float value4 = (this->x * this->w);
HXDLIN( 149)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 149)									Float _x4;
HXDLIN( 149)									if ((value5 < (int)-1)) {
HXLINE( 149)										_x4 = (int)-1;
            									}
            									else {
HXLINE( 149)										if ((value5 > (int)1)) {
HXLINE( 149)											_x4 = (int)1;
            										}
            										else {
HXLINE( 149)											_x4 = value5;
            										}
            									}
HXDLIN( 149)									_x = ::Math_obj::asin(_x4);
HXDLIN( 149)									Float _y5 = (this->y * this->w);
HXDLIN( 149)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 149)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 149)									Float _z6 = (this->z * this->w);
HXDLIN( 149)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 149)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 149)									if ((order == (int)3)) {
HXLINE( 149)										Float _x5 = (this->x * this->w);
HXDLIN( 149)										Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 149)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 149)										Float value6 = (this->y * this->w);
HXDLIN( 149)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 149)										Float _y7;
HXDLIN( 149)										if ((value7 < (int)-1)) {
HXLINE( 149)											_y7 = (int)-1;
            										}
            										else {
HXLINE( 149)											if ((value7 > (int)1)) {
HXLINE( 149)												_y7 = (int)1;
            											}
            											else {
HXLINE( 149)												_y7 = value7;
            											}
            										}
HXDLIN( 149)										_y1 = ::Math_obj::asin(_y7);
HXDLIN( 149)										Float _z8 = (this->x * this->y);
HXDLIN( 149)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 149)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 149)										if ((order == (int)4)) {
HXLINE( 149)											Float _x7 = (this->x * this->w);
HXDLIN( 149)											Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 149)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 149)											Float _y8 = (this->y * this->w);
HXDLIN( 149)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 149)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 149)											Float value8 = (this->x * this->y);
HXDLIN( 149)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 149)											Float _z10;
HXDLIN( 149)											if ((value9 < (int)-1)) {
HXLINE( 149)												_z10 = (int)-1;
            											}
            											else {
HXLINE( 149)												if ((value9 > (int)1)) {
HXLINE( 149)													_z10 = (int)1;
            												}
            												else {
HXLINE( 149)													_z10 = value9;
            												}
            											}
HXDLIN( 149)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE( 149)											if ((order == (int)5)) {
HXLINE( 149)												Float _x9 = (this->x * this->w);
HXDLIN( 149)												Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 149)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 149)												Float _y10 = (this->x * this->z);
HXDLIN( 149)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 149)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 149)												Float value10 = (this->z * this->w);
HXDLIN( 149)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 149)												Float _z11;
HXDLIN( 149)												if ((value11 < (int)-1)) {
HXLINE( 149)													_z11 = (int)-1;
            												}
            												else {
HXLINE( 149)													if ((value11 > (int)1)) {
HXLINE( 149)														_z11 = (int)1;
            													}
            													else {
HXLINE( 149)														_z11 = value11;
            													}
            												}
HXDLIN( 149)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 149)						{
HXLINE( 149)							bool prev = _this->ignore_listeners;
HXDLIN( 149)							_this->ignore_listeners = true;
HXDLIN( 149)							{
HXLINE( 149)								_this->x = _x;
HXDLIN( 149)								if (!(_this->_construct)) {
HXLINE( 149)									bool _hx_tmp2;
HXDLIN( 149)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 149)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp2 = false;
            									}
HXDLIN( 149)									if (_hx_tmp2) {
HXLINE( 149)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this->y = _y1;
HXDLIN( 149)								if (!(_this->_construct)) {
HXLINE( 149)									bool _hx_tmp3;
HXDLIN( 149)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 149)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp3 = false;
            									}
HXDLIN( 149)									if (_hx_tmp3) {
HXLINE( 149)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this->z = _z1;
HXDLIN( 149)								if (!(_this->_construct)) {
HXLINE( 149)									bool _hx_tmp4;
HXDLIN( 149)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 149)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp4 = false;
            									}
HXDLIN( 149)									if (_hx_tmp4) {
HXLINE( 149)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN( 149)							_this->ignore_listeners = prev;
HXDLIN( 149)							bool _hx_tmp5;
HXDLIN( 149)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 149)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp5 = false;
            							}
HXDLIN( 149)							if (_hx_tmp5) {
HXLINE( 149)								_this->listen_x(_this->x);
            							}
HXDLIN( 149)							bool _hx_tmp6;
HXDLIN( 149)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 149)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp6 = false;
            							}
HXDLIN( 149)							if (_hx_tmp6) {
HXLINE( 149)								_this->listen_y(_this->y);
            							}
HXDLIN( 149)							bool _hx_tmp7;
HXDLIN( 149)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 149)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp7 = false;
            							}
HXDLIN( 149)							if (_hx_tmp7) {
HXLINE( 149)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 149)					bool _hx_tmp8;
HXDLIN( 149)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 149)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp8 = false;
            					}
HXDLIN( 149)					if (_hx_tmp8) {
HXLINE( 149)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 149)			{
HXLINE( 149)				this->y = _y;
HXDLIN( 149)				if (!(this->_construct)) {
HXLINE( 149)					bool _hx_tmp9;
HXDLIN( 149)					bool _hx_tmp10;
HXDLIN( 149)					if (hx::IsNotNull( this->euler )) {
HXLINE( 149)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 149)						_hx_tmp10 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp10)) {
HXLINE( 149)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 149)						_hx_tmp9 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp9)) {
HXLINE( 149)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 149)						int order1 = (int)0;
HXDLIN( 149)						Float sqx1 = (this->x * this->x);
HXDLIN( 149)						Float sqy1 = (this->y * this->y);
HXDLIN( 149)						Float sqz1 = (this->z * this->z);
HXDLIN( 149)						Float sqw1 = (this->w * this->w);
HXDLIN( 149)						Float _x11 = _this1->x;
HXDLIN( 149)						Float _y12 = _this1->y;
HXDLIN( 149)						Float _z12 = _this1->z;
HXDLIN( 149)						if ((order1 == (int)0)) {
HXLINE( 149)							Float _x12 = (this->x * this->w);
HXDLIN( 149)							Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN( 149)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 149)							Float value12 = (this->x * this->z);
HXDLIN( 149)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 149)							Float _y13;
HXDLIN( 149)							if ((value13 < (int)-1)) {
HXLINE( 149)								_y13 = (int)-1;
            							}
            							else {
HXLINE( 149)								if ((value13 > (int)1)) {
HXLINE( 149)									_y13 = (int)1;
            								}
            								else {
HXLINE( 149)									_y13 = value13;
            								}
            							}
HXDLIN( 149)							_y12 = ::Math_obj::asin(_y13);
HXDLIN( 149)							Float _z13 = (this->z * this->w);
HXDLIN( 149)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 149)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 149)							if ((order1 == (int)1)) {
HXLINE( 149)								Float value14 = (this->x * this->w);
HXDLIN( 149)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 149)								Float _x14;
HXDLIN( 149)								if ((value15 < (int)-1)) {
HXLINE( 149)									_x14 = (int)-1;
            								}
            								else {
HXLINE( 149)									if ((value15 > (int)1)) {
HXLINE( 149)										_x14 = (int)1;
            									}
            									else {
HXLINE( 149)										_x14 = value15;
            									}
            								}
HXDLIN( 149)								_x11 = ::Math_obj::asin(_x14);
HXDLIN( 149)								Float _y14 = (this->x * this->z);
HXDLIN( 149)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 149)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 149)								Float _z15 = (this->x * this->y);
HXDLIN( 149)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 149)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 149)								if ((order1 == (int)2)) {
HXLINE( 149)									Float value16 = (this->x * this->w);
HXDLIN( 149)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 149)									Float _x15;
HXDLIN( 149)									if ((value17 < (int)-1)) {
HXLINE( 149)										_x15 = (int)-1;
            									}
            									else {
HXLINE( 149)										if ((value17 > (int)1)) {
HXLINE( 149)											_x15 = (int)1;
            										}
            										else {
HXLINE( 149)											_x15 = value17;
            										}
            									}
HXDLIN( 149)									_x11 = ::Math_obj::asin(_x15);
HXDLIN( 149)									Float _y16 = (this->y * this->w);
HXDLIN( 149)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 149)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 149)									Float _z17 = (this->z * this->w);
HXDLIN( 149)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 149)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 149)									if ((order1 == (int)3)) {
HXLINE( 149)										Float _x16 = (this->x * this->w);
HXDLIN( 149)										Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN( 149)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 149)										Float value18 = (this->y * this->w);
HXDLIN( 149)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 149)										Float _y18;
HXDLIN( 149)										if ((value19 < (int)-1)) {
HXLINE( 149)											_y18 = (int)-1;
            										}
            										else {
HXLINE( 149)											if ((value19 > (int)1)) {
HXLINE( 149)												_y18 = (int)1;
            											}
            											else {
HXLINE( 149)												_y18 = value19;
            											}
            										}
HXDLIN( 149)										_y12 = ::Math_obj::asin(_y18);
HXDLIN( 149)										Float _z19 = (this->x * this->y);
HXDLIN( 149)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 149)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 149)										if ((order1 == (int)4)) {
HXLINE( 149)											Float _x18 = (this->x * this->w);
HXDLIN( 149)											Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN( 149)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 149)											Float _y19 = (this->y * this->w);
HXDLIN( 149)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 149)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 149)											Float value20 = (this->x * this->y);
HXDLIN( 149)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 149)											Float _z21;
HXDLIN( 149)											if ((value21 < (int)-1)) {
HXLINE( 149)												_z21 = (int)-1;
            											}
            											else {
HXLINE( 149)												if ((value21 > (int)1)) {
HXLINE( 149)													_z21 = (int)1;
            												}
            												else {
HXLINE( 149)													_z21 = value21;
            												}
            											}
HXDLIN( 149)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE( 149)											if ((order1 == (int)5)) {
HXLINE( 149)												Float _x20 = (this->x * this->w);
HXDLIN( 149)												Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN( 149)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 149)												Float _y21 = (this->x * this->z);
HXDLIN( 149)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 149)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 149)												Float value22 = (this->z * this->w);
HXDLIN( 149)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 149)												Float _z22;
HXDLIN( 149)												if ((value23 < (int)-1)) {
HXLINE( 149)													_z22 = (int)-1;
            												}
            												else {
HXLINE( 149)													if ((value23 > (int)1)) {
HXLINE( 149)														_z22 = (int)1;
            													}
            													else {
HXLINE( 149)														_z22 = value23;
            													}
            												}
HXDLIN( 149)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 149)						{
HXLINE( 149)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 149)							_this1->ignore_listeners = true;
HXDLIN( 149)							{
HXLINE( 149)								_this1->x = _x11;
HXDLIN( 149)								if (!(_this1->_construct)) {
HXLINE( 149)									bool _hx_tmp11;
HXDLIN( 149)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 149)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp11 = false;
            									}
HXDLIN( 149)									if (_hx_tmp11) {
HXLINE( 149)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this1->y = _y12;
HXDLIN( 149)								if (!(_this1->_construct)) {
HXLINE( 149)									bool _hx_tmp12;
HXDLIN( 149)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 149)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp12 = false;
            									}
HXDLIN( 149)									if (_hx_tmp12) {
HXLINE( 149)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this1->z = _z12;
HXDLIN( 149)								if (!(_this1->_construct)) {
HXLINE( 149)									bool _hx_tmp13;
HXDLIN( 149)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 149)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp13 = false;
            									}
HXDLIN( 149)									if (_hx_tmp13) {
HXLINE( 149)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN( 149)							_this1->ignore_listeners = prev1;
HXDLIN( 149)							bool _hx_tmp14;
HXDLIN( 149)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 149)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp14 = false;
            							}
HXDLIN( 149)							if (_hx_tmp14) {
HXLINE( 149)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 149)							bool _hx_tmp15;
HXDLIN( 149)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 149)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp15 = false;
            							}
HXDLIN( 149)							if (_hx_tmp15) {
HXLINE( 149)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 149)							bool _hx_tmp16;
HXDLIN( 149)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 149)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp16 = false;
            							}
HXDLIN( 149)							if (_hx_tmp16) {
HXLINE( 149)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 149)					bool _hx_tmp17;
HXDLIN( 149)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 149)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp17 = false;
            					}
HXDLIN( 149)					if (_hx_tmp17) {
HXLINE( 149)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 149)			{
HXLINE( 149)				this->z = _z;
HXDLIN( 149)				if (!(this->_construct)) {
HXLINE( 149)					bool _hx_tmp18;
HXDLIN( 149)					bool _hx_tmp19;
HXDLIN( 149)					if (hx::IsNotNull( this->euler )) {
HXLINE( 149)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 149)						_hx_tmp19 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp19)) {
HXLINE( 149)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 149)						_hx_tmp18 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp18)) {
HXLINE( 149)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 149)						int order2 = (int)0;
HXDLIN( 149)						Float sqx2 = (this->x * this->x);
HXDLIN( 149)						Float sqy2 = (this->y * this->y);
HXDLIN( 149)						Float sqz2 = (this->z * this->z);
HXDLIN( 149)						Float sqw2 = (this->w * this->w);
HXDLIN( 149)						Float _x22 = _this2->x;
HXDLIN( 149)						Float _y23 = _this2->y;
HXDLIN( 149)						Float _z23 = _this2->z;
HXDLIN( 149)						if ((order2 == (int)0)) {
HXLINE( 149)							Float _x23 = (this->x * this->w);
HXDLIN( 149)							Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN( 149)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 149)							Float value24 = (this->x * this->z);
HXDLIN( 149)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 149)							Float _y24;
HXDLIN( 149)							if ((value25 < (int)-1)) {
HXLINE( 149)								_y24 = (int)-1;
            							}
            							else {
HXLINE( 149)								if ((value25 > (int)1)) {
HXLINE( 149)									_y24 = (int)1;
            								}
            								else {
HXLINE( 149)									_y24 = value25;
            								}
            							}
HXDLIN( 149)							_y23 = ::Math_obj::asin(_y24);
HXDLIN( 149)							Float _z24 = (this->z * this->w);
HXDLIN( 149)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 149)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 149)							if ((order2 == (int)1)) {
HXLINE( 149)								Float value26 = (this->x * this->w);
HXDLIN( 149)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 149)								Float _x25;
HXDLIN( 149)								if ((value27 < (int)-1)) {
HXLINE( 149)									_x25 = (int)-1;
            								}
            								else {
HXLINE( 149)									if ((value27 > (int)1)) {
HXLINE( 149)										_x25 = (int)1;
            									}
            									else {
HXLINE( 149)										_x25 = value27;
            									}
            								}
HXDLIN( 149)								_x22 = ::Math_obj::asin(_x25);
HXDLIN( 149)								Float _y25 = (this->x * this->z);
HXDLIN( 149)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 149)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 149)								Float _z26 = (this->x * this->y);
HXDLIN( 149)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 149)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 149)								if ((order2 == (int)2)) {
HXLINE( 149)									Float value28 = (this->x * this->w);
HXDLIN( 149)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 149)									Float _x26;
HXDLIN( 149)									if ((value29 < (int)-1)) {
HXLINE( 149)										_x26 = (int)-1;
            									}
            									else {
HXLINE( 149)										if ((value29 > (int)1)) {
HXLINE( 149)											_x26 = (int)1;
            										}
            										else {
HXLINE( 149)											_x26 = value29;
            										}
            									}
HXDLIN( 149)									_x22 = ::Math_obj::asin(_x26);
HXDLIN( 149)									Float _y27 = (this->y * this->w);
HXDLIN( 149)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 149)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 149)									Float _z28 = (this->z * this->w);
HXDLIN( 149)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 149)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 149)									if ((order2 == (int)3)) {
HXLINE( 149)										Float _x27 = (this->x * this->w);
HXDLIN( 149)										Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN( 149)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 149)										Float value30 = (this->y * this->w);
HXDLIN( 149)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 149)										Float _y29;
HXDLIN( 149)										if ((value31 < (int)-1)) {
HXLINE( 149)											_y29 = (int)-1;
            										}
            										else {
HXLINE( 149)											if ((value31 > (int)1)) {
HXLINE( 149)												_y29 = (int)1;
            											}
            											else {
HXLINE( 149)												_y29 = value31;
            											}
            										}
HXDLIN( 149)										_y23 = ::Math_obj::asin(_y29);
HXDLIN( 149)										Float _z30 = (this->x * this->y);
HXDLIN( 149)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 149)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 149)										if ((order2 == (int)4)) {
HXLINE( 149)											Float _x29 = (this->x * this->w);
HXDLIN( 149)											Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN( 149)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 149)											Float _y30 = (this->y * this->w);
HXDLIN( 149)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 149)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 149)											Float value32 = (this->x * this->y);
HXDLIN( 149)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 149)											Float _z32;
HXDLIN( 149)											if ((value33 < (int)-1)) {
HXLINE( 149)												_z32 = (int)-1;
            											}
            											else {
HXLINE( 149)												if ((value33 > (int)1)) {
HXLINE( 149)													_z32 = (int)1;
            												}
            												else {
HXLINE( 149)													_z32 = value33;
            												}
            											}
HXDLIN( 149)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE( 149)											if ((order2 == (int)5)) {
HXLINE( 149)												Float _x31 = (this->x * this->w);
HXDLIN( 149)												Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN( 149)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 149)												Float _y32 = (this->x * this->z);
HXDLIN( 149)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 149)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 149)												Float value34 = (this->z * this->w);
HXDLIN( 149)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 149)												Float _z33;
HXDLIN( 149)												if ((value35 < (int)-1)) {
HXLINE( 149)													_z33 = (int)-1;
            												}
            												else {
HXLINE( 149)													if ((value35 > (int)1)) {
HXLINE( 149)														_z33 = (int)1;
            													}
            													else {
HXLINE( 149)														_z33 = value35;
            													}
            												}
HXDLIN( 149)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 149)						{
HXLINE( 149)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 149)							_this2->ignore_listeners = true;
HXDLIN( 149)							{
HXLINE( 149)								_this2->x = _x22;
HXDLIN( 149)								if (!(_this2->_construct)) {
HXLINE( 149)									bool _hx_tmp20;
HXDLIN( 149)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 149)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp20 = false;
            									}
HXDLIN( 149)									if (_hx_tmp20) {
HXLINE( 149)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this2->y = _y23;
HXDLIN( 149)								if (!(_this2->_construct)) {
HXLINE( 149)									bool _hx_tmp21;
HXDLIN( 149)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 149)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp21 = false;
            									}
HXDLIN( 149)									if (_hx_tmp21) {
HXLINE( 149)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this2->z = _z23;
HXDLIN( 149)								if (!(_this2->_construct)) {
HXLINE( 149)									bool _hx_tmp22;
HXDLIN( 149)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 149)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp22 = false;
            									}
HXDLIN( 149)									if (_hx_tmp22) {
HXLINE( 149)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN( 149)							_this2->ignore_listeners = prev2;
HXDLIN( 149)							bool _hx_tmp23;
HXDLIN( 149)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 149)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp23 = false;
            							}
HXDLIN( 149)							if (_hx_tmp23) {
HXLINE( 149)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 149)							bool _hx_tmp24;
HXDLIN( 149)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 149)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp24 = false;
            							}
HXDLIN( 149)							if (_hx_tmp24) {
HXLINE( 149)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 149)							bool _hx_tmp25;
HXDLIN( 149)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 149)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp25 = false;
            							}
HXDLIN( 149)							if (_hx_tmp25) {
HXLINE( 149)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 149)					bool _hx_tmp26;
HXDLIN( 149)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 149)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp26 = false;
            					}
HXDLIN( 149)					if (_hx_tmp26) {
HXLINE( 149)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 149)			{
HXLINE( 149)				this->w = _w;
HXDLIN( 149)				if (!(this->_construct)) {
HXLINE( 149)					bool _hx_tmp27;
HXDLIN( 149)					bool _hx_tmp28;
HXDLIN( 149)					if (hx::IsNotNull( this->euler )) {
HXLINE( 149)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE( 149)						_hx_tmp28 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp28)) {
HXLINE( 149)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE( 149)						_hx_tmp27 = true;
            					}
HXDLIN( 149)					if (!(_hx_tmp27)) {
HXLINE( 149)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 149)						int order3 = (int)0;
HXDLIN( 149)						Float sqx3 = (this->x * this->x);
HXDLIN( 149)						Float sqy3 = (this->y * this->y);
HXDLIN( 149)						Float sqz3 = (this->z * this->z);
HXDLIN( 149)						Float sqw3 = (this->w * this->w);
HXDLIN( 149)						Float _x33 = _this3->x;
HXDLIN( 149)						Float _y34 = _this3->y;
HXDLIN( 149)						Float _z34 = _this3->z;
HXDLIN( 149)						if ((order3 == (int)0)) {
HXLINE( 149)							Float _x34 = (this->x * this->w);
HXDLIN( 149)							Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN( 149)							_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 149)							Float value36 = (this->x * this->z);
HXDLIN( 149)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 149)							Float _y35;
HXDLIN( 149)							if ((value37 < (int)-1)) {
HXLINE( 149)								_y35 = (int)-1;
            							}
            							else {
HXLINE( 149)								if ((value37 > (int)1)) {
HXLINE( 149)									_y35 = (int)1;
            								}
            								else {
HXLINE( 149)									_y35 = value37;
            								}
            							}
HXDLIN( 149)							_y34 = ::Math_obj::asin(_y35);
HXDLIN( 149)							Float _z35 = (this->z * this->w);
HXDLIN( 149)							Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 149)							_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 149)							if ((order3 == (int)1)) {
HXLINE( 149)								Float value38 = (this->x * this->w);
HXDLIN( 149)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 149)								Float _x36;
HXDLIN( 149)								if ((value39 < (int)-1)) {
HXLINE( 149)									_x36 = (int)-1;
            								}
            								else {
HXLINE( 149)									if ((value39 > (int)1)) {
HXLINE( 149)										_x36 = (int)1;
            									}
            									else {
HXLINE( 149)										_x36 = value39;
            									}
            								}
HXDLIN( 149)								_x33 = ::Math_obj::asin(_x36);
HXDLIN( 149)								Float _y36 = (this->x * this->z);
HXDLIN( 149)								Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 149)								_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 149)								Float _z37 = (this->x * this->y);
HXDLIN( 149)								Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 149)								_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 149)								if ((order3 == (int)2)) {
HXLINE( 149)									Float value40 = (this->x * this->w);
HXDLIN( 149)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 149)									Float _x37;
HXDLIN( 149)									if ((value41 < (int)-1)) {
HXLINE( 149)										_x37 = (int)-1;
            									}
            									else {
HXLINE( 149)										if ((value41 > (int)1)) {
HXLINE( 149)											_x37 = (int)1;
            										}
            										else {
HXLINE( 149)											_x37 = value41;
            										}
            									}
HXDLIN( 149)									_x33 = ::Math_obj::asin(_x37);
HXDLIN( 149)									Float _y38 = (this->y * this->w);
HXDLIN( 149)									Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 149)									_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 149)									Float _z39 = (this->z * this->w);
HXDLIN( 149)									Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 149)									_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 149)									if ((order3 == (int)3)) {
HXLINE( 149)										Float _x38 = (this->x * this->w);
HXDLIN( 149)										Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN( 149)										_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 149)										Float value42 = (this->y * this->w);
HXDLIN( 149)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 149)										Float _y40;
HXDLIN( 149)										if ((value43 < (int)-1)) {
HXLINE( 149)											_y40 = (int)-1;
            										}
            										else {
HXLINE( 149)											if ((value43 > (int)1)) {
HXLINE( 149)												_y40 = (int)1;
            											}
            											else {
HXLINE( 149)												_y40 = value43;
            											}
            										}
HXDLIN( 149)										_y34 = ::Math_obj::asin(_y40);
HXDLIN( 149)										Float _z41 = (this->x * this->y);
HXDLIN( 149)										Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 149)										_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 149)										if ((order3 == (int)4)) {
HXLINE( 149)											Float _x40 = (this->x * this->w);
HXDLIN( 149)											Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN( 149)											_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 149)											Float _y41 = (this->y * this->w);
HXDLIN( 149)											Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 149)											_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 149)											Float value44 = (this->x * this->y);
HXDLIN( 149)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 149)											Float _z43;
HXDLIN( 149)											if ((value45 < (int)-1)) {
HXLINE( 149)												_z43 = (int)-1;
            											}
            											else {
HXLINE( 149)												if ((value45 > (int)1)) {
HXLINE( 149)													_z43 = (int)1;
            												}
            												else {
HXLINE( 149)													_z43 = value45;
            												}
            											}
HXDLIN( 149)											_z34 = ::Math_obj::asin(_z43);
            										}
            										else {
HXLINE( 149)											if ((order3 == (int)5)) {
HXLINE( 149)												Float _x42 = (this->x * this->w);
HXDLIN( 149)												Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN( 149)												_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 149)												Float _y43 = (this->x * this->z);
HXDLIN( 149)												Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 149)												_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 149)												Float value46 = (this->z * this->w);
HXDLIN( 149)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 149)												Float _z44;
HXDLIN( 149)												if ((value47 < (int)-1)) {
HXLINE( 149)													_z44 = (int)-1;
            												}
            												else {
HXLINE( 149)													if ((value47 > (int)1)) {
HXLINE( 149)														_z44 = (int)1;
            													}
            													else {
HXLINE( 149)														_z44 = value47;
            													}
            												}
HXDLIN( 149)												_z34 = ::Math_obj::asin(_z44);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 149)						{
HXLINE( 149)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 149)							_this3->ignore_listeners = true;
HXDLIN( 149)							{
HXLINE( 149)								_this3->x = _x33;
HXDLIN( 149)								if (!(_this3->_construct)) {
HXLINE( 149)									bool _hx_tmp29;
HXDLIN( 149)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 149)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp29 = false;
            									}
HXDLIN( 149)									if (_hx_tmp29) {
HXLINE( 149)										_this3->listen_x(_x33);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this3->y = _y34;
HXDLIN( 149)								if (!(_this3->_construct)) {
HXLINE( 149)									bool _hx_tmp30;
HXDLIN( 149)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 149)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp30 = false;
            									}
HXDLIN( 149)									if (_hx_tmp30) {
HXLINE( 149)										_this3->listen_y(_y34);
            									}
            								}
            							}
HXDLIN( 149)							{
HXLINE( 149)								_this3->z = _z34;
HXDLIN( 149)								if (!(_this3->_construct)) {
HXLINE( 149)									bool _hx_tmp31;
HXDLIN( 149)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 149)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 149)										_hx_tmp31 = false;
            									}
HXDLIN( 149)									if (_hx_tmp31) {
HXLINE( 149)										_this3->listen_z(_z34);
            									}
            								}
            							}
HXDLIN( 149)							_this3->ignore_listeners = prev3;
HXDLIN( 149)							bool _hx_tmp32;
HXDLIN( 149)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 149)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp32 = false;
            							}
HXDLIN( 149)							if (_hx_tmp32) {
HXLINE( 149)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 149)							bool _hx_tmp33;
HXDLIN( 149)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 149)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp33 = false;
            							}
HXDLIN( 149)							if (_hx_tmp33) {
HXLINE( 149)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 149)							bool _hx_tmp34;
HXDLIN( 149)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 149)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp34 = false;
            							}
HXDLIN( 149)							if (_hx_tmp34) {
HXLINE( 149)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 149)					bool _hx_tmp35;
HXDLIN( 149)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 149)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp35 = false;
            					}
HXDLIN( 149)					if (_hx_tmp35) {
HXLINE( 149)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 149)			this->ignore_euler = false;
HXDLIN( 149)			bool _hx_tmp36;
HXDLIN( 149)			bool _hx_tmp37;
HXDLIN( 149)			if (hx::IsNotNull( this->euler )) {
HXLINE( 149)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE( 149)				_hx_tmp37 = true;
            			}
HXDLIN( 149)			if (!(_hx_tmp37)) {
HXLINE( 149)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE( 149)				_hx_tmp36 = true;
            			}
HXDLIN( 149)			if (!(_hx_tmp36)) {
HXLINE( 149)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 149)				int order4 = (int)0;
HXDLIN( 149)				Float sqx4 = (this->x * this->x);
HXDLIN( 149)				Float sqy4 = (this->y * this->y);
HXDLIN( 149)				Float sqz4 = (this->z * this->z);
HXDLIN( 149)				Float sqw4 = (this->w * this->w);
HXDLIN( 149)				Float _x44 = _this4->x;
HXDLIN( 149)				Float _y45 = _this4->y;
HXDLIN( 149)				Float _z45 = _this4->z;
HXDLIN( 149)				if ((order4 == (int)0)) {
HXLINE( 149)					Float _x45 = (this->x * this->w);
HXDLIN( 149)					Float _x46 = ((int)2 * (_x45 - (this->y * this->z)));
HXDLIN( 149)					_x44 = ::Math_obj::atan2(_x46,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 149)					Float value48 = (this->x * this->z);
HXDLIN( 149)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 149)					Float _y46;
HXDLIN( 149)					if ((value49 < (int)-1)) {
HXLINE( 149)						_y46 = (int)-1;
            					}
            					else {
HXLINE( 149)						if ((value49 > (int)1)) {
HXLINE( 149)							_y46 = (int)1;
            						}
            						else {
HXLINE( 149)							_y46 = value49;
            						}
            					}
HXDLIN( 149)					_y45 = ::Math_obj::asin(_y46);
HXDLIN( 149)					Float _z46 = (this->z * this->w);
HXDLIN( 149)					Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN( 149)					_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE( 149)					if ((order4 == (int)1)) {
HXLINE( 149)						Float value50 = (this->x * this->w);
HXDLIN( 149)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 149)						Float _x47;
HXDLIN( 149)						if ((value51 < (int)-1)) {
HXLINE( 149)							_x47 = (int)-1;
            						}
            						else {
HXLINE( 149)							if ((value51 > (int)1)) {
HXLINE( 149)								_x47 = (int)1;
            							}
            							else {
HXLINE( 149)								_x47 = value51;
            							}
            						}
HXDLIN( 149)						_x44 = ::Math_obj::asin(_x47);
HXDLIN( 149)						Float _y47 = (this->x * this->z);
HXDLIN( 149)						Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN( 149)						_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 149)						Float _z48 = (this->x * this->y);
HXDLIN( 149)						Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN( 149)						_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 149)						if ((order4 == (int)2)) {
HXLINE( 149)							Float value52 = (this->x * this->w);
HXDLIN( 149)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 149)							Float _x48;
HXDLIN( 149)							if ((value53 < (int)-1)) {
HXLINE( 149)								_x48 = (int)-1;
            							}
            							else {
HXLINE( 149)								if ((value53 > (int)1)) {
HXLINE( 149)									_x48 = (int)1;
            								}
            								else {
HXLINE( 149)									_x48 = value53;
            								}
            							}
HXDLIN( 149)							_x44 = ::Math_obj::asin(_x48);
HXDLIN( 149)							Float _y49 = (this->y * this->w);
HXDLIN( 149)							Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN( 149)							_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 149)							Float _z50 = (this->z * this->w);
HXDLIN( 149)							Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN( 149)							_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE( 149)							if ((order4 == (int)3)) {
HXLINE( 149)								Float _x49 = (this->x * this->w);
HXDLIN( 149)								Float _x50 = ((int)2 * (_x49 + (this->z * this->y)));
HXDLIN( 149)								_x44 = ::Math_obj::atan2(_x50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 149)								Float value54 = (this->y * this->w);
HXDLIN( 149)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 149)								Float _y51;
HXDLIN( 149)								if ((value55 < (int)-1)) {
HXLINE( 149)									_y51 = (int)-1;
            								}
            								else {
HXLINE( 149)									if ((value55 > (int)1)) {
HXLINE( 149)										_y51 = (int)1;
            									}
            									else {
HXLINE( 149)										_y51 = value55;
            									}
            								}
HXDLIN( 149)								_y45 = ::Math_obj::asin(_y51);
HXDLIN( 149)								Float _z52 = (this->x * this->y);
HXDLIN( 149)								Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN( 149)								_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 149)								if ((order4 == (int)4)) {
HXLINE( 149)									Float _x51 = (this->x * this->w);
HXDLIN( 149)									Float _x52 = ((int)2 * (_x51 - (this->z * this->y)));
HXDLIN( 149)									_x44 = ::Math_obj::atan2(_x52,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 149)									Float _y52 = (this->y * this->w);
HXDLIN( 149)									Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN( 149)									_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 149)									Float value56 = (this->x * this->y);
HXDLIN( 149)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 149)									Float _z54;
HXDLIN( 149)									if ((value57 < (int)-1)) {
HXLINE( 149)										_z54 = (int)-1;
            									}
            									else {
HXLINE( 149)										if ((value57 > (int)1)) {
HXLINE( 149)											_z54 = (int)1;
            										}
            										else {
HXLINE( 149)											_z54 = value57;
            										}
            									}
HXDLIN( 149)									_z45 = ::Math_obj::asin(_z54);
            								}
            								else {
HXLINE( 149)									if ((order4 == (int)5)) {
HXLINE( 149)										Float _x53 = (this->x * this->w);
HXDLIN( 149)										Float _x54 = ((int)2 * (_x53 + (this->y * this->z)));
HXDLIN( 149)										_x44 = ::Math_obj::atan2(_x54,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 149)										Float _y54 = (this->x * this->z);
HXDLIN( 149)										Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN( 149)										_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 149)										Float value58 = (this->z * this->w);
HXDLIN( 149)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 149)										Float _z55;
HXDLIN( 149)										if ((value59 < (int)-1)) {
HXLINE( 149)											_z55 = (int)-1;
            										}
            										else {
HXLINE( 149)											if ((value59 > (int)1)) {
HXLINE( 149)												_z55 = (int)1;
            											}
            											else {
HXLINE( 149)												_z55 = value59;
            											}
            										}
HXDLIN( 149)										_z45 = ::Math_obj::asin(_z55);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 149)				{
HXLINE( 149)					bool prev4 = _this4->ignore_listeners;
HXDLIN( 149)					_this4->ignore_listeners = true;
HXDLIN( 149)					{
HXLINE( 149)						_this4->x = _x44;
HXDLIN( 149)						if (!(_this4->_construct)) {
HXLINE( 149)							bool _hx_tmp38;
HXDLIN( 149)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 149)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp38 = false;
            							}
HXDLIN( 149)							if (_hx_tmp38) {
HXLINE( 149)								_this4->listen_x(_x44);
            							}
            						}
            					}
HXDLIN( 149)					{
HXLINE( 149)						_this4->y = _y45;
HXDLIN( 149)						if (!(_this4->_construct)) {
HXLINE( 149)							bool _hx_tmp39;
HXDLIN( 149)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 149)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp39 = false;
            							}
HXDLIN( 149)							if (_hx_tmp39) {
HXLINE( 149)								_this4->listen_y(_y45);
            							}
            						}
            					}
HXDLIN( 149)					{
HXLINE( 149)						_this4->z = _z45;
HXDLIN( 149)						if (!(_this4->_construct)) {
HXLINE( 149)							bool _hx_tmp40;
HXDLIN( 149)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 149)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 149)								_hx_tmp40 = false;
            							}
HXDLIN( 149)							if (_hx_tmp40) {
HXLINE( 149)								_this4->listen_z(_z45);
            							}
            						}
            					}
HXDLIN( 149)					_this4->ignore_listeners = prev4;
HXDLIN( 149)					bool _hx_tmp41;
HXDLIN( 149)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 149)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp41 = false;
            					}
HXDLIN( 149)					if (_hx_tmp41) {
HXLINE( 149)						_this4->listen_x(_this4->x);
            					}
HXDLIN( 149)					bool _hx_tmp42;
HXDLIN( 149)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 149)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp42 = false;
            					}
HXDLIN( 149)					if (_hx_tmp42) {
HXLINE( 149)						_this4->listen_y(_this4->y);
            					}
HXDLIN( 149)					bool _hx_tmp43;
HXDLIN( 149)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 149)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 149)						_hx_tmp43 = false;
            					}
HXDLIN( 149)					if (_hx_tmp43) {
HXLINE( 149)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN( 149)			bool _hx_tmp44;
HXDLIN( 149)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 149)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 149)				_hx_tmp44 = false;
            			}
HXDLIN( 149)			if (_hx_tmp44) {
HXLINE( 149)				this->listen_x(this->x);
            			}
HXDLIN( 149)			bool _hx_tmp45;
HXDLIN( 149)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 149)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 149)				_hx_tmp45 = false;
            			}
HXDLIN( 149)			if (_hx_tmp45) {
HXLINE( 149)				this->listen_y(this->y);
            			}
HXDLIN( 149)			bool _hx_tmp46;
HXDLIN( 149)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 149)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 149)				_hx_tmp46 = false;
            			}
HXDLIN( 149)			if (_hx_tmp46) {
HXLINE( 149)				this->listen_z(this->z);
            			}
HXDLIN( 149)			bool _hx_tmp47;
HXDLIN( 149)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 149)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 149)				_hx_tmp47 = false;
            			}
HXDLIN( 149)			if (_hx_tmp47) {
HXLINE( 149)				this->listen_w(this->w);
            			}
            		}
HXLINE( 154)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,setFromAxisAngle,return )

 ::phoenix::Quaternion Quaternion_obj::setFromRotationMatrix( ::phoenix::Matrix _m){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_159_setFromRotationMatrix)
HXLINE( 164)		::Array< Float > te = _m->elements;
HXLINE( 166)		Float m11 = te->__get((int)0);
HXDLIN( 166)		Float m12 = te->__get((int)4);
HXDLIN( 166)		Float m13 = te->__get((int)8);
HXLINE( 167)		Float m21 = te->__get((int)1);
HXDLIN( 167)		Float m22 = te->__get((int)5);
HXDLIN( 167)		Float m23 = te->__get((int)9);
HXLINE( 168)		Float m31 = te->__get((int)2);
HXDLIN( 168)		Float m32 = te->__get((int)6);
HXDLIN( 168)		Float m33 = te->__get((int)10);
HXLINE( 170)		Float _x = this->x;
HXLINE( 171)		Float _y = this->y;
HXLINE( 172)		Float _z = this->z;
HXLINE( 173)		Float _w = this->w;
HXLINE( 175)		Float tr = ((m11 + m22) + m33);
HXLINE( 177)		Float s;
HXLINE( 179)		if ((tr > (int)0)) {
HXLINE( 181)			s = ((Float)((Float)0.5) / (Float)::Math_obj::sqrt((tr + ((Float)1.0))));
HXLINE( 183)			_w = ((Float)((Float)0.25) / (Float)s);
HXLINE( 184)			_x = ((m32 - m23) * s);
HXLINE( 185)			_y = ((m13 - m31) * s);
HXLINE( 186)			_z = ((m21 - m12) * s);
            		}
            		else {
HXLINE( 188)			bool _hx_tmp;
HXDLIN( 188)			if ((m11 > m22)) {
HXLINE( 188)				_hx_tmp = (m11 > m33);
            			}
            			else {
HXLINE( 188)				_hx_tmp = false;
            			}
HXDLIN( 188)			if (_hx_tmp) {
HXLINE( 190)				s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m11) - m22) - m33)));
HXLINE( 192)				_w = ((Float)(m32 - m23) / (Float)s);
HXLINE( 193)				_x = (((Float)0.25) * s);
HXLINE( 194)				_y = ((Float)(m12 + m21) / (Float)s);
HXLINE( 195)				_z = ((Float)(m13 + m31) / (Float)s);
            			}
            			else {
HXLINE( 197)				if ((m22 > m33)) {
HXLINE( 199)					s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m22) - m11) - m33)));
HXLINE( 201)					_w = ((Float)(m13 - m31) / (Float)s);
HXLINE( 202)					_x = ((Float)(m12 + m21) / (Float)s);
HXLINE( 203)					_y = (((Float)0.25) * s);
HXLINE( 204)					_z = ((Float)(m23 + m32) / (Float)s);
            				}
            				else {
HXLINE( 208)					s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m33) - m11) - m22)));
HXLINE( 210)					_w = ((Float)(m21 - m12) / (Float)s);
HXLINE( 211)					_x = ((Float)(m13 + m31) / (Float)s);
HXLINE( 212)					_y = ((Float)(m23 + m32) / (Float)s);
HXLINE( 213)					_z = (((Float)0.25) * s);
            				}
            			}
            		}
HXLINE( 217)		{
HXLINE( 217)			this->ignore_euler = true;
HXDLIN( 217)			{
HXLINE( 217)				this->x = _x;
HXDLIN( 217)				if (!(this->_construct)) {
HXLINE( 217)					bool _hx_tmp1;
HXDLIN( 217)					bool _hx_tmp2;
HXDLIN( 217)					if (hx::IsNotNull( this->euler )) {
HXLINE( 217)						_hx_tmp2 = this->ignore_euler;
            					}
            					else {
HXLINE( 217)						_hx_tmp2 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp2)) {
HXLINE( 217)						_hx_tmp1 = this->_construct;
            					}
            					else {
HXLINE( 217)						_hx_tmp1 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp1)) {
HXLINE( 217)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 217)						int order = (int)0;
HXDLIN( 217)						Float sqx = (this->x * this->x);
HXDLIN( 217)						Float sqy = (this->y * this->y);
HXDLIN( 217)						Float sqz = (this->z * this->z);
HXDLIN( 217)						Float sqw = (this->w * this->w);
HXDLIN( 217)						Float _x1 = _this->x;
HXDLIN( 217)						Float _y1 = _this->y;
HXDLIN( 217)						Float _z1 = _this->z;
HXDLIN( 217)						if ((order == (int)0)) {
HXLINE( 217)							Float _x2 = (this->x * this->w);
HXDLIN( 217)							Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN( 217)							_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 217)							Float value = (this->x * this->z);
HXDLIN( 217)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 217)							Float _y2;
HXDLIN( 217)							if ((value1 < (int)-1)) {
HXLINE( 217)								_y2 = (int)-1;
            							}
            							else {
HXLINE( 217)								if ((value1 > (int)1)) {
HXLINE( 217)									_y2 = (int)1;
            								}
            								else {
HXLINE( 217)									_y2 = value1;
            								}
            							}
HXDLIN( 217)							_y1 = ::Math_obj::asin(_y2);
HXDLIN( 217)							Float _z2 = (this->z * this->w);
HXDLIN( 217)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 217)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 217)							if ((order == (int)1)) {
HXLINE( 217)								Float value2 = (this->x * this->w);
HXDLIN( 217)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 217)								Float _x4;
HXDLIN( 217)								if ((value3 < (int)-1)) {
HXLINE( 217)									_x4 = (int)-1;
            								}
            								else {
HXLINE( 217)									if ((value3 > (int)1)) {
HXLINE( 217)										_x4 = (int)1;
            									}
            									else {
HXLINE( 217)										_x4 = value3;
            									}
            								}
HXDLIN( 217)								_x1 = ::Math_obj::asin(_x4);
HXDLIN( 217)								Float _y3 = (this->x * this->z);
HXDLIN( 217)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 217)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 217)								Float _z4 = (this->x * this->y);
HXDLIN( 217)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 217)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 217)								if ((order == (int)2)) {
HXLINE( 217)									Float value4 = (this->x * this->w);
HXDLIN( 217)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 217)									Float _x5;
HXDLIN( 217)									if ((value5 < (int)-1)) {
HXLINE( 217)										_x5 = (int)-1;
            									}
            									else {
HXLINE( 217)										if ((value5 > (int)1)) {
HXLINE( 217)											_x5 = (int)1;
            										}
            										else {
HXLINE( 217)											_x5 = value5;
            										}
            									}
HXDLIN( 217)									_x1 = ::Math_obj::asin(_x5);
HXDLIN( 217)									Float _y5 = (this->y * this->w);
HXDLIN( 217)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 217)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 217)									Float _z6 = (this->z * this->w);
HXDLIN( 217)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 217)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 217)									if ((order == (int)3)) {
HXLINE( 217)										Float _x6 = (this->x * this->w);
HXDLIN( 217)										Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN( 217)										_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 217)										Float value6 = (this->y * this->w);
HXDLIN( 217)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 217)										Float _y7;
HXDLIN( 217)										if ((value7 < (int)-1)) {
HXLINE( 217)											_y7 = (int)-1;
            										}
            										else {
HXLINE( 217)											if ((value7 > (int)1)) {
HXLINE( 217)												_y7 = (int)1;
            											}
            											else {
HXLINE( 217)												_y7 = value7;
            											}
            										}
HXDLIN( 217)										_y1 = ::Math_obj::asin(_y7);
HXDLIN( 217)										Float _z8 = (this->x * this->y);
HXDLIN( 217)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 217)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 217)										if ((order == (int)4)) {
HXLINE( 217)											Float _x8 = (this->x * this->w);
HXDLIN( 217)											Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN( 217)											_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 217)											Float _y8 = (this->y * this->w);
HXDLIN( 217)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 217)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 217)											Float value8 = (this->x * this->y);
HXDLIN( 217)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 217)											Float _z10;
HXDLIN( 217)											if ((value9 < (int)-1)) {
HXLINE( 217)												_z10 = (int)-1;
            											}
            											else {
HXLINE( 217)												if ((value9 > (int)1)) {
HXLINE( 217)													_z10 = (int)1;
            												}
            												else {
HXLINE( 217)													_z10 = value9;
            												}
            											}
HXDLIN( 217)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE( 217)											if ((order == (int)5)) {
HXLINE( 217)												Float _x10 = (this->x * this->w);
HXDLIN( 217)												Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN( 217)												_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 217)												Float _y10 = (this->x * this->z);
HXDLIN( 217)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 217)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 217)												Float value10 = (this->z * this->w);
HXDLIN( 217)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 217)												Float _z11;
HXDLIN( 217)												if ((value11 < (int)-1)) {
HXLINE( 217)													_z11 = (int)-1;
            												}
            												else {
HXLINE( 217)													if ((value11 > (int)1)) {
HXLINE( 217)														_z11 = (int)1;
            													}
            													else {
HXLINE( 217)														_z11 = value11;
            													}
            												}
HXDLIN( 217)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 217)						{
HXLINE( 217)							bool prev = _this->ignore_listeners;
HXDLIN( 217)							_this->ignore_listeners = true;
HXDLIN( 217)							{
HXLINE( 217)								_this->x = _x1;
HXDLIN( 217)								if (!(_this->_construct)) {
HXLINE( 217)									bool _hx_tmp3;
HXDLIN( 217)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 217)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp3 = false;
            									}
HXDLIN( 217)									if (_hx_tmp3) {
HXLINE( 217)										_this->listen_x(_x1);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this->y = _y1;
HXDLIN( 217)								if (!(_this->_construct)) {
HXLINE( 217)									bool _hx_tmp4;
HXDLIN( 217)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 217)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp4 = false;
            									}
HXDLIN( 217)									if (_hx_tmp4) {
HXLINE( 217)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this->z = _z1;
HXDLIN( 217)								if (!(_this->_construct)) {
HXLINE( 217)									bool _hx_tmp5;
HXDLIN( 217)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 217)										_hx_tmp5 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp5 = false;
            									}
HXDLIN( 217)									if (_hx_tmp5) {
HXLINE( 217)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN( 217)							_this->ignore_listeners = prev;
HXDLIN( 217)							bool _hx_tmp6;
HXDLIN( 217)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 217)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp6 = false;
            							}
HXDLIN( 217)							if (_hx_tmp6) {
HXLINE( 217)								_this->listen_x(_this->x);
            							}
HXDLIN( 217)							bool _hx_tmp7;
HXDLIN( 217)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 217)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp7 = false;
            							}
HXDLIN( 217)							if (_hx_tmp7) {
HXLINE( 217)								_this->listen_y(_this->y);
            							}
HXDLIN( 217)							bool _hx_tmp8;
HXDLIN( 217)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 217)								_hx_tmp8 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp8 = false;
            							}
HXDLIN( 217)							if (_hx_tmp8) {
HXLINE( 217)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 217)					bool _hx_tmp9;
HXDLIN( 217)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 217)						_hx_tmp9 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp9 = false;
            					}
HXDLIN( 217)					if (_hx_tmp9) {
HXLINE( 217)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 217)			{
HXLINE( 217)				this->y = _y;
HXDLIN( 217)				if (!(this->_construct)) {
HXLINE( 217)					bool _hx_tmp10;
HXDLIN( 217)					bool _hx_tmp11;
HXDLIN( 217)					if (hx::IsNotNull( this->euler )) {
HXLINE( 217)						_hx_tmp11 = this->ignore_euler;
            					}
            					else {
HXLINE( 217)						_hx_tmp11 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp11)) {
HXLINE( 217)						_hx_tmp10 = this->_construct;
            					}
            					else {
HXLINE( 217)						_hx_tmp10 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp10)) {
HXLINE( 217)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 217)						int order1 = (int)0;
HXDLIN( 217)						Float sqx1 = (this->x * this->x);
HXDLIN( 217)						Float sqy1 = (this->y * this->y);
HXDLIN( 217)						Float sqz1 = (this->z * this->z);
HXDLIN( 217)						Float sqw1 = (this->w * this->w);
HXDLIN( 217)						Float _x12 = _this1->x;
HXDLIN( 217)						Float _y12 = _this1->y;
HXDLIN( 217)						Float _z12 = _this1->z;
HXDLIN( 217)						if ((order1 == (int)0)) {
HXLINE( 217)							Float _x13 = (this->x * this->w);
HXDLIN( 217)							Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN( 217)							_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 217)							Float value12 = (this->x * this->z);
HXDLIN( 217)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 217)							Float _y13;
HXDLIN( 217)							if ((value13 < (int)-1)) {
HXLINE( 217)								_y13 = (int)-1;
            							}
            							else {
HXLINE( 217)								if ((value13 > (int)1)) {
HXLINE( 217)									_y13 = (int)1;
            								}
            								else {
HXLINE( 217)									_y13 = value13;
            								}
            							}
HXDLIN( 217)							_y12 = ::Math_obj::asin(_y13);
HXDLIN( 217)							Float _z13 = (this->z * this->w);
HXDLIN( 217)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 217)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 217)							if ((order1 == (int)1)) {
HXLINE( 217)								Float value14 = (this->x * this->w);
HXDLIN( 217)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 217)								Float _x15;
HXDLIN( 217)								if ((value15 < (int)-1)) {
HXLINE( 217)									_x15 = (int)-1;
            								}
            								else {
HXLINE( 217)									if ((value15 > (int)1)) {
HXLINE( 217)										_x15 = (int)1;
            									}
            									else {
HXLINE( 217)										_x15 = value15;
            									}
            								}
HXDLIN( 217)								_x12 = ::Math_obj::asin(_x15);
HXDLIN( 217)								Float _y14 = (this->x * this->z);
HXDLIN( 217)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 217)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 217)								Float _z15 = (this->x * this->y);
HXDLIN( 217)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 217)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 217)								if ((order1 == (int)2)) {
HXLINE( 217)									Float value16 = (this->x * this->w);
HXDLIN( 217)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 217)									Float _x16;
HXDLIN( 217)									if ((value17 < (int)-1)) {
HXLINE( 217)										_x16 = (int)-1;
            									}
            									else {
HXLINE( 217)										if ((value17 > (int)1)) {
HXLINE( 217)											_x16 = (int)1;
            										}
            										else {
HXLINE( 217)											_x16 = value17;
            										}
            									}
HXDLIN( 217)									_x12 = ::Math_obj::asin(_x16);
HXDLIN( 217)									Float _y16 = (this->y * this->w);
HXDLIN( 217)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 217)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 217)									Float _z17 = (this->z * this->w);
HXDLIN( 217)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 217)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 217)									if ((order1 == (int)3)) {
HXLINE( 217)										Float _x17 = (this->x * this->w);
HXDLIN( 217)										Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN( 217)										_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 217)										Float value18 = (this->y * this->w);
HXDLIN( 217)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 217)										Float _y18;
HXDLIN( 217)										if ((value19 < (int)-1)) {
HXLINE( 217)											_y18 = (int)-1;
            										}
            										else {
HXLINE( 217)											if ((value19 > (int)1)) {
HXLINE( 217)												_y18 = (int)1;
            											}
            											else {
HXLINE( 217)												_y18 = value19;
            											}
            										}
HXDLIN( 217)										_y12 = ::Math_obj::asin(_y18);
HXDLIN( 217)										Float _z19 = (this->x * this->y);
HXDLIN( 217)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 217)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 217)										if ((order1 == (int)4)) {
HXLINE( 217)											Float _x19 = (this->x * this->w);
HXDLIN( 217)											Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN( 217)											_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 217)											Float _y19 = (this->y * this->w);
HXDLIN( 217)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 217)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 217)											Float value20 = (this->x * this->y);
HXDLIN( 217)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 217)											Float _z21;
HXDLIN( 217)											if ((value21 < (int)-1)) {
HXLINE( 217)												_z21 = (int)-1;
            											}
            											else {
HXLINE( 217)												if ((value21 > (int)1)) {
HXLINE( 217)													_z21 = (int)1;
            												}
            												else {
HXLINE( 217)													_z21 = value21;
            												}
            											}
HXDLIN( 217)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE( 217)											if ((order1 == (int)5)) {
HXLINE( 217)												Float _x21 = (this->x * this->w);
HXDLIN( 217)												Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN( 217)												_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 217)												Float _y21 = (this->x * this->z);
HXDLIN( 217)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 217)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 217)												Float value22 = (this->z * this->w);
HXDLIN( 217)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 217)												Float _z22;
HXDLIN( 217)												if ((value23 < (int)-1)) {
HXLINE( 217)													_z22 = (int)-1;
            												}
            												else {
HXLINE( 217)													if ((value23 > (int)1)) {
HXLINE( 217)														_z22 = (int)1;
            													}
            													else {
HXLINE( 217)														_z22 = value23;
            													}
            												}
HXDLIN( 217)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 217)						{
HXLINE( 217)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 217)							_this1->ignore_listeners = true;
HXDLIN( 217)							{
HXLINE( 217)								_this1->x = _x12;
HXDLIN( 217)								if (!(_this1->_construct)) {
HXLINE( 217)									bool _hx_tmp12;
HXDLIN( 217)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 217)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp12 = false;
            									}
HXDLIN( 217)									if (_hx_tmp12) {
HXLINE( 217)										_this1->listen_x(_x12);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this1->y = _y12;
HXDLIN( 217)								if (!(_this1->_construct)) {
HXLINE( 217)									bool _hx_tmp13;
HXDLIN( 217)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 217)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp13 = false;
            									}
HXDLIN( 217)									if (_hx_tmp13) {
HXLINE( 217)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this1->z = _z12;
HXDLIN( 217)								if (!(_this1->_construct)) {
HXLINE( 217)									bool _hx_tmp14;
HXDLIN( 217)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 217)										_hx_tmp14 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp14 = false;
            									}
HXDLIN( 217)									if (_hx_tmp14) {
HXLINE( 217)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN( 217)							_this1->ignore_listeners = prev1;
HXDLIN( 217)							bool _hx_tmp15;
HXDLIN( 217)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 217)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp15 = false;
            							}
HXDLIN( 217)							if (_hx_tmp15) {
HXLINE( 217)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 217)							bool _hx_tmp16;
HXDLIN( 217)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 217)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp16 = false;
            							}
HXDLIN( 217)							if (_hx_tmp16) {
HXLINE( 217)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 217)							bool _hx_tmp17;
HXDLIN( 217)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 217)								_hx_tmp17 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp17 = false;
            							}
HXDLIN( 217)							if (_hx_tmp17) {
HXLINE( 217)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 217)					bool _hx_tmp18;
HXDLIN( 217)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 217)						_hx_tmp18 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp18 = false;
            					}
HXDLIN( 217)					if (_hx_tmp18) {
HXLINE( 217)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 217)			{
HXLINE( 217)				this->z = _z;
HXDLIN( 217)				if (!(this->_construct)) {
HXLINE( 217)					bool _hx_tmp19;
HXDLIN( 217)					bool _hx_tmp20;
HXDLIN( 217)					if (hx::IsNotNull( this->euler )) {
HXLINE( 217)						_hx_tmp20 = this->ignore_euler;
            					}
            					else {
HXLINE( 217)						_hx_tmp20 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp20)) {
HXLINE( 217)						_hx_tmp19 = this->_construct;
            					}
            					else {
HXLINE( 217)						_hx_tmp19 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp19)) {
HXLINE( 217)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 217)						int order2 = (int)0;
HXDLIN( 217)						Float sqx2 = (this->x * this->x);
HXDLIN( 217)						Float sqy2 = (this->y * this->y);
HXDLIN( 217)						Float sqz2 = (this->z * this->z);
HXDLIN( 217)						Float sqw2 = (this->w * this->w);
HXDLIN( 217)						Float _x23 = _this2->x;
HXDLIN( 217)						Float _y23 = _this2->y;
HXDLIN( 217)						Float _z23 = _this2->z;
HXDLIN( 217)						if ((order2 == (int)0)) {
HXLINE( 217)							Float _x24 = (this->x * this->w);
HXDLIN( 217)							Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN( 217)							_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 217)							Float value24 = (this->x * this->z);
HXDLIN( 217)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 217)							Float _y24;
HXDLIN( 217)							if ((value25 < (int)-1)) {
HXLINE( 217)								_y24 = (int)-1;
            							}
            							else {
HXLINE( 217)								if ((value25 > (int)1)) {
HXLINE( 217)									_y24 = (int)1;
            								}
            								else {
HXLINE( 217)									_y24 = value25;
            								}
            							}
HXDLIN( 217)							_y23 = ::Math_obj::asin(_y24);
HXDLIN( 217)							Float _z24 = (this->z * this->w);
HXDLIN( 217)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 217)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 217)							if ((order2 == (int)1)) {
HXLINE( 217)								Float value26 = (this->x * this->w);
HXDLIN( 217)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 217)								Float _x26;
HXDLIN( 217)								if ((value27 < (int)-1)) {
HXLINE( 217)									_x26 = (int)-1;
            								}
            								else {
HXLINE( 217)									if ((value27 > (int)1)) {
HXLINE( 217)										_x26 = (int)1;
            									}
            									else {
HXLINE( 217)										_x26 = value27;
            									}
            								}
HXDLIN( 217)								_x23 = ::Math_obj::asin(_x26);
HXDLIN( 217)								Float _y25 = (this->x * this->z);
HXDLIN( 217)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 217)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 217)								Float _z26 = (this->x * this->y);
HXDLIN( 217)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 217)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 217)								if ((order2 == (int)2)) {
HXLINE( 217)									Float value28 = (this->x * this->w);
HXDLIN( 217)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 217)									Float _x27;
HXDLIN( 217)									if ((value29 < (int)-1)) {
HXLINE( 217)										_x27 = (int)-1;
            									}
            									else {
HXLINE( 217)										if ((value29 > (int)1)) {
HXLINE( 217)											_x27 = (int)1;
            										}
            										else {
HXLINE( 217)											_x27 = value29;
            										}
            									}
HXDLIN( 217)									_x23 = ::Math_obj::asin(_x27);
HXDLIN( 217)									Float _y27 = (this->y * this->w);
HXDLIN( 217)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 217)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 217)									Float _z28 = (this->z * this->w);
HXDLIN( 217)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 217)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 217)									if ((order2 == (int)3)) {
HXLINE( 217)										Float _x28 = (this->x * this->w);
HXDLIN( 217)										Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN( 217)										_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 217)										Float value30 = (this->y * this->w);
HXDLIN( 217)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 217)										Float _y29;
HXDLIN( 217)										if ((value31 < (int)-1)) {
HXLINE( 217)											_y29 = (int)-1;
            										}
            										else {
HXLINE( 217)											if ((value31 > (int)1)) {
HXLINE( 217)												_y29 = (int)1;
            											}
            											else {
HXLINE( 217)												_y29 = value31;
            											}
            										}
HXDLIN( 217)										_y23 = ::Math_obj::asin(_y29);
HXDLIN( 217)										Float _z30 = (this->x * this->y);
HXDLIN( 217)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 217)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 217)										if ((order2 == (int)4)) {
HXLINE( 217)											Float _x30 = (this->x * this->w);
HXDLIN( 217)											Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN( 217)											_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 217)											Float _y30 = (this->y * this->w);
HXDLIN( 217)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 217)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 217)											Float value32 = (this->x * this->y);
HXDLIN( 217)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 217)											Float _z32;
HXDLIN( 217)											if ((value33 < (int)-1)) {
HXLINE( 217)												_z32 = (int)-1;
            											}
            											else {
HXLINE( 217)												if ((value33 > (int)1)) {
HXLINE( 217)													_z32 = (int)1;
            												}
            												else {
HXLINE( 217)													_z32 = value33;
            												}
            											}
HXDLIN( 217)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE( 217)											if ((order2 == (int)5)) {
HXLINE( 217)												Float _x32 = (this->x * this->w);
HXDLIN( 217)												Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN( 217)												_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 217)												Float _y32 = (this->x * this->z);
HXDLIN( 217)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 217)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 217)												Float value34 = (this->z * this->w);
HXDLIN( 217)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 217)												Float _z33;
HXDLIN( 217)												if ((value35 < (int)-1)) {
HXLINE( 217)													_z33 = (int)-1;
            												}
            												else {
HXLINE( 217)													if ((value35 > (int)1)) {
HXLINE( 217)														_z33 = (int)1;
            													}
            													else {
HXLINE( 217)														_z33 = value35;
            													}
            												}
HXDLIN( 217)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 217)						{
HXLINE( 217)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 217)							_this2->ignore_listeners = true;
HXDLIN( 217)							{
HXLINE( 217)								_this2->x = _x23;
HXDLIN( 217)								if (!(_this2->_construct)) {
HXLINE( 217)									bool _hx_tmp21;
HXDLIN( 217)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 217)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp21 = false;
            									}
HXDLIN( 217)									if (_hx_tmp21) {
HXLINE( 217)										_this2->listen_x(_x23);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this2->y = _y23;
HXDLIN( 217)								if (!(_this2->_construct)) {
HXLINE( 217)									bool _hx_tmp22;
HXDLIN( 217)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 217)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp22 = false;
            									}
HXDLIN( 217)									if (_hx_tmp22) {
HXLINE( 217)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this2->z = _z23;
HXDLIN( 217)								if (!(_this2->_construct)) {
HXLINE( 217)									bool _hx_tmp23;
HXDLIN( 217)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 217)										_hx_tmp23 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp23 = false;
            									}
HXDLIN( 217)									if (_hx_tmp23) {
HXLINE( 217)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN( 217)							_this2->ignore_listeners = prev2;
HXDLIN( 217)							bool _hx_tmp24;
HXDLIN( 217)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 217)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp24 = false;
            							}
HXDLIN( 217)							if (_hx_tmp24) {
HXLINE( 217)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 217)							bool _hx_tmp25;
HXDLIN( 217)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 217)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp25 = false;
            							}
HXDLIN( 217)							if (_hx_tmp25) {
HXLINE( 217)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 217)							bool _hx_tmp26;
HXDLIN( 217)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 217)								_hx_tmp26 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp26 = false;
            							}
HXDLIN( 217)							if (_hx_tmp26) {
HXLINE( 217)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 217)					bool _hx_tmp27;
HXDLIN( 217)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 217)						_hx_tmp27 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp27 = false;
            					}
HXDLIN( 217)					if (_hx_tmp27) {
HXLINE( 217)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 217)			{
HXLINE( 217)				this->w = _w;
HXDLIN( 217)				if (!(this->_construct)) {
HXLINE( 217)					bool _hx_tmp28;
HXDLIN( 217)					bool _hx_tmp29;
HXDLIN( 217)					if (hx::IsNotNull( this->euler )) {
HXLINE( 217)						_hx_tmp29 = this->ignore_euler;
            					}
            					else {
HXLINE( 217)						_hx_tmp29 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp29)) {
HXLINE( 217)						_hx_tmp28 = this->_construct;
            					}
            					else {
HXLINE( 217)						_hx_tmp28 = true;
            					}
HXDLIN( 217)					if (!(_hx_tmp28)) {
HXLINE( 217)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 217)						int order3 = (int)0;
HXDLIN( 217)						Float sqx3 = (this->x * this->x);
HXDLIN( 217)						Float sqy3 = (this->y * this->y);
HXDLIN( 217)						Float sqz3 = (this->z * this->z);
HXDLIN( 217)						Float sqw3 = (this->w * this->w);
HXDLIN( 217)						Float _x34 = _this3->x;
HXDLIN( 217)						Float _y34 = _this3->y;
HXDLIN( 217)						Float _z34 = _this3->z;
HXDLIN( 217)						if ((order3 == (int)0)) {
HXLINE( 217)							Float _x35 = (this->x * this->w);
HXDLIN( 217)							Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN( 217)							_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 217)							Float value36 = (this->x * this->z);
HXDLIN( 217)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 217)							Float _y35;
HXDLIN( 217)							if ((value37 < (int)-1)) {
HXLINE( 217)								_y35 = (int)-1;
            							}
            							else {
HXLINE( 217)								if ((value37 > (int)1)) {
HXLINE( 217)									_y35 = (int)1;
            								}
            								else {
HXLINE( 217)									_y35 = value37;
            								}
            							}
HXDLIN( 217)							_y34 = ::Math_obj::asin(_y35);
HXDLIN( 217)							Float _z35 = (this->z * this->w);
HXDLIN( 217)							Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 217)							_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 217)							if ((order3 == (int)1)) {
HXLINE( 217)								Float value38 = (this->x * this->w);
HXDLIN( 217)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 217)								Float _x37;
HXDLIN( 217)								if ((value39 < (int)-1)) {
HXLINE( 217)									_x37 = (int)-1;
            								}
            								else {
HXLINE( 217)									if ((value39 > (int)1)) {
HXLINE( 217)										_x37 = (int)1;
            									}
            									else {
HXLINE( 217)										_x37 = value39;
            									}
            								}
HXDLIN( 217)								_x34 = ::Math_obj::asin(_x37);
HXDLIN( 217)								Float _y36 = (this->x * this->z);
HXDLIN( 217)								Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 217)								_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 217)								Float _z37 = (this->x * this->y);
HXDLIN( 217)								Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 217)								_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 217)								if ((order3 == (int)2)) {
HXLINE( 217)									Float value40 = (this->x * this->w);
HXDLIN( 217)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 217)									Float _x38;
HXDLIN( 217)									if ((value41 < (int)-1)) {
HXLINE( 217)										_x38 = (int)-1;
            									}
            									else {
HXLINE( 217)										if ((value41 > (int)1)) {
HXLINE( 217)											_x38 = (int)1;
            										}
            										else {
HXLINE( 217)											_x38 = value41;
            										}
            									}
HXDLIN( 217)									_x34 = ::Math_obj::asin(_x38);
HXDLIN( 217)									Float _y38 = (this->y * this->w);
HXDLIN( 217)									Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 217)									_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 217)									Float _z39 = (this->z * this->w);
HXDLIN( 217)									Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 217)									_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 217)									if ((order3 == (int)3)) {
HXLINE( 217)										Float _x39 = (this->x * this->w);
HXDLIN( 217)										Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN( 217)										_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 217)										Float value42 = (this->y * this->w);
HXDLIN( 217)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 217)										Float _y40;
HXDLIN( 217)										if ((value43 < (int)-1)) {
HXLINE( 217)											_y40 = (int)-1;
            										}
            										else {
HXLINE( 217)											if ((value43 > (int)1)) {
HXLINE( 217)												_y40 = (int)1;
            											}
            											else {
HXLINE( 217)												_y40 = value43;
            											}
            										}
HXDLIN( 217)										_y34 = ::Math_obj::asin(_y40);
HXDLIN( 217)										Float _z41 = (this->x * this->y);
HXDLIN( 217)										Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 217)										_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 217)										if ((order3 == (int)4)) {
HXLINE( 217)											Float _x41 = (this->x * this->w);
HXDLIN( 217)											Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN( 217)											_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 217)											Float _y41 = (this->y * this->w);
HXDLIN( 217)											Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 217)											_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 217)											Float value44 = (this->x * this->y);
HXDLIN( 217)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 217)											Float _z43;
HXDLIN( 217)											if ((value45 < (int)-1)) {
HXLINE( 217)												_z43 = (int)-1;
            											}
            											else {
HXLINE( 217)												if ((value45 > (int)1)) {
HXLINE( 217)													_z43 = (int)1;
            												}
            												else {
HXLINE( 217)													_z43 = value45;
            												}
            											}
HXDLIN( 217)											_z34 = ::Math_obj::asin(_z43);
            										}
            										else {
HXLINE( 217)											if ((order3 == (int)5)) {
HXLINE( 217)												Float _x43 = (this->x * this->w);
HXDLIN( 217)												Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN( 217)												_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 217)												Float _y43 = (this->x * this->z);
HXDLIN( 217)												Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 217)												_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 217)												Float value46 = (this->z * this->w);
HXDLIN( 217)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 217)												Float _z44;
HXDLIN( 217)												if ((value47 < (int)-1)) {
HXLINE( 217)													_z44 = (int)-1;
            												}
            												else {
HXLINE( 217)													if ((value47 > (int)1)) {
HXLINE( 217)														_z44 = (int)1;
            													}
            													else {
HXLINE( 217)														_z44 = value47;
            													}
            												}
HXDLIN( 217)												_z34 = ::Math_obj::asin(_z44);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 217)						{
HXLINE( 217)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 217)							_this3->ignore_listeners = true;
HXDLIN( 217)							{
HXLINE( 217)								_this3->x = _x34;
HXDLIN( 217)								if (!(_this3->_construct)) {
HXLINE( 217)									bool _hx_tmp30;
HXDLIN( 217)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 217)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp30 = false;
            									}
HXDLIN( 217)									if (_hx_tmp30) {
HXLINE( 217)										_this3->listen_x(_x34);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this3->y = _y34;
HXDLIN( 217)								if (!(_this3->_construct)) {
HXLINE( 217)									bool _hx_tmp31;
HXDLIN( 217)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 217)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp31 = false;
            									}
HXDLIN( 217)									if (_hx_tmp31) {
HXLINE( 217)										_this3->listen_y(_y34);
            									}
            								}
            							}
HXDLIN( 217)							{
HXLINE( 217)								_this3->z = _z34;
HXDLIN( 217)								if (!(_this3->_construct)) {
HXLINE( 217)									bool _hx_tmp32;
HXDLIN( 217)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 217)										_hx_tmp32 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 217)										_hx_tmp32 = false;
            									}
HXDLIN( 217)									if (_hx_tmp32) {
HXLINE( 217)										_this3->listen_z(_z34);
            									}
            								}
            							}
HXDLIN( 217)							_this3->ignore_listeners = prev3;
HXDLIN( 217)							bool _hx_tmp33;
HXDLIN( 217)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 217)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp33 = false;
            							}
HXDLIN( 217)							if (_hx_tmp33) {
HXLINE( 217)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 217)							bool _hx_tmp34;
HXDLIN( 217)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 217)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp34 = false;
            							}
HXDLIN( 217)							if (_hx_tmp34) {
HXLINE( 217)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 217)							bool _hx_tmp35;
HXDLIN( 217)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 217)								_hx_tmp35 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp35 = false;
            							}
HXDLIN( 217)							if (_hx_tmp35) {
HXLINE( 217)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 217)					bool _hx_tmp36;
HXDLIN( 217)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 217)						_hx_tmp36 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp36 = false;
            					}
HXDLIN( 217)					if (_hx_tmp36) {
HXLINE( 217)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 217)			this->ignore_euler = false;
HXDLIN( 217)			bool _hx_tmp37;
HXDLIN( 217)			bool _hx_tmp38;
HXDLIN( 217)			if (hx::IsNotNull( this->euler )) {
HXLINE( 217)				_hx_tmp38 = this->ignore_euler;
            			}
            			else {
HXLINE( 217)				_hx_tmp38 = true;
            			}
HXDLIN( 217)			if (!(_hx_tmp38)) {
HXLINE( 217)				_hx_tmp37 = this->_construct;
            			}
            			else {
HXLINE( 217)				_hx_tmp37 = true;
            			}
HXDLIN( 217)			if (!(_hx_tmp37)) {
HXLINE( 217)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 217)				int order4 = (int)0;
HXDLIN( 217)				Float sqx4 = (this->x * this->x);
HXDLIN( 217)				Float sqy4 = (this->y * this->y);
HXDLIN( 217)				Float sqz4 = (this->z * this->z);
HXDLIN( 217)				Float sqw4 = (this->w * this->w);
HXDLIN( 217)				Float _x45 = _this4->x;
HXDLIN( 217)				Float _y45 = _this4->y;
HXDLIN( 217)				Float _z45 = _this4->z;
HXDLIN( 217)				if ((order4 == (int)0)) {
HXLINE( 217)					Float _x46 = (this->x * this->w);
HXDLIN( 217)					Float _x47 = ((int)2 * (_x46 - (this->y * this->z)));
HXDLIN( 217)					_x45 = ::Math_obj::atan2(_x47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 217)					Float value48 = (this->x * this->z);
HXDLIN( 217)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 217)					Float _y46;
HXDLIN( 217)					if ((value49 < (int)-1)) {
HXLINE( 217)						_y46 = (int)-1;
            					}
            					else {
HXLINE( 217)						if ((value49 > (int)1)) {
HXLINE( 217)							_y46 = (int)1;
            						}
            						else {
HXLINE( 217)							_y46 = value49;
            						}
            					}
HXDLIN( 217)					_y45 = ::Math_obj::asin(_y46);
HXDLIN( 217)					Float _z46 = (this->z * this->w);
HXDLIN( 217)					Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN( 217)					_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE( 217)					if ((order4 == (int)1)) {
HXLINE( 217)						Float value50 = (this->x * this->w);
HXDLIN( 217)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 217)						Float _x48;
HXDLIN( 217)						if ((value51 < (int)-1)) {
HXLINE( 217)							_x48 = (int)-1;
            						}
            						else {
HXLINE( 217)							if ((value51 > (int)1)) {
HXLINE( 217)								_x48 = (int)1;
            							}
            							else {
HXLINE( 217)								_x48 = value51;
            							}
            						}
HXDLIN( 217)						_x45 = ::Math_obj::asin(_x48);
HXDLIN( 217)						Float _y47 = (this->x * this->z);
HXDLIN( 217)						Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN( 217)						_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 217)						Float _z48 = (this->x * this->y);
HXDLIN( 217)						Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN( 217)						_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 217)						if ((order4 == (int)2)) {
HXLINE( 217)							Float value52 = (this->x * this->w);
HXDLIN( 217)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 217)							Float _x49;
HXDLIN( 217)							if ((value53 < (int)-1)) {
HXLINE( 217)								_x49 = (int)-1;
            							}
            							else {
HXLINE( 217)								if ((value53 > (int)1)) {
HXLINE( 217)									_x49 = (int)1;
            								}
            								else {
HXLINE( 217)									_x49 = value53;
            								}
            							}
HXDLIN( 217)							_x45 = ::Math_obj::asin(_x49);
HXDLIN( 217)							Float _y49 = (this->y * this->w);
HXDLIN( 217)							Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN( 217)							_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 217)							Float _z50 = (this->z * this->w);
HXDLIN( 217)							Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN( 217)							_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE( 217)							if ((order4 == (int)3)) {
HXLINE( 217)								Float _x50 = (this->x * this->w);
HXDLIN( 217)								Float _x51 = ((int)2 * (_x50 + (this->z * this->y)));
HXDLIN( 217)								_x45 = ::Math_obj::atan2(_x51,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 217)								Float value54 = (this->y * this->w);
HXDLIN( 217)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 217)								Float _y51;
HXDLIN( 217)								if ((value55 < (int)-1)) {
HXLINE( 217)									_y51 = (int)-1;
            								}
            								else {
HXLINE( 217)									if ((value55 > (int)1)) {
HXLINE( 217)										_y51 = (int)1;
            									}
            									else {
HXLINE( 217)										_y51 = value55;
            									}
            								}
HXDLIN( 217)								_y45 = ::Math_obj::asin(_y51);
HXDLIN( 217)								Float _z52 = (this->x * this->y);
HXDLIN( 217)								Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN( 217)								_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 217)								if ((order4 == (int)4)) {
HXLINE( 217)									Float _x52 = (this->x * this->w);
HXDLIN( 217)									Float _x53 = ((int)2 * (_x52 - (this->z * this->y)));
HXDLIN( 217)									_x45 = ::Math_obj::atan2(_x53,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 217)									Float _y52 = (this->y * this->w);
HXDLIN( 217)									Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN( 217)									_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 217)									Float value56 = (this->x * this->y);
HXDLIN( 217)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 217)									Float _z54;
HXDLIN( 217)									if ((value57 < (int)-1)) {
HXLINE( 217)										_z54 = (int)-1;
            									}
            									else {
HXLINE( 217)										if ((value57 > (int)1)) {
HXLINE( 217)											_z54 = (int)1;
            										}
            										else {
HXLINE( 217)											_z54 = value57;
            										}
            									}
HXDLIN( 217)									_z45 = ::Math_obj::asin(_z54);
            								}
            								else {
HXLINE( 217)									if ((order4 == (int)5)) {
HXLINE( 217)										Float _x54 = (this->x * this->w);
HXDLIN( 217)										Float _x55 = ((int)2 * (_x54 + (this->y * this->z)));
HXDLIN( 217)										_x45 = ::Math_obj::atan2(_x55,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 217)										Float _y54 = (this->x * this->z);
HXDLIN( 217)										Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN( 217)										_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 217)										Float value58 = (this->z * this->w);
HXDLIN( 217)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 217)										Float _z55;
HXDLIN( 217)										if ((value59 < (int)-1)) {
HXLINE( 217)											_z55 = (int)-1;
            										}
            										else {
HXLINE( 217)											if ((value59 > (int)1)) {
HXLINE( 217)												_z55 = (int)1;
            											}
            											else {
HXLINE( 217)												_z55 = value59;
            											}
            										}
HXDLIN( 217)										_z45 = ::Math_obj::asin(_z55);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 217)				{
HXLINE( 217)					bool prev4 = _this4->ignore_listeners;
HXDLIN( 217)					_this4->ignore_listeners = true;
HXDLIN( 217)					{
HXLINE( 217)						_this4->x = _x45;
HXDLIN( 217)						if (!(_this4->_construct)) {
HXLINE( 217)							bool _hx_tmp39;
HXDLIN( 217)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 217)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp39 = false;
            							}
HXDLIN( 217)							if (_hx_tmp39) {
HXLINE( 217)								_this4->listen_x(_x45);
            							}
            						}
            					}
HXDLIN( 217)					{
HXLINE( 217)						_this4->y = _y45;
HXDLIN( 217)						if (!(_this4->_construct)) {
HXLINE( 217)							bool _hx_tmp40;
HXDLIN( 217)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 217)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp40 = false;
            							}
HXDLIN( 217)							if (_hx_tmp40) {
HXLINE( 217)								_this4->listen_y(_y45);
            							}
            						}
            					}
HXDLIN( 217)					{
HXLINE( 217)						_this4->z = _z45;
HXDLIN( 217)						if (!(_this4->_construct)) {
HXLINE( 217)							bool _hx_tmp41;
HXDLIN( 217)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 217)								_hx_tmp41 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 217)								_hx_tmp41 = false;
            							}
HXDLIN( 217)							if (_hx_tmp41) {
HXLINE( 217)								_this4->listen_z(_z45);
            							}
            						}
            					}
HXDLIN( 217)					_this4->ignore_listeners = prev4;
HXDLIN( 217)					bool _hx_tmp42;
HXDLIN( 217)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 217)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp42 = false;
            					}
HXDLIN( 217)					if (_hx_tmp42) {
HXLINE( 217)						_this4->listen_x(_this4->x);
            					}
HXDLIN( 217)					bool _hx_tmp43;
HXDLIN( 217)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 217)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp43 = false;
            					}
HXDLIN( 217)					if (_hx_tmp43) {
HXLINE( 217)						_this4->listen_y(_this4->y);
            					}
HXDLIN( 217)					bool _hx_tmp44;
HXDLIN( 217)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 217)						_hx_tmp44 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 217)						_hx_tmp44 = false;
            					}
HXDLIN( 217)					if (_hx_tmp44) {
HXLINE( 217)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN( 217)			bool _hx_tmp45;
HXDLIN( 217)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 217)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 217)				_hx_tmp45 = false;
            			}
HXDLIN( 217)			if (_hx_tmp45) {
HXLINE( 217)				this->listen_x(this->x);
            			}
HXDLIN( 217)			bool _hx_tmp46;
HXDLIN( 217)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 217)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 217)				_hx_tmp46 = false;
            			}
HXDLIN( 217)			if (_hx_tmp46) {
HXLINE( 217)				this->listen_y(this->y);
            			}
HXDLIN( 217)			bool _hx_tmp47;
HXDLIN( 217)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 217)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 217)				_hx_tmp47 = false;
            			}
HXDLIN( 217)			if (_hx_tmp47) {
HXLINE( 217)				this->listen_z(this->z);
            			}
HXDLIN( 217)			bool _hx_tmp48;
HXDLIN( 217)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 217)				_hx_tmp48 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 217)				_hx_tmp48 = false;
            			}
HXDLIN( 217)			if (_hx_tmp48) {
HXLINE( 217)				this->listen_w(this->w);
            			}
            		}
HXLINE( 219)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,setFromRotationMatrix,return )

 ::phoenix::Quaternion Quaternion_obj::inverse(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_226_inverse)
HXDLIN( 226)		return this->conjugate()->normalize();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,inverse,return )

 ::phoenix::Quaternion Quaternion_obj::conjugate(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_231_conjugate)
HXLINE( 233)		{
HXLINE( 233)			Float _y = (this->y * (int)-1);
HXDLIN( 233)			Float _z = (this->z * (int)-1);
HXDLIN( 233)			this->ignore_euler = true;
HXDLIN( 233)			{
HXLINE( 233)				this->x = (this->x * (int)-1);
HXDLIN( 233)				if (!(this->_construct)) {
HXLINE( 233)					bool _hx_tmp;
HXDLIN( 233)					bool _hx_tmp1;
HXDLIN( 233)					if (hx::IsNotNull( this->euler )) {
HXLINE( 233)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 233)						_hx_tmp1 = true;
            					}
HXDLIN( 233)					if (!(_hx_tmp1)) {
HXLINE( 233)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 233)						_hx_tmp = true;
            					}
HXDLIN( 233)					if (!(_hx_tmp)) {
HXLINE( 233)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 233)						int order = (int)0;
HXDLIN( 233)						Float sqx = (this->x * this->x);
HXDLIN( 233)						Float sqy = (this->y * this->y);
HXDLIN( 233)						Float sqz = (this->z * this->z);
HXDLIN( 233)						Float sqw = (this->w * this->w);
HXDLIN( 233)						Float _x = _this->x;
HXDLIN( 233)						Float _y1 = _this->y;
HXDLIN( 233)						Float _z1 = _this->z;
HXDLIN( 233)						if ((order == (int)0)) {
HXLINE( 233)							Float _x1 = (this->x * this->w);
HXDLIN( 233)							Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 233)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 233)							Float value = (this->x * this->z);
HXDLIN( 233)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 233)							Float _y2;
HXDLIN( 233)							if ((value1 < (int)-1)) {
HXLINE( 233)								_y2 = (int)-1;
            							}
            							else {
HXLINE( 233)								if ((value1 > (int)1)) {
HXLINE( 233)									_y2 = (int)1;
            								}
            								else {
HXLINE( 233)									_y2 = value1;
            								}
            							}
HXDLIN( 233)							_y1 = ::Math_obj::asin(_y2);
HXDLIN( 233)							Float _z2 = (this->z * this->w);
HXDLIN( 233)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 233)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 233)							if ((order == (int)1)) {
HXLINE( 233)								Float value2 = (this->x * this->w);
HXDLIN( 233)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 233)								Float _x3;
HXDLIN( 233)								if ((value3 < (int)-1)) {
HXLINE( 233)									_x3 = (int)-1;
            								}
            								else {
HXLINE( 233)									if ((value3 > (int)1)) {
HXLINE( 233)										_x3 = (int)1;
            									}
            									else {
HXLINE( 233)										_x3 = value3;
            									}
            								}
HXDLIN( 233)								_x = ::Math_obj::asin(_x3);
HXDLIN( 233)								Float _y3 = (this->x * this->z);
HXDLIN( 233)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 233)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 233)								Float _z4 = (this->x * this->y);
HXDLIN( 233)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 233)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 233)								if ((order == (int)2)) {
HXLINE( 233)									Float value4 = (this->x * this->w);
HXDLIN( 233)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 233)									Float _x4;
HXDLIN( 233)									if ((value5 < (int)-1)) {
HXLINE( 233)										_x4 = (int)-1;
            									}
            									else {
HXLINE( 233)										if ((value5 > (int)1)) {
HXLINE( 233)											_x4 = (int)1;
            										}
            										else {
HXLINE( 233)											_x4 = value5;
            										}
            									}
HXDLIN( 233)									_x = ::Math_obj::asin(_x4);
HXDLIN( 233)									Float _y5 = (this->y * this->w);
HXDLIN( 233)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 233)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 233)									Float _z6 = (this->z * this->w);
HXDLIN( 233)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 233)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 233)									if ((order == (int)3)) {
HXLINE( 233)										Float _x5 = (this->x * this->w);
HXDLIN( 233)										Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 233)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 233)										Float value6 = (this->y * this->w);
HXDLIN( 233)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 233)										Float _y7;
HXDLIN( 233)										if ((value7 < (int)-1)) {
HXLINE( 233)											_y7 = (int)-1;
            										}
            										else {
HXLINE( 233)											if ((value7 > (int)1)) {
HXLINE( 233)												_y7 = (int)1;
            											}
            											else {
HXLINE( 233)												_y7 = value7;
            											}
            										}
HXDLIN( 233)										_y1 = ::Math_obj::asin(_y7);
HXDLIN( 233)										Float _z8 = (this->x * this->y);
HXDLIN( 233)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 233)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 233)										if ((order == (int)4)) {
HXLINE( 233)											Float _x7 = (this->x * this->w);
HXDLIN( 233)											Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 233)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 233)											Float _y8 = (this->y * this->w);
HXDLIN( 233)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 233)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 233)											Float value8 = (this->x * this->y);
HXDLIN( 233)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 233)											Float _z10;
HXDLIN( 233)											if ((value9 < (int)-1)) {
HXLINE( 233)												_z10 = (int)-1;
            											}
            											else {
HXLINE( 233)												if ((value9 > (int)1)) {
HXLINE( 233)													_z10 = (int)1;
            												}
            												else {
HXLINE( 233)													_z10 = value9;
            												}
            											}
HXDLIN( 233)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE( 233)											if ((order == (int)5)) {
HXLINE( 233)												Float _x9 = (this->x * this->w);
HXDLIN( 233)												Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 233)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 233)												Float _y10 = (this->x * this->z);
HXDLIN( 233)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 233)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 233)												Float value10 = (this->z * this->w);
HXDLIN( 233)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 233)												Float _z11;
HXDLIN( 233)												if ((value11 < (int)-1)) {
HXLINE( 233)													_z11 = (int)-1;
            												}
            												else {
HXLINE( 233)													if ((value11 > (int)1)) {
HXLINE( 233)														_z11 = (int)1;
            													}
            													else {
HXLINE( 233)														_z11 = value11;
            													}
            												}
HXDLIN( 233)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 233)						{
HXLINE( 233)							bool prev = _this->ignore_listeners;
HXDLIN( 233)							_this->ignore_listeners = true;
HXDLIN( 233)							{
HXLINE( 233)								_this->x = _x;
HXDLIN( 233)								if (!(_this->_construct)) {
HXLINE( 233)									bool _hx_tmp2;
HXDLIN( 233)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 233)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp2 = false;
            									}
HXDLIN( 233)									if (_hx_tmp2) {
HXLINE( 233)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN( 233)							{
HXLINE( 233)								_this->y = _y1;
HXDLIN( 233)								if (!(_this->_construct)) {
HXLINE( 233)									bool _hx_tmp3;
HXDLIN( 233)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 233)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp3 = false;
            									}
HXDLIN( 233)									if (_hx_tmp3) {
HXLINE( 233)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN( 233)							{
HXLINE( 233)								_this->z = _z1;
HXDLIN( 233)								if (!(_this->_construct)) {
HXLINE( 233)									bool _hx_tmp4;
HXDLIN( 233)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 233)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp4 = false;
            									}
HXDLIN( 233)									if (_hx_tmp4) {
HXLINE( 233)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN( 233)							_this->ignore_listeners = prev;
HXDLIN( 233)							bool _hx_tmp5;
HXDLIN( 233)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 233)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp5 = false;
            							}
HXDLIN( 233)							if (_hx_tmp5) {
HXLINE( 233)								_this->listen_x(_this->x);
            							}
HXDLIN( 233)							bool _hx_tmp6;
HXDLIN( 233)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 233)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp6 = false;
            							}
HXDLIN( 233)							if (_hx_tmp6) {
HXLINE( 233)								_this->listen_y(_this->y);
            							}
HXDLIN( 233)							bool _hx_tmp7;
HXDLIN( 233)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 233)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp7 = false;
            							}
HXDLIN( 233)							if (_hx_tmp7) {
HXLINE( 233)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 233)					bool _hx_tmp8;
HXDLIN( 233)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 233)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 233)						_hx_tmp8 = false;
            					}
HXDLIN( 233)					if (_hx_tmp8) {
HXLINE( 233)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 233)			{
HXLINE( 233)				this->y = _y;
HXDLIN( 233)				if (!(this->_construct)) {
HXLINE( 233)					bool _hx_tmp9;
HXDLIN( 233)					bool _hx_tmp10;
HXDLIN( 233)					if (hx::IsNotNull( this->euler )) {
HXLINE( 233)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 233)						_hx_tmp10 = true;
            					}
HXDLIN( 233)					if (!(_hx_tmp10)) {
HXLINE( 233)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 233)						_hx_tmp9 = true;
            					}
HXDLIN( 233)					if (!(_hx_tmp9)) {
HXLINE( 233)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 233)						int order1 = (int)0;
HXDLIN( 233)						Float sqx1 = (this->x * this->x);
HXDLIN( 233)						Float sqy1 = (this->y * this->y);
HXDLIN( 233)						Float sqz1 = (this->z * this->z);
HXDLIN( 233)						Float sqw1 = (this->w * this->w);
HXDLIN( 233)						Float _x11 = _this1->x;
HXDLIN( 233)						Float _y12 = _this1->y;
HXDLIN( 233)						Float _z12 = _this1->z;
HXDLIN( 233)						if ((order1 == (int)0)) {
HXLINE( 233)							Float _x12 = (this->x * this->w);
HXDLIN( 233)							Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN( 233)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 233)							Float value12 = (this->x * this->z);
HXDLIN( 233)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 233)							Float _y13;
HXDLIN( 233)							if ((value13 < (int)-1)) {
HXLINE( 233)								_y13 = (int)-1;
            							}
            							else {
HXLINE( 233)								if ((value13 > (int)1)) {
HXLINE( 233)									_y13 = (int)1;
            								}
            								else {
HXLINE( 233)									_y13 = value13;
            								}
            							}
HXDLIN( 233)							_y12 = ::Math_obj::asin(_y13);
HXDLIN( 233)							Float _z13 = (this->z * this->w);
HXDLIN( 233)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 233)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 233)							if ((order1 == (int)1)) {
HXLINE( 233)								Float value14 = (this->x * this->w);
HXDLIN( 233)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 233)								Float _x14;
HXDLIN( 233)								if ((value15 < (int)-1)) {
HXLINE( 233)									_x14 = (int)-1;
            								}
            								else {
HXLINE( 233)									if ((value15 > (int)1)) {
HXLINE( 233)										_x14 = (int)1;
            									}
            									else {
HXLINE( 233)										_x14 = value15;
            									}
            								}
HXDLIN( 233)								_x11 = ::Math_obj::asin(_x14);
HXDLIN( 233)								Float _y14 = (this->x * this->z);
HXDLIN( 233)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 233)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 233)								Float _z15 = (this->x * this->y);
HXDLIN( 233)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 233)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 233)								if ((order1 == (int)2)) {
HXLINE( 233)									Float value16 = (this->x * this->w);
HXDLIN( 233)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 233)									Float _x15;
HXDLIN( 233)									if ((value17 < (int)-1)) {
HXLINE( 233)										_x15 = (int)-1;
            									}
            									else {
HXLINE( 233)										if ((value17 > (int)1)) {
HXLINE( 233)											_x15 = (int)1;
            										}
            										else {
HXLINE( 233)											_x15 = value17;
            										}
            									}
HXDLIN( 233)									_x11 = ::Math_obj::asin(_x15);
HXDLIN( 233)									Float _y16 = (this->y * this->w);
HXDLIN( 233)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 233)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 233)									Float _z17 = (this->z * this->w);
HXDLIN( 233)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 233)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 233)									if ((order1 == (int)3)) {
HXLINE( 233)										Float _x16 = (this->x * this->w);
HXDLIN( 233)										Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN( 233)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 233)										Float value18 = (this->y * this->w);
HXDLIN( 233)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 233)										Float _y18;
HXDLIN( 233)										if ((value19 < (int)-1)) {
HXLINE( 233)											_y18 = (int)-1;
            										}
            										else {
HXLINE( 233)											if ((value19 > (int)1)) {
HXLINE( 233)												_y18 = (int)1;
            											}
            											else {
HXLINE( 233)												_y18 = value19;
            											}
            										}
HXDLIN( 233)										_y12 = ::Math_obj::asin(_y18);
HXDLIN( 233)										Float _z19 = (this->x * this->y);
HXDLIN( 233)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 233)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 233)										if ((order1 == (int)4)) {
HXLINE( 233)											Float _x18 = (this->x * this->w);
HXDLIN( 233)											Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN( 233)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 233)											Float _y19 = (this->y * this->w);
HXDLIN( 233)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 233)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 233)											Float value20 = (this->x * this->y);
HXDLIN( 233)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 233)											Float _z21;
HXDLIN( 233)											if ((value21 < (int)-1)) {
HXLINE( 233)												_z21 = (int)-1;
            											}
            											else {
HXLINE( 233)												if ((value21 > (int)1)) {
HXLINE( 233)													_z21 = (int)1;
            												}
            												else {
HXLINE( 233)													_z21 = value21;
            												}
            											}
HXDLIN( 233)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE( 233)											if ((order1 == (int)5)) {
HXLINE( 233)												Float _x20 = (this->x * this->w);
HXDLIN( 233)												Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN( 233)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 233)												Float _y21 = (this->x * this->z);
HXDLIN( 233)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 233)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 233)												Float value22 = (this->z * this->w);
HXDLIN( 233)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 233)												Float _z22;
HXDLIN( 233)												if ((value23 < (int)-1)) {
HXLINE( 233)													_z22 = (int)-1;
            												}
            												else {
HXLINE( 233)													if ((value23 > (int)1)) {
HXLINE( 233)														_z22 = (int)1;
            													}
            													else {
HXLINE( 233)														_z22 = value23;
            													}
            												}
HXDLIN( 233)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 233)						{
HXLINE( 233)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 233)							_this1->ignore_listeners = true;
HXDLIN( 233)							{
HXLINE( 233)								_this1->x = _x11;
HXDLIN( 233)								if (!(_this1->_construct)) {
HXLINE( 233)									bool _hx_tmp11;
HXDLIN( 233)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 233)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp11 = false;
            									}
HXDLIN( 233)									if (_hx_tmp11) {
HXLINE( 233)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN( 233)							{
HXLINE( 233)								_this1->y = _y12;
HXDLIN( 233)								if (!(_this1->_construct)) {
HXLINE( 233)									bool _hx_tmp12;
HXDLIN( 233)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 233)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp12 = false;
            									}
HXDLIN( 233)									if (_hx_tmp12) {
HXLINE( 233)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN( 233)							{
HXLINE( 233)								_this1->z = _z12;
HXDLIN( 233)								if (!(_this1->_construct)) {
HXLINE( 233)									bool _hx_tmp13;
HXDLIN( 233)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 233)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp13 = false;
            									}
HXDLIN( 233)									if (_hx_tmp13) {
HXLINE( 233)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN( 233)							_this1->ignore_listeners = prev1;
HXDLIN( 233)							bool _hx_tmp14;
HXDLIN( 233)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 233)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp14 = false;
            							}
HXDLIN( 233)							if (_hx_tmp14) {
HXLINE( 233)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 233)							bool _hx_tmp15;
HXDLIN( 233)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 233)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp15 = false;
            							}
HXDLIN( 233)							if (_hx_tmp15) {
HXLINE( 233)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 233)							bool _hx_tmp16;
HXDLIN( 233)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 233)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp16 = false;
            							}
HXDLIN( 233)							if (_hx_tmp16) {
HXLINE( 233)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 233)					bool _hx_tmp17;
HXDLIN( 233)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 233)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 233)						_hx_tmp17 = false;
            					}
HXDLIN( 233)					if (_hx_tmp17) {
HXLINE( 233)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 233)			{
HXLINE( 233)				this->z = _z;
HXDLIN( 233)				if (!(this->_construct)) {
HXLINE( 233)					bool _hx_tmp18;
HXDLIN( 233)					bool _hx_tmp19;
HXDLIN( 233)					if (hx::IsNotNull( this->euler )) {
HXLINE( 233)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 233)						_hx_tmp19 = true;
            					}
HXDLIN( 233)					if (!(_hx_tmp19)) {
HXLINE( 233)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 233)						_hx_tmp18 = true;
            					}
HXDLIN( 233)					if (!(_hx_tmp18)) {
HXLINE( 233)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 233)						int order2 = (int)0;
HXDLIN( 233)						Float sqx2 = (this->x * this->x);
HXDLIN( 233)						Float sqy2 = (this->y * this->y);
HXDLIN( 233)						Float sqz2 = (this->z * this->z);
HXDLIN( 233)						Float sqw2 = (this->w * this->w);
HXDLIN( 233)						Float _x22 = _this2->x;
HXDLIN( 233)						Float _y23 = _this2->y;
HXDLIN( 233)						Float _z23 = _this2->z;
HXDLIN( 233)						if ((order2 == (int)0)) {
HXLINE( 233)							Float _x23 = (this->x * this->w);
HXDLIN( 233)							Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN( 233)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 233)							Float value24 = (this->x * this->z);
HXDLIN( 233)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 233)							Float _y24;
HXDLIN( 233)							if ((value25 < (int)-1)) {
HXLINE( 233)								_y24 = (int)-1;
            							}
            							else {
HXLINE( 233)								if ((value25 > (int)1)) {
HXLINE( 233)									_y24 = (int)1;
            								}
            								else {
HXLINE( 233)									_y24 = value25;
            								}
            							}
HXDLIN( 233)							_y23 = ::Math_obj::asin(_y24);
HXDLIN( 233)							Float _z24 = (this->z * this->w);
HXDLIN( 233)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 233)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 233)							if ((order2 == (int)1)) {
HXLINE( 233)								Float value26 = (this->x * this->w);
HXDLIN( 233)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 233)								Float _x25;
HXDLIN( 233)								if ((value27 < (int)-1)) {
HXLINE( 233)									_x25 = (int)-1;
            								}
            								else {
HXLINE( 233)									if ((value27 > (int)1)) {
HXLINE( 233)										_x25 = (int)1;
            									}
            									else {
HXLINE( 233)										_x25 = value27;
            									}
            								}
HXDLIN( 233)								_x22 = ::Math_obj::asin(_x25);
HXDLIN( 233)								Float _y25 = (this->x * this->z);
HXDLIN( 233)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 233)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 233)								Float _z26 = (this->x * this->y);
HXDLIN( 233)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 233)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 233)								if ((order2 == (int)2)) {
HXLINE( 233)									Float value28 = (this->x * this->w);
HXDLIN( 233)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 233)									Float _x26;
HXDLIN( 233)									if ((value29 < (int)-1)) {
HXLINE( 233)										_x26 = (int)-1;
            									}
            									else {
HXLINE( 233)										if ((value29 > (int)1)) {
HXLINE( 233)											_x26 = (int)1;
            										}
            										else {
HXLINE( 233)											_x26 = value29;
            										}
            									}
HXDLIN( 233)									_x22 = ::Math_obj::asin(_x26);
HXDLIN( 233)									Float _y27 = (this->y * this->w);
HXDLIN( 233)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 233)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 233)									Float _z28 = (this->z * this->w);
HXDLIN( 233)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 233)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 233)									if ((order2 == (int)3)) {
HXLINE( 233)										Float _x27 = (this->x * this->w);
HXDLIN( 233)										Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN( 233)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 233)										Float value30 = (this->y * this->w);
HXDLIN( 233)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 233)										Float _y29;
HXDLIN( 233)										if ((value31 < (int)-1)) {
HXLINE( 233)											_y29 = (int)-1;
            										}
            										else {
HXLINE( 233)											if ((value31 > (int)1)) {
HXLINE( 233)												_y29 = (int)1;
            											}
            											else {
HXLINE( 233)												_y29 = value31;
            											}
            										}
HXDLIN( 233)										_y23 = ::Math_obj::asin(_y29);
HXDLIN( 233)										Float _z30 = (this->x * this->y);
HXDLIN( 233)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 233)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 233)										if ((order2 == (int)4)) {
HXLINE( 233)											Float _x29 = (this->x * this->w);
HXDLIN( 233)											Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN( 233)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 233)											Float _y30 = (this->y * this->w);
HXDLIN( 233)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 233)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 233)											Float value32 = (this->x * this->y);
HXDLIN( 233)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 233)											Float _z32;
HXDLIN( 233)											if ((value33 < (int)-1)) {
HXLINE( 233)												_z32 = (int)-1;
            											}
            											else {
HXLINE( 233)												if ((value33 > (int)1)) {
HXLINE( 233)													_z32 = (int)1;
            												}
            												else {
HXLINE( 233)													_z32 = value33;
            												}
            											}
HXDLIN( 233)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE( 233)											if ((order2 == (int)5)) {
HXLINE( 233)												Float _x31 = (this->x * this->w);
HXDLIN( 233)												Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN( 233)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 233)												Float _y32 = (this->x * this->z);
HXDLIN( 233)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 233)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 233)												Float value34 = (this->z * this->w);
HXDLIN( 233)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 233)												Float _z33;
HXDLIN( 233)												if ((value35 < (int)-1)) {
HXLINE( 233)													_z33 = (int)-1;
            												}
            												else {
HXLINE( 233)													if ((value35 > (int)1)) {
HXLINE( 233)														_z33 = (int)1;
            													}
            													else {
HXLINE( 233)														_z33 = value35;
            													}
            												}
HXDLIN( 233)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 233)						{
HXLINE( 233)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 233)							_this2->ignore_listeners = true;
HXDLIN( 233)							{
HXLINE( 233)								_this2->x = _x22;
HXDLIN( 233)								if (!(_this2->_construct)) {
HXLINE( 233)									bool _hx_tmp20;
HXDLIN( 233)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 233)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp20 = false;
            									}
HXDLIN( 233)									if (_hx_tmp20) {
HXLINE( 233)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN( 233)							{
HXLINE( 233)								_this2->y = _y23;
HXDLIN( 233)								if (!(_this2->_construct)) {
HXLINE( 233)									bool _hx_tmp21;
HXDLIN( 233)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 233)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp21 = false;
            									}
HXDLIN( 233)									if (_hx_tmp21) {
HXLINE( 233)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN( 233)							{
HXLINE( 233)								_this2->z = _z23;
HXDLIN( 233)								if (!(_this2->_construct)) {
HXLINE( 233)									bool _hx_tmp22;
HXDLIN( 233)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 233)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 233)										_hx_tmp22 = false;
            									}
HXDLIN( 233)									if (_hx_tmp22) {
HXLINE( 233)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN( 233)							_this2->ignore_listeners = prev2;
HXDLIN( 233)							bool _hx_tmp23;
HXDLIN( 233)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 233)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp23 = false;
            							}
HXDLIN( 233)							if (_hx_tmp23) {
HXLINE( 233)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 233)							bool _hx_tmp24;
HXDLIN( 233)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 233)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp24 = false;
            							}
HXDLIN( 233)							if (_hx_tmp24) {
HXLINE( 233)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 233)							bool _hx_tmp25;
HXDLIN( 233)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 233)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp25 = false;
            							}
HXDLIN( 233)							if (_hx_tmp25) {
HXLINE( 233)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 233)					bool _hx_tmp26;
HXDLIN( 233)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 233)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 233)						_hx_tmp26 = false;
            					}
HXDLIN( 233)					if (_hx_tmp26) {
HXLINE( 233)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 233)			this->ignore_euler = false;
HXDLIN( 233)			bool _hx_tmp27;
HXDLIN( 233)			bool _hx_tmp28;
HXDLIN( 233)			if (hx::IsNotNull( this->euler )) {
HXLINE( 233)				_hx_tmp28 = this->ignore_euler;
            			}
            			else {
HXLINE( 233)				_hx_tmp28 = true;
            			}
HXDLIN( 233)			if (!(_hx_tmp28)) {
HXLINE( 233)				_hx_tmp27 = this->_construct;
            			}
            			else {
HXLINE( 233)				_hx_tmp27 = true;
            			}
HXDLIN( 233)			if (!(_hx_tmp27)) {
HXLINE( 233)				 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 233)				int order3 = (int)0;
HXDLIN( 233)				Float sqx3 = (this->x * this->x);
HXDLIN( 233)				Float sqy3 = (this->y * this->y);
HXDLIN( 233)				Float sqz3 = (this->z * this->z);
HXDLIN( 233)				Float sqw3 = (this->w * this->w);
HXDLIN( 233)				Float _x33 = _this3->x;
HXDLIN( 233)				Float _y34 = _this3->y;
HXDLIN( 233)				Float _z34 = _this3->z;
HXDLIN( 233)				if ((order3 == (int)0)) {
HXLINE( 233)					Float _x34 = (this->x * this->w);
HXDLIN( 233)					Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN( 233)					_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 233)					Float value36 = (this->x * this->z);
HXDLIN( 233)					Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 233)					Float _y35;
HXDLIN( 233)					if ((value37 < (int)-1)) {
HXLINE( 233)						_y35 = (int)-1;
            					}
            					else {
HXLINE( 233)						if ((value37 > (int)1)) {
HXLINE( 233)							_y35 = (int)1;
            						}
            						else {
HXLINE( 233)							_y35 = value37;
            						}
            					}
HXDLIN( 233)					_y34 = ::Math_obj::asin(_y35);
HXDLIN( 233)					Float _z35 = (this->z * this->w);
HXDLIN( 233)					Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 233)					_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            				}
            				else {
HXLINE( 233)					if ((order3 == (int)1)) {
HXLINE( 233)						Float value38 = (this->x * this->w);
HXDLIN( 233)						Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 233)						Float _x36;
HXDLIN( 233)						if ((value39 < (int)-1)) {
HXLINE( 233)							_x36 = (int)-1;
            						}
            						else {
HXLINE( 233)							if ((value39 > (int)1)) {
HXLINE( 233)								_x36 = (int)1;
            							}
            							else {
HXLINE( 233)								_x36 = value39;
            							}
            						}
HXDLIN( 233)						_x33 = ::Math_obj::asin(_x36);
HXDLIN( 233)						Float _y36 = (this->x * this->z);
HXDLIN( 233)						Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 233)						_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 233)						Float _z37 = (this->x * this->y);
HXDLIN( 233)						Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 233)						_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            					}
            					else {
HXLINE( 233)						if ((order3 == (int)2)) {
HXLINE( 233)							Float value40 = (this->x * this->w);
HXDLIN( 233)							Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 233)							Float _x37;
HXDLIN( 233)							if ((value41 < (int)-1)) {
HXLINE( 233)								_x37 = (int)-1;
            							}
            							else {
HXLINE( 233)								if ((value41 > (int)1)) {
HXLINE( 233)									_x37 = (int)1;
            								}
            								else {
HXLINE( 233)									_x37 = value41;
            								}
            							}
HXDLIN( 233)							_x33 = ::Math_obj::asin(_x37);
HXDLIN( 233)							Float _y38 = (this->y * this->w);
HXDLIN( 233)							Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 233)							_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 233)							Float _z39 = (this->z * this->w);
HXDLIN( 233)							Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 233)							_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            						}
            						else {
HXLINE( 233)							if ((order3 == (int)3)) {
HXLINE( 233)								Float _x38 = (this->x * this->w);
HXDLIN( 233)								Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN( 233)								_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 233)								Float value42 = (this->y * this->w);
HXDLIN( 233)								Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 233)								Float _y40;
HXDLIN( 233)								if ((value43 < (int)-1)) {
HXLINE( 233)									_y40 = (int)-1;
            								}
            								else {
HXLINE( 233)									if ((value43 > (int)1)) {
HXLINE( 233)										_y40 = (int)1;
            									}
            									else {
HXLINE( 233)										_y40 = value43;
            									}
            								}
HXDLIN( 233)								_y34 = ::Math_obj::asin(_y40);
HXDLIN( 233)								Float _z41 = (this->x * this->y);
HXDLIN( 233)								Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 233)								_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            							}
            							else {
HXLINE( 233)								if ((order3 == (int)4)) {
HXLINE( 233)									Float _x40 = (this->x * this->w);
HXDLIN( 233)									Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN( 233)									_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 233)									Float _y41 = (this->y * this->w);
HXDLIN( 233)									Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 233)									_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 233)									Float value44 = (this->x * this->y);
HXDLIN( 233)									Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 233)									Float _z43;
HXDLIN( 233)									if ((value45 < (int)-1)) {
HXLINE( 233)										_z43 = (int)-1;
            									}
            									else {
HXLINE( 233)										if ((value45 > (int)1)) {
HXLINE( 233)											_z43 = (int)1;
            										}
            										else {
HXLINE( 233)											_z43 = value45;
            										}
            									}
HXDLIN( 233)									_z34 = ::Math_obj::asin(_z43);
            								}
            								else {
HXLINE( 233)									if ((order3 == (int)5)) {
HXLINE( 233)										Float _x42 = (this->x * this->w);
HXDLIN( 233)										Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN( 233)										_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 233)										Float _y43 = (this->x * this->z);
HXDLIN( 233)										Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 233)										_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 233)										Float value46 = (this->z * this->w);
HXDLIN( 233)										Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 233)										Float _z44;
HXDLIN( 233)										if ((value47 < (int)-1)) {
HXLINE( 233)											_z44 = (int)-1;
            										}
            										else {
HXLINE( 233)											if ((value47 > (int)1)) {
HXLINE( 233)												_z44 = (int)1;
            											}
            											else {
HXLINE( 233)												_z44 = value47;
            											}
            										}
HXDLIN( 233)										_z34 = ::Math_obj::asin(_z44);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 233)				{
HXLINE( 233)					bool prev3 = _this3->ignore_listeners;
HXDLIN( 233)					_this3->ignore_listeners = true;
HXDLIN( 233)					{
HXLINE( 233)						_this3->x = _x33;
HXDLIN( 233)						if (!(_this3->_construct)) {
HXLINE( 233)							bool _hx_tmp29;
HXDLIN( 233)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 233)								_hx_tmp29 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp29 = false;
            							}
HXDLIN( 233)							if (_hx_tmp29) {
HXLINE( 233)								_this3->listen_x(_x33);
            							}
            						}
            					}
HXDLIN( 233)					{
HXLINE( 233)						_this3->y = _y34;
HXDLIN( 233)						if (!(_this3->_construct)) {
HXLINE( 233)							bool _hx_tmp30;
HXDLIN( 233)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 233)								_hx_tmp30 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp30 = false;
            							}
HXDLIN( 233)							if (_hx_tmp30) {
HXLINE( 233)								_this3->listen_y(_y34);
            							}
            						}
            					}
HXDLIN( 233)					{
HXLINE( 233)						_this3->z = _z34;
HXDLIN( 233)						if (!(_this3->_construct)) {
HXLINE( 233)							bool _hx_tmp31;
HXDLIN( 233)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 233)								_hx_tmp31 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 233)								_hx_tmp31 = false;
            							}
HXDLIN( 233)							if (_hx_tmp31) {
HXLINE( 233)								_this3->listen_z(_z34);
            							}
            						}
            					}
HXDLIN( 233)					_this3->ignore_listeners = prev3;
HXDLIN( 233)					bool _hx_tmp32;
HXDLIN( 233)					if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 233)						_hx_tmp32 = !(_this3->ignore_listeners);
            					}
            					else {
HXLINE( 233)						_hx_tmp32 = false;
            					}
HXDLIN( 233)					if (_hx_tmp32) {
HXLINE( 233)						_this3->listen_x(_this3->x);
            					}
HXDLIN( 233)					bool _hx_tmp33;
HXDLIN( 233)					if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 233)						_hx_tmp33 = !(_this3->ignore_listeners);
            					}
            					else {
HXLINE( 233)						_hx_tmp33 = false;
            					}
HXDLIN( 233)					if (_hx_tmp33) {
HXLINE( 233)						_this3->listen_y(_this3->y);
            					}
HXDLIN( 233)					bool _hx_tmp34;
HXDLIN( 233)					if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 233)						_hx_tmp34 = !(_this3->ignore_listeners);
            					}
            					else {
HXLINE( 233)						_hx_tmp34 = false;
            					}
HXDLIN( 233)					if (_hx_tmp34) {
HXLINE( 233)						_this3->listen_z(_this3->z);
            					}
            				}
            			}
HXDLIN( 233)			bool _hx_tmp35;
HXDLIN( 233)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 233)				_hx_tmp35 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 233)				_hx_tmp35 = false;
            			}
HXDLIN( 233)			if (_hx_tmp35) {
HXLINE( 233)				this->listen_x(this->x);
            			}
HXDLIN( 233)			bool _hx_tmp36;
HXDLIN( 233)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 233)				_hx_tmp36 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 233)				_hx_tmp36 = false;
            			}
HXDLIN( 233)			if (_hx_tmp36) {
HXLINE( 233)				this->listen_y(this->y);
            			}
HXDLIN( 233)			bool _hx_tmp37;
HXDLIN( 233)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 233)				_hx_tmp37 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 233)				_hx_tmp37 = false;
            			}
HXDLIN( 233)			if (_hx_tmp37) {
HXLINE( 233)				this->listen_z(this->z);
            			}
            		}
HXLINE( 235)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,conjugate,return )

Float Quaternion_obj::lengthSq(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_242_lengthSq)
HXDLIN( 242)		Float _hx_tmp = (this->x * this->x);
HXDLIN( 242)		Float _hx_tmp1 = (_hx_tmp + (this->y * this->y));
HXDLIN( 242)		Float _hx_tmp2 = (_hx_tmp1 + (this->z * this->z));
HXDLIN( 242)		return (_hx_tmp2 + (this->w * this->w));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,lengthSq,return )

Float Quaternion_obj::length(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_249_length)
HXDLIN( 249)		Float _hx_tmp = (this->x * this->x);
HXDLIN( 249)		Float _hx_tmp1 = (_hx_tmp + (this->y * this->y));
HXDLIN( 249)		Float _hx_tmp2 = (_hx_tmp1 + (this->z * this->z));
HXDLIN( 249)		return ::Math_obj::sqrt((_hx_tmp2 + (this->w * this->w)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,length,return )

 ::phoenix::Quaternion Quaternion_obj::normalize(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_254_normalize)
HXLINE( 256)		Float l = this->length();
HXLINE( 258)		if ((l == (int)0)) {
HXLINE( 260)			this->ignore_euler = true;
HXDLIN( 260)			{
HXLINE( 260)				this->x = (int)0;
HXDLIN( 260)				if (!(this->_construct)) {
HXLINE( 260)					bool _hx_tmp;
HXDLIN( 260)					bool _hx_tmp1;
HXDLIN( 260)					if (hx::IsNotNull( this->euler )) {
HXLINE( 260)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 260)						_hx_tmp1 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp1)) {
HXLINE( 260)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 260)						_hx_tmp = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp)) {
HXLINE( 260)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 260)						int order = (int)0;
HXDLIN( 260)						Float sqx = (this->x * this->x);
HXDLIN( 260)						Float sqy = (this->y * this->y);
HXDLIN( 260)						Float sqz = (this->z * this->z);
HXDLIN( 260)						Float sqw = (this->w * this->w);
HXDLIN( 260)						Float _x = _this->x;
HXDLIN( 260)						Float _y = _this->y;
HXDLIN( 260)						Float _z = _this->z;
HXDLIN( 260)						if ((order == (int)0)) {
HXLINE( 260)							Float _x1 = (this->x * this->w);
HXDLIN( 260)							Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 260)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 260)							Float value = (this->x * this->z);
HXDLIN( 260)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 260)							Float _y1;
HXDLIN( 260)							if ((value1 < (int)-1)) {
HXLINE( 260)								_y1 = (int)-1;
            							}
            							else {
HXLINE( 260)								if ((value1 > (int)1)) {
HXLINE( 260)									_y1 = (int)1;
            								}
            								else {
HXLINE( 260)									_y1 = value1;
            								}
            							}
HXDLIN( 260)							_y = ::Math_obj::asin(_y1);
HXDLIN( 260)							Float _z1 = (this->z * this->w);
HXDLIN( 260)							Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 260)							_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 260)							if ((order == (int)1)) {
HXLINE( 260)								Float value2 = (this->x * this->w);
HXDLIN( 260)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 260)								Float _x3;
HXDLIN( 260)								if ((value3 < (int)-1)) {
HXLINE( 260)									_x3 = (int)-1;
            								}
            								else {
HXLINE( 260)									if ((value3 > (int)1)) {
HXLINE( 260)										_x3 = (int)1;
            									}
            									else {
HXLINE( 260)										_x3 = value3;
            									}
            								}
HXDLIN( 260)								_x = ::Math_obj::asin(_x3);
HXDLIN( 260)								Float _y2 = (this->x * this->z);
HXDLIN( 260)								Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 260)								_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 260)								Float _z3 = (this->x * this->y);
HXDLIN( 260)								Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 260)								_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 260)								if ((order == (int)2)) {
HXLINE( 260)									Float value4 = (this->x * this->w);
HXDLIN( 260)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 260)									Float _x4;
HXDLIN( 260)									if ((value5 < (int)-1)) {
HXLINE( 260)										_x4 = (int)-1;
            									}
            									else {
HXLINE( 260)										if ((value5 > (int)1)) {
HXLINE( 260)											_x4 = (int)1;
            										}
            										else {
HXLINE( 260)											_x4 = value5;
            										}
            									}
HXDLIN( 260)									_x = ::Math_obj::asin(_x4);
HXDLIN( 260)									Float _y4 = (this->y * this->w);
HXDLIN( 260)									Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 260)									_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 260)									Float _z5 = (this->z * this->w);
HXDLIN( 260)									Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 260)									_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 260)									if ((order == (int)3)) {
HXLINE( 260)										Float _x5 = (this->x * this->w);
HXDLIN( 260)										Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 260)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 260)										Float value6 = (this->y * this->w);
HXDLIN( 260)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 260)										Float _y6;
HXDLIN( 260)										if ((value7 < (int)-1)) {
HXLINE( 260)											_y6 = (int)-1;
            										}
            										else {
HXLINE( 260)											if ((value7 > (int)1)) {
HXLINE( 260)												_y6 = (int)1;
            											}
            											else {
HXLINE( 260)												_y6 = value7;
            											}
            										}
HXDLIN( 260)										_y = ::Math_obj::asin(_y6);
HXDLIN( 260)										Float _z7 = (this->x * this->y);
HXDLIN( 260)										Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 260)										_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 260)										if ((order == (int)4)) {
HXLINE( 260)											Float _x7 = (this->x * this->w);
HXDLIN( 260)											Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 260)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 260)											Float _y7 = (this->y * this->w);
HXDLIN( 260)											Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 260)											_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 260)											Float value8 = (this->x * this->y);
HXDLIN( 260)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 260)											Float _z9;
HXDLIN( 260)											if ((value9 < (int)-1)) {
HXLINE( 260)												_z9 = (int)-1;
            											}
            											else {
HXLINE( 260)												if ((value9 > (int)1)) {
HXLINE( 260)													_z9 = (int)1;
            												}
            												else {
HXLINE( 260)													_z9 = value9;
            												}
            											}
HXDLIN( 260)											_z = ::Math_obj::asin(_z9);
            										}
            										else {
HXLINE( 260)											if ((order == (int)5)) {
HXLINE( 260)												Float _x9 = (this->x * this->w);
HXDLIN( 260)												Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 260)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 260)												Float _y9 = (this->x * this->z);
HXDLIN( 260)												Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 260)												_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 260)												Float value10 = (this->z * this->w);
HXDLIN( 260)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 260)												Float _z10;
HXDLIN( 260)												if ((value11 < (int)-1)) {
HXLINE( 260)													_z10 = (int)-1;
            												}
            												else {
HXLINE( 260)													if ((value11 > (int)1)) {
HXLINE( 260)														_z10 = (int)1;
            													}
            													else {
HXLINE( 260)														_z10 = value11;
            													}
            												}
HXDLIN( 260)												_z = ::Math_obj::asin(_z10);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 260)						{
HXLINE( 260)							bool prev = _this->ignore_listeners;
HXDLIN( 260)							_this->ignore_listeners = true;
HXDLIN( 260)							{
HXLINE( 260)								_this->x = _x;
HXDLIN( 260)								if (!(_this->_construct)) {
HXLINE( 260)									bool _hx_tmp2;
HXDLIN( 260)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 260)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp2 = false;
            									}
HXDLIN( 260)									if (_hx_tmp2) {
HXLINE( 260)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this->y = _y;
HXDLIN( 260)								if (!(_this->_construct)) {
HXLINE( 260)									bool _hx_tmp3;
HXDLIN( 260)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 260)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp3 = false;
            									}
HXDLIN( 260)									if (_hx_tmp3) {
HXLINE( 260)										_this->listen_y(_y);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this->z = _z;
HXDLIN( 260)								if (!(_this->_construct)) {
HXLINE( 260)									bool _hx_tmp4;
HXDLIN( 260)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 260)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp4 = false;
            									}
HXDLIN( 260)									if (_hx_tmp4) {
HXLINE( 260)										_this->listen_z(_z);
            									}
            								}
            							}
HXDLIN( 260)							_this->ignore_listeners = prev;
HXDLIN( 260)							bool _hx_tmp5;
HXDLIN( 260)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 260)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp5 = false;
            							}
HXDLIN( 260)							if (_hx_tmp5) {
HXLINE( 260)								_this->listen_x(_this->x);
            							}
HXDLIN( 260)							bool _hx_tmp6;
HXDLIN( 260)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 260)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp6 = false;
            							}
HXDLIN( 260)							if (_hx_tmp6) {
HXLINE( 260)								_this->listen_y(_this->y);
            							}
HXDLIN( 260)							bool _hx_tmp7;
HXDLIN( 260)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 260)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp7 = false;
            							}
HXDLIN( 260)							if (_hx_tmp7) {
HXLINE( 260)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 260)					bool _hx_tmp8;
HXDLIN( 260)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 260)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp8 = false;
            					}
HXDLIN( 260)					if (_hx_tmp8) {
HXLINE( 260)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 260)			{
HXLINE( 260)				this->y = (int)0;
HXDLIN( 260)				if (!(this->_construct)) {
HXLINE( 260)					bool _hx_tmp9;
HXDLIN( 260)					bool _hx_tmp10;
HXDLIN( 260)					if (hx::IsNotNull( this->euler )) {
HXLINE( 260)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 260)						_hx_tmp10 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp10)) {
HXLINE( 260)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 260)						_hx_tmp9 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp9)) {
HXLINE( 260)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 260)						int order1 = (int)0;
HXDLIN( 260)						Float sqx1 = (this->x * this->x);
HXDLIN( 260)						Float sqy1 = (this->y * this->y);
HXDLIN( 260)						Float sqz1 = (this->z * this->z);
HXDLIN( 260)						Float sqw1 = (this->w * this->w);
HXDLIN( 260)						Float _x11 = _this1->x;
HXDLIN( 260)						Float _y11 = _this1->y;
HXDLIN( 260)						Float _z11 = _this1->z;
HXDLIN( 260)						if ((order1 == (int)0)) {
HXLINE( 260)							Float _x12 = (this->x * this->w);
HXDLIN( 260)							Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN( 260)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 260)							Float value12 = (this->x * this->z);
HXDLIN( 260)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 260)							Float _y12;
HXDLIN( 260)							if ((value13 < (int)-1)) {
HXLINE( 260)								_y12 = (int)-1;
            							}
            							else {
HXLINE( 260)								if ((value13 > (int)1)) {
HXLINE( 260)									_y12 = (int)1;
            								}
            								else {
HXLINE( 260)									_y12 = value13;
            								}
            							}
HXDLIN( 260)							_y11 = ::Math_obj::asin(_y12);
HXDLIN( 260)							Float _z12 = (this->z * this->w);
HXDLIN( 260)							Float _z13 = ((int)2 * (_z12 - (this->x * this->y)));
HXDLIN( 260)							_z11 = ::Math_obj::atan2(_z13,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 260)							if ((order1 == (int)1)) {
HXLINE( 260)								Float value14 = (this->x * this->w);
HXDLIN( 260)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 260)								Float _x14;
HXDLIN( 260)								if ((value15 < (int)-1)) {
HXLINE( 260)									_x14 = (int)-1;
            								}
            								else {
HXLINE( 260)									if ((value15 > (int)1)) {
HXLINE( 260)										_x14 = (int)1;
            									}
            									else {
HXLINE( 260)										_x14 = value15;
            									}
            								}
HXDLIN( 260)								_x11 = ::Math_obj::asin(_x14);
HXDLIN( 260)								Float _y13 = (this->x * this->z);
HXDLIN( 260)								Float _y14 = ((int)2 * (_y13 + (this->y * this->w)));
HXDLIN( 260)								_y11 = ::Math_obj::atan2(_y14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 260)								Float _z14 = (this->x * this->y);
HXDLIN( 260)								Float _z15 = ((int)2 * (_z14 + (this->z * this->w)));
HXDLIN( 260)								_z11 = ::Math_obj::atan2(_z15,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 260)								if ((order1 == (int)2)) {
HXLINE( 260)									Float value16 = (this->x * this->w);
HXDLIN( 260)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 260)									Float _x15;
HXDLIN( 260)									if ((value17 < (int)-1)) {
HXLINE( 260)										_x15 = (int)-1;
            									}
            									else {
HXLINE( 260)										if ((value17 > (int)1)) {
HXLINE( 260)											_x15 = (int)1;
            										}
            										else {
HXLINE( 260)											_x15 = value17;
            										}
            									}
HXDLIN( 260)									_x11 = ::Math_obj::asin(_x15);
HXDLIN( 260)									Float _y15 = (this->y * this->w);
HXDLIN( 260)									Float _y16 = ((int)2 * (_y15 - (this->z * this->x)));
HXDLIN( 260)									_y11 = ::Math_obj::atan2(_y16,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 260)									Float _z16 = (this->z * this->w);
HXDLIN( 260)									Float _z17 = ((int)2 * (_z16 - (this->x * this->y)));
HXDLIN( 260)									_z11 = ::Math_obj::atan2(_z17,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 260)									if ((order1 == (int)3)) {
HXLINE( 260)										Float _x16 = (this->x * this->w);
HXDLIN( 260)										Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN( 260)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 260)										Float value18 = (this->y * this->w);
HXDLIN( 260)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 260)										Float _y17;
HXDLIN( 260)										if ((value19 < (int)-1)) {
HXLINE( 260)											_y17 = (int)-1;
            										}
            										else {
HXLINE( 260)											if ((value19 > (int)1)) {
HXLINE( 260)												_y17 = (int)1;
            											}
            											else {
HXLINE( 260)												_y17 = value19;
            											}
            										}
HXDLIN( 260)										_y11 = ::Math_obj::asin(_y17);
HXDLIN( 260)										Float _z18 = (this->x * this->y);
HXDLIN( 260)										Float _z19 = ((int)2 * (_z18 + (this->z * this->w)));
HXDLIN( 260)										_z11 = ::Math_obj::atan2(_z19,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 260)										if ((order1 == (int)4)) {
HXLINE( 260)											Float _x18 = (this->x * this->w);
HXDLIN( 260)											Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN( 260)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 260)											Float _y18 = (this->y * this->w);
HXDLIN( 260)											Float _y19 = ((int)2 * (_y18 - (this->x * this->z)));
HXDLIN( 260)											_y11 = ::Math_obj::atan2(_y19,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 260)											Float value20 = (this->x * this->y);
HXDLIN( 260)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 260)											Float _z20;
HXDLIN( 260)											if ((value21 < (int)-1)) {
HXLINE( 260)												_z20 = (int)-1;
            											}
            											else {
HXLINE( 260)												if ((value21 > (int)1)) {
HXLINE( 260)													_z20 = (int)1;
            												}
            												else {
HXLINE( 260)													_z20 = value21;
            												}
            											}
HXDLIN( 260)											_z11 = ::Math_obj::asin(_z20);
            										}
            										else {
HXLINE( 260)											if ((order1 == (int)5)) {
HXLINE( 260)												Float _x20 = (this->x * this->w);
HXDLIN( 260)												Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN( 260)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 260)												Float _y20 = (this->x * this->z);
HXDLIN( 260)												Float _y21 = ((int)2 * (_y20 + (this->y * this->w)));
HXDLIN( 260)												_y11 = ::Math_obj::atan2(_y21,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 260)												Float value22 = (this->z * this->w);
HXDLIN( 260)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 260)												Float _z21;
HXDLIN( 260)												if ((value23 < (int)-1)) {
HXLINE( 260)													_z21 = (int)-1;
            												}
            												else {
HXLINE( 260)													if ((value23 > (int)1)) {
HXLINE( 260)														_z21 = (int)1;
            													}
            													else {
HXLINE( 260)														_z21 = value23;
            													}
            												}
HXDLIN( 260)												_z11 = ::Math_obj::asin(_z21);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 260)						{
HXLINE( 260)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 260)							_this1->ignore_listeners = true;
HXDLIN( 260)							{
HXLINE( 260)								_this1->x = _x11;
HXDLIN( 260)								if (!(_this1->_construct)) {
HXLINE( 260)									bool _hx_tmp11;
HXDLIN( 260)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 260)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp11 = false;
            									}
HXDLIN( 260)									if (_hx_tmp11) {
HXLINE( 260)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this1->y = _y11;
HXDLIN( 260)								if (!(_this1->_construct)) {
HXLINE( 260)									bool _hx_tmp12;
HXDLIN( 260)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 260)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp12 = false;
            									}
HXDLIN( 260)									if (_hx_tmp12) {
HXLINE( 260)										_this1->listen_y(_y11);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this1->z = _z11;
HXDLIN( 260)								if (!(_this1->_construct)) {
HXLINE( 260)									bool _hx_tmp13;
HXDLIN( 260)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 260)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp13 = false;
            									}
HXDLIN( 260)									if (_hx_tmp13) {
HXLINE( 260)										_this1->listen_z(_z11);
            									}
            								}
            							}
HXDLIN( 260)							_this1->ignore_listeners = prev1;
HXDLIN( 260)							bool _hx_tmp14;
HXDLIN( 260)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 260)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp14 = false;
            							}
HXDLIN( 260)							if (_hx_tmp14) {
HXLINE( 260)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 260)							bool _hx_tmp15;
HXDLIN( 260)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 260)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp15 = false;
            							}
HXDLIN( 260)							if (_hx_tmp15) {
HXLINE( 260)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 260)							bool _hx_tmp16;
HXDLIN( 260)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 260)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp16 = false;
            							}
HXDLIN( 260)							if (_hx_tmp16) {
HXLINE( 260)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 260)					bool _hx_tmp17;
HXDLIN( 260)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 260)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp17 = false;
            					}
HXDLIN( 260)					if (_hx_tmp17) {
HXLINE( 260)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 260)			{
HXLINE( 260)				this->z = (int)0;
HXDLIN( 260)				if (!(this->_construct)) {
HXLINE( 260)					bool _hx_tmp18;
HXDLIN( 260)					bool _hx_tmp19;
HXDLIN( 260)					if (hx::IsNotNull( this->euler )) {
HXLINE( 260)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 260)						_hx_tmp19 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp19)) {
HXLINE( 260)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 260)						_hx_tmp18 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp18)) {
HXLINE( 260)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 260)						int order2 = (int)0;
HXDLIN( 260)						Float sqx2 = (this->x * this->x);
HXDLIN( 260)						Float sqy2 = (this->y * this->y);
HXDLIN( 260)						Float sqz2 = (this->z * this->z);
HXDLIN( 260)						Float sqw2 = (this->w * this->w);
HXDLIN( 260)						Float _x22 = _this2->x;
HXDLIN( 260)						Float _y22 = _this2->y;
HXDLIN( 260)						Float _z22 = _this2->z;
HXDLIN( 260)						if ((order2 == (int)0)) {
HXLINE( 260)							Float _x23 = (this->x * this->w);
HXDLIN( 260)							Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN( 260)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 260)							Float value24 = (this->x * this->z);
HXDLIN( 260)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 260)							Float _y23;
HXDLIN( 260)							if ((value25 < (int)-1)) {
HXLINE( 260)								_y23 = (int)-1;
            							}
            							else {
HXLINE( 260)								if ((value25 > (int)1)) {
HXLINE( 260)									_y23 = (int)1;
            								}
            								else {
HXLINE( 260)									_y23 = value25;
            								}
            							}
HXDLIN( 260)							_y22 = ::Math_obj::asin(_y23);
HXDLIN( 260)							Float _z23 = (this->z * this->w);
HXDLIN( 260)							Float _z24 = ((int)2 * (_z23 - (this->x * this->y)));
HXDLIN( 260)							_z22 = ::Math_obj::atan2(_z24,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 260)							if ((order2 == (int)1)) {
HXLINE( 260)								Float value26 = (this->x * this->w);
HXDLIN( 260)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 260)								Float _x25;
HXDLIN( 260)								if ((value27 < (int)-1)) {
HXLINE( 260)									_x25 = (int)-1;
            								}
            								else {
HXLINE( 260)									if ((value27 > (int)1)) {
HXLINE( 260)										_x25 = (int)1;
            									}
            									else {
HXLINE( 260)										_x25 = value27;
            									}
            								}
HXDLIN( 260)								_x22 = ::Math_obj::asin(_x25);
HXDLIN( 260)								Float _y24 = (this->x * this->z);
HXDLIN( 260)								Float _y25 = ((int)2 * (_y24 + (this->y * this->w)));
HXDLIN( 260)								_y22 = ::Math_obj::atan2(_y25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 260)								Float _z25 = (this->x * this->y);
HXDLIN( 260)								Float _z26 = ((int)2 * (_z25 + (this->z * this->w)));
HXDLIN( 260)								_z22 = ::Math_obj::atan2(_z26,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 260)								if ((order2 == (int)2)) {
HXLINE( 260)									Float value28 = (this->x * this->w);
HXDLIN( 260)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 260)									Float _x26;
HXDLIN( 260)									if ((value29 < (int)-1)) {
HXLINE( 260)										_x26 = (int)-1;
            									}
            									else {
HXLINE( 260)										if ((value29 > (int)1)) {
HXLINE( 260)											_x26 = (int)1;
            										}
            										else {
HXLINE( 260)											_x26 = value29;
            										}
            									}
HXDLIN( 260)									_x22 = ::Math_obj::asin(_x26);
HXDLIN( 260)									Float _y26 = (this->y * this->w);
HXDLIN( 260)									Float _y27 = ((int)2 * (_y26 - (this->z * this->x)));
HXDLIN( 260)									_y22 = ::Math_obj::atan2(_y27,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 260)									Float _z27 = (this->z * this->w);
HXDLIN( 260)									Float _z28 = ((int)2 * (_z27 - (this->x * this->y)));
HXDLIN( 260)									_z22 = ::Math_obj::atan2(_z28,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 260)									if ((order2 == (int)3)) {
HXLINE( 260)										Float _x27 = (this->x * this->w);
HXDLIN( 260)										Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN( 260)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 260)										Float value30 = (this->y * this->w);
HXDLIN( 260)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 260)										Float _y28;
HXDLIN( 260)										if ((value31 < (int)-1)) {
HXLINE( 260)											_y28 = (int)-1;
            										}
            										else {
HXLINE( 260)											if ((value31 > (int)1)) {
HXLINE( 260)												_y28 = (int)1;
            											}
            											else {
HXLINE( 260)												_y28 = value31;
            											}
            										}
HXDLIN( 260)										_y22 = ::Math_obj::asin(_y28);
HXDLIN( 260)										Float _z29 = (this->x * this->y);
HXDLIN( 260)										Float _z30 = ((int)2 * (_z29 + (this->z * this->w)));
HXDLIN( 260)										_z22 = ::Math_obj::atan2(_z30,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 260)										if ((order2 == (int)4)) {
HXLINE( 260)											Float _x29 = (this->x * this->w);
HXDLIN( 260)											Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN( 260)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 260)											Float _y29 = (this->y * this->w);
HXDLIN( 260)											Float _y30 = ((int)2 * (_y29 - (this->x * this->z)));
HXDLIN( 260)											_y22 = ::Math_obj::atan2(_y30,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 260)											Float value32 = (this->x * this->y);
HXDLIN( 260)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 260)											Float _z31;
HXDLIN( 260)											if ((value33 < (int)-1)) {
HXLINE( 260)												_z31 = (int)-1;
            											}
            											else {
HXLINE( 260)												if ((value33 > (int)1)) {
HXLINE( 260)													_z31 = (int)1;
            												}
            												else {
HXLINE( 260)													_z31 = value33;
            												}
            											}
HXDLIN( 260)											_z22 = ::Math_obj::asin(_z31);
            										}
            										else {
HXLINE( 260)											if ((order2 == (int)5)) {
HXLINE( 260)												Float _x31 = (this->x * this->w);
HXDLIN( 260)												Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN( 260)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 260)												Float _y31 = (this->x * this->z);
HXDLIN( 260)												Float _y32 = ((int)2 * (_y31 + (this->y * this->w)));
HXDLIN( 260)												_y22 = ::Math_obj::atan2(_y32,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 260)												Float value34 = (this->z * this->w);
HXDLIN( 260)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 260)												Float _z32;
HXDLIN( 260)												if ((value35 < (int)-1)) {
HXLINE( 260)													_z32 = (int)-1;
            												}
            												else {
HXLINE( 260)													if ((value35 > (int)1)) {
HXLINE( 260)														_z32 = (int)1;
            													}
            													else {
HXLINE( 260)														_z32 = value35;
            													}
            												}
HXDLIN( 260)												_z22 = ::Math_obj::asin(_z32);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 260)						{
HXLINE( 260)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 260)							_this2->ignore_listeners = true;
HXDLIN( 260)							{
HXLINE( 260)								_this2->x = _x22;
HXDLIN( 260)								if (!(_this2->_construct)) {
HXLINE( 260)									bool _hx_tmp20;
HXDLIN( 260)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 260)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp20 = false;
            									}
HXDLIN( 260)									if (_hx_tmp20) {
HXLINE( 260)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this2->y = _y22;
HXDLIN( 260)								if (!(_this2->_construct)) {
HXLINE( 260)									bool _hx_tmp21;
HXDLIN( 260)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 260)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp21 = false;
            									}
HXDLIN( 260)									if (_hx_tmp21) {
HXLINE( 260)										_this2->listen_y(_y22);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this2->z = _z22;
HXDLIN( 260)								if (!(_this2->_construct)) {
HXLINE( 260)									bool _hx_tmp22;
HXDLIN( 260)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 260)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp22 = false;
            									}
HXDLIN( 260)									if (_hx_tmp22) {
HXLINE( 260)										_this2->listen_z(_z22);
            									}
            								}
            							}
HXDLIN( 260)							_this2->ignore_listeners = prev2;
HXDLIN( 260)							bool _hx_tmp23;
HXDLIN( 260)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 260)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp23 = false;
            							}
HXDLIN( 260)							if (_hx_tmp23) {
HXLINE( 260)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 260)							bool _hx_tmp24;
HXDLIN( 260)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 260)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp24 = false;
            							}
HXDLIN( 260)							if (_hx_tmp24) {
HXLINE( 260)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 260)							bool _hx_tmp25;
HXDLIN( 260)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 260)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp25 = false;
            							}
HXDLIN( 260)							if (_hx_tmp25) {
HXLINE( 260)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 260)					bool _hx_tmp26;
HXDLIN( 260)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 260)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp26 = false;
            					}
HXDLIN( 260)					if (_hx_tmp26) {
HXLINE( 260)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 260)			{
HXLINE( 260)				this->w = (int)1;
HXDLIN( 260)				if (!(this->_construct)) {
HXLINE( 260)					bool _hx_tmp27;
HXDLIN( 260)					bool _hx_tmp28;
HXDLIN( 260)					if (hx::IsNotNull( this->euler )) {
HXLINE( 260)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE( 260)						_hx_tmp28 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp28)) {
HXLINE( 260)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE( 260)						_hx_tmp27 = true;
            					}
HXDLIN( 260)					if (!(_hx_tmp27)) {
HXLINE( 260)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 260)						int order3 = (int)0;
HXDLIN( 260)						Float sqx3 = (this->x * this->x);
HXDLIN( 260)						Float sqy3 = (this->y * this->y);
HXDLIN( 260)						Float sqz3 = (this->z * this->z);
HXDLIN( 260)						Float sqw3 = (this->w * this->w);
HXDLIN( 260)						Float _x33 = _this3->x;
HXDLIN( 260)						Float _y33 = _this3->y;
HXDLIN( 260)						Float _z33 = _this3->z;
HXDLIN( 260)						if ((order3 == (int)0)) {
HXLINE( 260)							Float _x34 = (this->x * this->w);
HXDLIN( 260)							Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN( 260)							_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 260)							Float value36 = (this->x * this->z);
HXDLIN( 260)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 260)							Float _y34;
HXDLIN( 260)							if ((value37 < (int)-1)) {
HXLINE( 260)								_y34 = (int)-1;
            							}
            							else {
HXLINE( 260)								if ((value37 > (int)1)) {
HXLINE( 260)									_y34 = (int)1;
            								}
            								else {
HXLINE( 260)									_y34 = value37;
            								}
            							}
HXDLIN( 260)							_y33 = ::Math_obj::asin(_y34);
HXDLIN( 260)							Float _z34 = (this->z * this->w);
HXDLIN( 260)							Float _z35 = ((int)2 * (_z34 - (this->x * this->y)));
HXDLIN( 260)							_z33 = ::Math_obj::atan2(_z35,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 260)							if ((order3 == (int)1)) {
HXLINE( 260)								Float value38 = (this->x * this->w);
HXDLIN( 260)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 260)								Float _x36;
HXDLIN( 260)								if ((value39 < (int)-1)) {
HXLINE( 260)									_x36 = (int)-1;
            								}
            								else {
HXLINE( 260)									if ((value39 > (int)1)) {
HXLINE( 260)										_x36 = (int)1;
            									}
            									else {
HXLINE( 260)										_x36 = value39;
            									}
            								}
HXDLIN( 260)								_x33 = ::Math_obj::asin(_x36);
HXDLIN( 260)								Float _y35 = (this->x * this->z);
HXDLIN( 260)								Float _y36 = ((int)2 * (_y35 + (this->y * this->w)));
HXDLIN( 260)								_y33 = ::Math_obj::atan2(_y36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 260)								Float _z36 = (this->x * this->y);
HXDLIN( 260)								Float _z37 = ((int)2 * (_z36 + (this->z * this->w)));
HXDLIN( 260)								_z33 = ::Math_obj::atan2(_z37,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 260)								if ((order3 == (int)2)) {
HXLINE( 260)									Float value40 = (this->x * this->w);
HXDLIN( 260)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 260)									Float _x37;
HXDLIN( 260)									if ((value41 < (int)-1)) {
HXLINE( 260)										_x37 = (int)-1;
            									}
            									else {
HXLINE( 260)										if ((value41 > (int)1)) {
HXLINE( 260)											_x37 = (int)1;
            										}
            										else {
HXLINE( 260)											_x37 = value41;
            										}
            									}
HXDLIN( 260)									_x33 = ::Math_obj::asin(_x37);
HXDLIN( 260)									Float _y37 = (this->y * this->w);
HXDLIN( 260)									Float _y38 = ((int)2 * (_y37 - (this->z * this->x)));
HXDLIN( 260)									_y33 = ::Math_obj::atan2(_y38,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 260)									Float _z38 = (this->z * this->w);
HXDLIN( 260)									Float _z39 = ((int)2 * (_z38 - (this->x * this->y)));
HXDLIN( 260)									_z33 = ::Math_obj::atan2(_z39,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 260)									if ((order3 == (int)3)) {
HXLINE( 260)										Float _x38 = (this->x * this->w);
HXDLIN( 260)										Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN( 260)										_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 260)										Float value42 = (this->y * this->w);
HXDLIN( 260)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 260)										Float _y39;
HXDLIN( 260)										if ((value43 < (int)-1)) {
HXLINE( 260)											_y39 = (int)-1;
            										}
            										else {
HXLINE( 260)											if ((value43 > (int)1)) {
HXLINE( 260)												_y39 = (int)1;
            											}
            											else {
HXLINE( 260)												_y39 = value43;
            											}
            										}
HXDLIN( 260)										_y33 = ::Math_obj::asin(_y39);
HXDLIN( 260)										Float _z40 = (this->x * this->y);
HXDLIN( 260)										Float _z41 = ((int)2 * (_z40 + (this->z * this->w)));
HXDLIN( 260)										_z33 = ::Math_obj::atan2(_z41,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 260)										if ((order3 == (int)4)) {
HXLINE( 260)											Float _x40 = (this->x * this->w);
HXDLIN( 260)											Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN( 260)											_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 260)											Float _y40 = (this->y * this->w);
HXDLIN( 260)											Float _y41 = ((int)2 * (_y40 - (this->x * this->z)));
HXDLIN( 260)											_y33 = ::Math_obj::atan2(_y41,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 260)											Float value44 = (this->x * this->y);
HXDLIN( 260)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 260)											Float _z42;
HXDLIN( 260)											if ((value45 < (int)-1)) {
HXLINE( 260)												_z42 = (int)-1;
            											}
            											else {
HXLINE( 260)												if ((value45 > (int)1)) {
HXLINE( 260)													_z42 = (int)1;
            												}
            												else {
HXLINE( 260)													_z42 = value45;
            												}
            											}
HXDLIN( 260)											_z33 = ::Math_obj::asin(_z42);
            										}
            										else {
HXLINE( 260)											if ((order3 == (int)5)) {
HXLINE( 260)												Float _x42 = (this->x * this->w);
HXDLIN( 260)												Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN( 260)												_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 260)												Float _y42 = (this->x * this->z);
HXDLIN( 260)												Float _y43 = ((int)2 * (_y42 + (this->y * this->w)));
HXDLIN( 260)												_y33 = ::Math_obj::atan2(_y43,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 260)												Float value46 = (this->z * this->w);
HXDLIN( 260)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 260)												Float _z43;
HXDLIN( 260)												if ((value47 < (int)-1)) {
HXLINE( 260)													_z43 = (int)-1;
            												}
            												else {
HXLINE( 260)													if ((value47 > (int)1)) {
HXLINE( 260)														_z43 = (int)1;
            													}
            													else {
HXLINE( 260)														_z43 = value47;
            													}
            												}
HXDLIN( 260)												_z33 = ::Math_obj::asin(_z43);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 260)						{
HXLINE( 260)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 260)							_this3->ignore_listeners = true;
HXDLIN( 260)							{
HXLINE( 260)								_this3->x = _x33;
HXDLIN( 260)								if (!(_this3->_construct)) {
HXLINE( 260)									bool _hx_tmp29;
HXDLIN( 260)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 260)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp29 = false;
            									}
HXDLIN( 260)									if (_hx_tmp29) {
HXLINE( 260)										_this3->listen_x(_x33);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this3->y = _y33;
HXDLIN( 260)								if (!(_this3->_construct)) {
HXLINE( 260)									bool _hx_tmp30;
HXDLIN( 260)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 260)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp30 = false;
            									}
HXDLIN( 260)									if (_hx_tmp30) {
HXLINE( 260)										_this3->listen_y(_y33);
            									}
            								}
            							}
HXDLIN( 260)							{
HXLINE( 260)								_this3->z = _z33;
HXDLIN( 260)								if (!(_this3->_construct)) {
HXLINE( 260)									bool _hx_tmp31;
HXDLIN( 260)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 260)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 260)										_hx_tmp31 = false;
            									}
HXDLIN( 260)									if (_hx_tmp31) {
HXLINE( 260)										_this3->listen_z(_z33);
            									}
            								}
            							}
HXDLIN( 260)							_this3->ignore_listeners = prev3;
HXDLIN( 260)							bool _hx_tmp32;
HXDLIN( 260)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 260)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp32 = false;
            							}
HXDLIN( 260)							if (_hx_tmp32) {
HXLINE( 260)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 260)							bool _hx_tmp33;
HXDLIN( 260)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 260)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp33 = false;
            							}
HXDLIN( 260)							if (_hx_tmp33) {
HXLINE( 260)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 260)							bool _hx_tmp34;
HXDLIN( 260)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 260)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp34 = false;
            							}
HXDLIN( 260)							if (_hx_tmp34) {
HXLINE( 260)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 260)					bool _hx_tmp35;
HXDLIN( 260)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 260)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp35 = false;
            					}
HXDLIN( 260)					if (_hx_tmp35) {
HXLINE( 260)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 260)			this->ignore_euler = false;
HXDLIN( 260)			bool _hx_tmp36;
HXDLIN( 260)			bool _hx_tmp37;
HXDLIN( 260)			if (hx::IsNotNull( this->euler )) {
HXLINE( 260)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE( 260)				_hx_tmp37 = true;
            			}
HXDLIN( 260)			if (!(_hx_tmp37)) {
HXLINE( 260)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE( 260)				_hx_tmp36 = true;
            			}
HXDLIN( 260)			if (!(_hx_tmp36)) {
HXLINE( 260)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 260)				int order4 = (int)0;
HXDLIN( 260)				Float sqx4 = (this->x * this->x);
HXDLIN( 260)				Float sqy4 = (this->y * this->y);
HXDLIN( 260)				Float sqz4 = (this->z * this->z);
HXDLIN( 260)				Float sqw4 = (this->w * this->w);
HXDLIN( 260)				Float _x44 = _this4->x;
HXDLIN( 260)				Float _y44 = _this4->y;
HXDLIN( 260)				Float _z44 = _this4->z;
HXDLIN( 260)				if ((order4 == (int)0)) {
HXLINE( 260)					Float _x45 = (this->x * this->w);
HXDLIN( 260)					Float _x46 = ((int)2 * (_x45 - (this->y * this->z)));
HXDLIN( 260)					_x44 = ::Math_obj::atan2(_x46,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 260)					Float value48 = (this->x * this->z);
HXDLIN( 260)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 260)					Float _y45;
HXDLIN( 260)					if ((value49 < (int)-1)) {
HXLINE( 260)						_y45 = (int)-1;
            					}
            					else {
HXLINE( 260)						if ((value49 > (int)1)) {
HXLINE( 260)							_y45 = (int)1;
            						}
            						else {
HXLINE( 260)							_y45 = value49;
            						}
            					}
HXDLIN( 260)					_y44 = ::Math_obj::asin(_y45);
HXDLIN( 260)					Float _z45 = (this->z * this->w);
HXDLIN( 260)					Float _z46 = ((int)2 * (_z45 - (this->x * this->y)));
HXDLIN( 260)					_z44 = ::Math_obj::atan2(_z46,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE( 260)					if ((order4 == (int)1)) {
HXLINE( 260)						Float value50 = (this->x * this->w);
HXDLIN( 260)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 260)						Float _x47;
HXDLIN( 260)						if ((value51 < (int)-1)) {
HXLINE( 260)							_x47 = (int)-1;
            						}
            						else {
HXLINE( 260)							if ((value51 > (int)1)) {
HXLINE( 260)								_x47 = (int)1;
            							}
            							else {
HXLINE( 260)								_x47 = value51;
            							}
            						}
HXDLIN( 260)						_x44 = ::Math_obj::asin(_x47);
HXDLIN( 260)						Float _y46 = (this->x * this->z);
HXDLIN( 260)						Float _y47 = ((int)2 * (_y46 + (this->y * this->w)));
HXDLIN( 260)						_y44 = ::Math_obj::atan2(_y47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 260)						Float _z47 = (this->x * this->y);
HXDLIN( 260)						Float _z48 = ((int)2 * (_z47 + (this->z * this->w)));
HXDLIN( 260)						_z44 = ::Math_obj::atan2(_z48,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 260)						if ((order4 == (int)2)) {
HXLINE( 260)							Float value52 = (this->x * this->w);
HXDLIN( 260)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 260)							Float _x48;
HXDLIN( 260)							if ((value53 < (int)-1)) {
HXLINE( 260)								_x48 = (int)-1;
            							}
            							else {
HXLINE( 260)								if ((value53 > (int)1)) {
HXLINE( 260)									_x48 = (int)1;
            								}
            								else {
HXLINE( 260)									_x48 = value53;
            								}
            							}
HXDLIN( 260)							_x44 = ::Math_obj::asin(_x48);
HXDLIN( 260)							Float _y48 = (this->y * this->w);
HXDLIN( 260)							Float _y49 = ((int)2 * (_y48 - (this->z * this->x)));
HXDLIN( 260)							_y44 = ::Math_obj::atan2(_y49,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 260)							Float _z49 = (this->z * this->w);
HXDLIN( 260)							Float _z50 = ((int)2 * (_z49 - (this->x * this->y)));
HXDLIN( 260)							_z44 = ::Math_obj::atan2(_z50,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE( 260)							if ((order4 == (int)3)) {
HXLINE( 260)								Float _x49 = (this->x * this->w);
HXDLIN( 260)								Float _x50 = ((int)2 * (_x49 + (this->z * this->y)));
HXDLIN( 260)								_x44 = ::Math_obj::atan2(_x50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 260)								Float value54 = (this->y * this->w);
HXDLIN( 260)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 260)								Float _y50;
HXDLIN( 260)								if ((value55 < (int)-1)) {
HXLINE( 260)									_y50 = (int)-1;
            								}
            								else {
HXLINE( 260)									if ((value55 > (int)1)) {
HXLINE( 260)										_y50 = (int)1;
            									}
            									else {
HXLINE( 260)										_y50 = value55;
            									}
            								}
HXDLIN( 260)								_y44 = ::Math_obj::asin(_y50);
HXDLIN( 260)								Float _z51 = (this->x * this->y);
HXDLIN( 260)								Float _z52 = ((int)2 * (_z51 + (this->z * this->w)));
HXDLIN( 260)								_z44 = ::Math_obj::atan2(_z52,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 260)								if ((order4 == (int)4)) {
HXLINE( 260)									Float _x51 = (this->x * this->w);
HXDLIN( 260)									Float _x52 = ((int)2 * (_x51 - (this->z * this->y)));
HXDLIN( 260)									_x44 = ::Math_obj::atan2(_x52,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 260)									Float _y51 = (this->y * this->w);
HXDLIN( 260)									Float _y52 = ((int)2 * (_y51 - (this->x * this->z)));
HXDLIN( 260)									_y44 = ::Math_obj::atan2(_y52,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 260)									Float value56 = (this->x * this->y);
HXDLIN( 260)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 260)									Float _z53;
HXDLIN( 260)									if ((value57 < (int)-1)) {
HXLINE( 260)										_z53 = (int)-1;
            									}
            									else {
HXLINE( 260)										if ((value57 > (int)1)) {
HXLINE( 260)											_z53 = (int)1;
            										}
            										else {
HXLINE( 260)											_z53 = value57;
            										}
            									}
HXDLIN( 260)									_z44 = ::Math_obj::asin(_z53);
            								}
            								else {
HXLINE( 260)									if ((order4 == (int)5)) {
HXLINE( 260)										Float _x53 = (this->x * this->w);
HXDLIN( 260)										Float _x54 = ((int)2 * (_x53 + (this->y * this->z)));
HXDLIN( 260)										_x44 = ::Math_obj::atan2(_x54,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 260)										Float _y53 = (this->x * this->z);
HXDLIN( 260)										Float _y54 = ((int)2 * (_y53 + (this->y * this->w)));
HXDLIN( 260)										_y44 = ::Math_obj::atan2(_y54,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 260)										Float value58 = (this->z * this->w);
HXDLIN( 260)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 260)										Float _z54;
HXDLIN( 260)										if ((value59 < (int)-1)) {
HXLINE( 260)											_z54 = (int)-1;
            										}
            										else {
HXLINE( 260)											if ((value59 > (int)1)) {
HXLINE( 260)												_z54 = (int)1;
            											}
            											else {
HXLINE( 260)												_z54 = value59;
            											}
            										}
HXDLIN( 260)										_z44 = ::Math_obj::asin(_z54);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 260)				{
HXLINE( 260)					bool prev4 = _this4->ignore_listeners;
HXDLIN( 260)					_this4->ignore_listeners = true;
HXDLIN( 260)					{
HXLINE( 260)						_this4->x = _x44;
HXDLIN( 260)						if (!(_this4->_construct)) {
HXLINE( 260)							bool _hx_tmp38;
HXDLIN( 260)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 260)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp38 = false;
            							}
HXDLIN( 260)							if (_hx_tmp38) {
HXLINE( 260)								_this4->listen_x(_x44);
            							}
            						}
            					}
HXDLIN( 260)					{
HXLINE( 260)						_this4->y = _y44;
HXDLIN( 260)						if (!(_this4->_construct)) {
HXLINE( 260)							bool _hx_tmp39;
HXDLIN( 260)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 260)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp39 = false;
            							}
HXDLIN( 260)							if (_hx_tmp39) {
HXLINE( 260)								_this4->listen_y(_y44);
            							}
            						}
            					}
HXDLIN( 260)					{
HXLINE( 260)						_this4->z = _z44;
HXDLIN( 260)						if (!(_this4->_construct)) {
HXLINE( 260)							bool _hx_tmp40;
HXDLIN( 260)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 260)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 260)								_hx_tmp40 = false;
            							}
HXDLIN( 260)							if (_hx_tmp40) {
HXLINE( 260)								_this4->listen_z(_z44);
            							}
            						}
            					}
HXDLIN( 260)					_this4->ignore_listeners = prev4;
HXDLIN( 260)					bool _hx_tmp41;
HXDLIN( 260)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 260)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp41 = false;
            					}
HXDLIN( 260)					if (_hx_tmp41) {
HXLINE( 260)						_this4->listen_x(_this4->x);
            					}
HXDLIN( 260)					bool _hx_tmp42;
HXDLIN( 260)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 260)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp42 = false;
            					}
HXDLIN( 260)					if (_hx_tmp42) {
HXLINE( 260)						_this4->listen_y(_this4->y);
            					}
HXDLIN( 260)					bool _hx_tmp43;
HXDLIN( 260)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 260)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 260)						_hx_tmp43 = false;
            					}
HXDLIN( 260)					if (_hx_tmp43) {
HXLINE( 260)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN( 260)			bool _hx_tmp44;
HXDLIN( 260)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 260)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 260)				_hx_tmp44 = false;
            			}
HXDLIN( 260)			if (_hx_tmp44) {
HXLINE( 260)				this->listen_x(this->x);
            			}
HXDLIN( 260)			bool _hx_tmp45;
HXDLIN( 260)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 260)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 260)				_hx_tmp45 = false;
            			}
HXDLIN( 260)			if (_hx_tmp45) {
HXLINE( 260)				this->listen_y(this->y);
            			}
HXDLIN( 260)			bool _hx_tmp46;
HXDLIN( 260)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 260)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 260)				_hx_tmp46 = false;
            			}
HXDLIN( 260)			if (_hx_tmp46) {
HXLINE( 260)				this->listen_z(this->z);
            			}
HXDLIN( 260)			bool _hx_tmp47;
HXDLIN( 260)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 260)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 260)				_hx_tmp47 = false;
            			}
HXDLIN( 260)			if (_hx_tmp47) {
HXLINE( 260)				this->listen_w(this->w);
            			}
            		}
            		else {
HXLINE( 264)			l = ((Float)(int)1 / (Float)l);
HXLINE( 266)			{
HXLINE( 266)				Float _y55 = (this->y * l);
HXDLIN( 266)				Float _z55 = (this->z * l);
HXDLIN( 266)				Float _w = (this->w * l);
HXDLIN( 266)				this->ignore_euler = true;
HXDLIN( 266)				{
HXLINE( 266)					this->x = (this->x * l);
HXDLIN( 266)					if (!(this->_construct)) {
HXLINE( 266)						bool _hx_tmp48;
HXDLIN( 266)						bool _hx_tmp49;
HXDLIN( 266)						if (hx::IsNotNull( this->euler )) {
HXLINE( 266)							_hx_tmp49 = this->ignore_euler;
            						}
            						else {
HXLINE( 266)							_hx_tmp49 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp49)) {
HXLINE( 266)							_hx_tmp48 = this->_construct;
            						}
            						else {
HXLINE( 266)							_hx_tmp48 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp48)) {
HXLINE( 266)							 ::phoenix::Vector _this5 = this->euler;
HXDLIN( 266)							int order5 = (int)0;
HXDLIN( 266)							Float sqx5 = (this->x * this->x);
HXDLIN( 266)							Float sqy5 = (this->y * this->y);
HXDLIN( 266)							Float sqz5 = (this->z * this->z);
HXDLIN( 266)							Float sqw5 = (this->w * this->w);
HXDLIN( 266)							Float _x55 = _this5->x;
HXDLIN( 266)							Float _y56 = _this5->y;
HXDLIN( 266)							Float _z56 = _this5->z;
HXDLIN( 266)							if ((order5 == (int)0)) {
HXLINE( 266)								Float _x56 = (this->x * this->w);
HXDLIN( 266)								Float _x57 = ((int)2 * (_x56 - (this->y * this->z)));
HXDLIN( 266)								_x55 = ::Math_obj::atan2(_x57,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 266)								Float value60 = (this->x * this->z);
HXDLIN( 266)								Float value61 = ((int)2 * (value60 + (this->y * this->w)));
HXDLIN( 266)								Float _y57;
HXDLIN( 266)								if ((value61 < (int)-1)) {
HXLINE( 266)									_y57 = (int)-1;
            								}
            								else {
HXLINE( 266)									if ((value61 > (int)1)) {
HXLINE( 266)										_y57 = (int)1;
            									}
            									else {
HXLINE( 266)										_y57 = value61;
            									}
            								}
HXDLIN( 266)								_y56 = ::Math_obj::asin(_y57);
HXDLIN( 266)								Float _z57 = (this->z * this->w);
HXDLIN( 266)								Float _z58 = ((int)2 * (_z57 - (this->x * this->y)));
HXDLIN( 266)								_z56 = ::Math_obj::atan2(_z58,(((sqw5 + sqx5) - sqy5) - sqz5));
            							}
            							else {
HXLINE( 266)								if ((order5 == (int)1)) {
HXLINE( 266)									Float value62 = (this->x * this->w);
HXDLIN( 266)									Float value63 = ((int)2 * (value62 - (this->y * this->z)));
HXDLIN( 266)									Float _x58;
HXDLIN( 266)									if ((value63 < (int)-1)) {
HXLINE( 266)										_x58 = (int)-1;
            									}
            									else {
HXLINE( 266)										if ((value63 > (int)1)) {
HXLINE( 266)											_x58 = (int)1;
            										}
            										else {
HXLINE( 266)											_x58 = value63;
            										}
            									}
HXDLIN( 266)									_x55 = ::Math_obj::asin(_x58);
HXDLIN( 266)									Float _y58 = (this->x * this->z);
HXDLIN( 266)									Float _y59 = ((int)2 * (_y58 + (this->y * this->w)));
HXDLIN( 266)									_y56 = ::Math_obj::atan2(_y59,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 266)									Float _z59 = (this->x * this->y);
HXDLIN( 266)									Float _z60 = ((int)2 * (_z59 + (this->z * this->w)));
HXDLIN( 266)									_z56 = ::Math_obj::atan2(_z60,(((sqw5 - sqx5) + sqy5) - sqz5));
            								}
            								else {
HXLINE( 266)									if ((order5 == (int)2)) {
HXLINE( 266)										Float value64 = (this->x * this->w);
HXDLIN( 266)										Float value65 = ((int)2 * (value64 + (this->y * this->z)));
HXDLIN( 266)										Float _x59;
HXDLIN( 266)										if ((value65 < (int)-1)) {
HXLINE( 266)											_x59 = (int)-1;
            										}
            										else {
HXLINE( 266)											if ((value65 > (int)1)) {
HXLINE( 266)												_x59 = (int)1;
            											}
            											else {
HXLINE( 266)												_x59 = value65;
            											}
            										}
HXDLIN( 266)										_x55 = ::Math_obj::asin(_x59);
HXDLIN( 266)										Float _y60 = (this->y * this->w);
HXDLIN( 266)										Float _y61 = ((int)2 * (_y60 - (this->z * this->x)));
HXDLIN( 266)										_y56 = ::Math_obj::atan2(_y61,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 266)										Float _z61 = (this->z * this->w);
HXDLIN( 266)										Float _z62 = ((int)2 * (_z61 - (this->x * this->y)));
HXDLIN( 266)										_z56 = ::Math_obj::atan2(_z62,(((sqw5 - sqx5) + sqy5) - sqz5));
            									}
            									else {
HXLINE( 266)										if ((order5 == (int)3)) {
HXLINE( 266)											Float _x60 = (this->x * this->w);
HXDLIN( 266)											Float _x61 = ((int)2 * (_x60 + (this->z * this->y)));
HXDLIN( 266)											_x55 = ::Math_obj::atan2(_x61,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 266)											Float value66 = (this->y * this->w);
HXDLIN( 266)											Float value67 = ((int)2 * (value66 - (this->x * this->z)));
HXDLIN( 266)											Float _y62;
HXDLIN( 266)											if ((value67 < (int)-1)) {
HXLINE( 266)												_y62 = (int)-1;
            											}
            											else {
HXLINE( 266)												if ((value67 > (int)1)) {
HXLINE( 266)													_y62 = (int)1;
            												}
            												else {
HXLINE( 266)													_y62 = value67;
            												}
            											}
HXDLIN( 266)											_y56 = ::Math_obj::asin(_y62);
HXDLIN( 266)											Float _z63 = (this->x * this->y);
HXDLIN( 266)											Float _z64 = ((int)2 * (_z63 + (this->z * this->w)));
HXDLIN( 266)											_z56 = ::Math_obj::atan2(_z64,(((sqw5 + sqx5) - sqy5) - sqz5));
            										}
            										else {
HXLINE( 266)											if ((order5 == (int)4)) {
HXLINE( 266)												Float _x62 = (this->x * this->w);
HXDLIN( 266)												Float _x63 = ((int)2 * (_x62 - (this->z * this->y)));
HXDLIN( 266)												_x55 = ::Math_obj::atan2(_x63,(((sqw5 - sqx5) + sqy5) - sqz5));
HXDLIN( 266)												Float _y63 = (this->y * this->w);
HXDLIN( 266)												Float _y64 = ((int)2 * (_y63 - (this->x * this->z)));
HXDLIN( 266)												_y56 = ::Math_obj::atan2(_y64,(((sqw5 + sqx5) - sqy5) - sqz5));
HXDLIN( 266)												Float value68 = (this->x * this->y);
HXDLIN( 266)												Float value69 = ((int)2 * (value68 + (this->z * this->w)));
HXDLIN( 266)												Float _z65;
HXDLIN( 266)												if ((value69 < (int)-1)) {
HXLINE( 266)													_z65 = (int)-1;
            												}
            												else {
HXLINE( 266)													if ((value69 > (int)1)) {
HXLINE( 266)														_z65 = (int)1;
            													}
            													else {
HXLINE( 266)														_z65 = value69;
            													}
            												}
HXDLIN( 266)												_z56 = ::Math_obj::asin(_z65);
            											}
            											else {
HXLINE( 266)												if ((order5 == (int)5)) {
HXLINE( 266)													Float _x64 = (this->x * this->w);
HXDLIN( 266)													Float _x65 = ((int)2 * (_x64 + (this->y * this->z)));
HXDLIN( 266)													_x55 = ::Math_obj::atan2(_x65,(((sqw5 - sqx5) + sqy5) - sqz5));
HXDLIN( 266)													Float _y65 = (this->x * this->z);
HXDLIN( 266)													Float _y66 = ((int)2 * (_y65 + (this->y * this->w)));
HXDLIN( 266)													_y56 = ::Math_obj::atan2(_y66,(((sqw5 + sqx5) - sqy5) - sqz5));
HXDLIN( 266)													Float value70 = (this->z * this->w);
HXDLIN( 266)													Float value71 = ((int)2 * (value70 - (this->x * this->y)));
HXDLIN( 266)													Float _z66;
HXDLIN( 266)													if ((value71 < (int)-1)) {
HXLINE( 266)														_z66 = (int)-1;
            													}
            													else {
HXLINE( 266)														if ((value71 > (int)1)) {
HXLINE( 266)															_z66 = (int)1;
            														}
            														else {
HXLINE( 266)															_z66 = value71;
            														}
            													}
HXDLIN( 266)													_z56 = ::Math_obj::asin(_z66);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 266)							{
HXLINE( 266)								bool prev5 = _this5->ignore_listeners;
HXDLIN( 266)								_this5->ignore_listeners = true;
HXDLIN( 266)								{
HXLINE( 266)									_this5->x = _x55;
HXDLIN( 266)									if (!(_this5->_construct)) {
HXLINE( 266)										bool _hx_tmp50;
HXDLIN( 266)										if (hx::IsNotNull( _this5->listen_x )) {
HXLINE( 266)											_hx_tmp50 = !(_this5->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp50 = false;
            										}
HXDLIN( 266)										if (_hx_tmp50) {
HXLINE( 266)											_this5->listen_x(_x55);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this5->y = _y56;
HXDLIN( 266)									if (!(_this5->_construct)) {
HXLINE( 266)										bool _hx_tmp51;
HXDLIN( 266)										if (hx::IsNotNull( _this5->listen_y )) {
HXLINE( 266)											_hx_tmp51 = !(_this5->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp51 = false;
            										}
HXDLIN( 266)										if (_hx_tmp51) {
HXLINE( 266)											_this5->listen_y(_y56);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this5->z = _z56;
HXDLIN( 266)									if (!(_this5->_construct)) {
HXLINE( 266)										bool _hx_tmp52;
HXDLIN( 266)										if (hx::IsNotNull( _this5->listen_z )) {
HXLINE( 266)											_hx_tmp52 = !(_this5->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp52 = false;
            										}
HXDLIN( 266)										if (_hx_tmp52) {
HXLINE( 266)											_this5->listen_z(_z56);
            										}
            									}
            								}
HXDLIN( 266)								_this5->ignore_listeners = prev5;
HXDLIN( 266)								bool _hx_tmp53;
HXDLIN( 266)								if (hx::IsNotNull( _this5->listen_x )) {
HXLINE( 266)									_hx_tmp53 = !(_this5->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp53 = false;
            								}
HXDLIN( 266)								if (_hx_tmp53) {
HXLINE( 266)									_this5->listen_x(_this5->x);
            								}
HXDLIN( 266)								bool _hx_tmp54;
HXDLIN( 266)								if (hx::IsNotNull( _this5->listen_y )) {
HXLINE( 266)									_hx_tmp54 = !(_this5->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp54 = false;
            								}
HXDLIN( 266)								if (_hx_tmp54) {
HXLINE( 266)									_this5->listen_y(_this5->y);
            								}
HXDLIN( 266)								bool _hx_tmp55;
HXDLIN( 266)								if (hx::IsNotNull( _this5->listen_z )) {
HXLINE( 266)									_hx_tmp55 = !(_this5->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp55 = false;
            								}
HXDLIN( 266)								if (_hx_tmp55) {
HXLINE( 266)									_this5->listen_z(_this5->z);
            								}
            							}
            						}
HXDLIN( 266)						bool _hx_tmp56;
HXDLIN( 266)						if (hx::IsNotNull( this->listen_x )) {
HXLINE( 266)							_hx_tmp56 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp56 = false;
            						}
HXDLIN( 266)						if (_hx_tmp56) {
HXLINE( 266)							this->listen_x(this->x);
            						}
            					}
            				}
HXDLIN( 266)				{
HXLINE( 266)					this->y = _y55;
HXDLIN( 266)					if (!(this->_construct)) {
HXLINE( 266)						bool _hx_tmp57;
HXDLIN( 266)						bool _hx_tmp58;
HXDLIN( 266)						if (hx::IsNotNull( this->euler )) {
HXLINE( 266)							_hx_tmp58 = this->ignore_euler;
            						}
            						else {
HXLINE( 266)							_hx_tmp58 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp58)) {
HXLINE( 266)							_hx_tmp57 = this->_construct;
            						}
            						else {
HXLINE( 266)							_hx_tmp57 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp57)) {
HXLINE( 266)							 ::phoenix::Vector _this6 = this->euler;
HXDLIN( 266)							int order6 = (int)0;
HXDLIN( 266)							Float sqx6 = (this->x * this->x);
HXDLIN( 266)							Float sqy6 = (this->y * this->y);
HXDLIN( 266)							Float sqz6 = (this->z * this->z);
HXDLIN( 266)							Float sqw6 = (this->w * this->w);
HXDLIN( 266)							Float _x66 = _this6->x;
HXDLIN( 266)							Float _y67 = _this6->y;
HXDLIN( 266)							Float _z67 = _this6->z;
HXDLIN( 266)							if ((order6 == (int)0)) {
HXLINE( 266)								Float _x67 = (this->x * this->w);
HXDLIN( 266)								Float _x68 = ((int)2 * (_x67 - (this->y * this->z)));
HXDLIN( 266)								_x66 = ::Math_obj::atan2(_x68,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 266)								Float value72 = (this->x * this->z);
HXDLIN( 266)								Float value73 = ((int)2 * (value72 + (this->y * this->w)));
HXDLIN( 266)								Float _y68;
HXDLIN( 266)								if ((value73 < (int)-1)) {
HXLINE( 266)									_y68 = (int)-1;
            								}
            								else {
HXLINE( 266)									if ((value73 > (int)1)) {
HXLINE( 266)										_y68 = (int)1;
            									}
            									else {
HXLINE( 266)										_y68 = value73;
            									}
            								}
HXDLIN( 266)								_y67 = ::Math_obj::asin(_y68);
HXDLIN( 266)								Float _z68 = (this->z * this->w);
HXDLIN( 266)								Float _z69 = ((int)2 * (_z68 - (this->x * this->y)));
HXDLIN( 266)								_z67 = ::Math_obj::atan2(_z69,(((sqw6 + sqx6) - sqy6) - sqz6));
            							}
            							else {
HXLINE( 266)								if ((order6 == (int)1)) {
HXLINE( 266)									Float value74 = (this->x * this->w);
HXDLIN( 266)									Float value75 = ((int)2 * (value74 - (this->y * this->z)));
HXDLIN( 266)									Float _x69;
HXDLIN( 266)									if ((value75 < (int)-1)) {
HXLINE( 266)										_x69 = (int)-1;
            									}
            									else {
HXLINE( 266)										if ((value75 > (int)1)) {
HXLINE( 266)											_x69 = (int)1;
            										}
            										else {
HXLINE( 266)											_x69 = value75;
            										}
            									}
HXDLIN( 266)									_x66 = ::Math_obj::asin(_x69);
HXDLIN( 266)									Float _y69 = (this->x * this->z);
HXDLIN( 266)									Float _y70 = ((int)2 * (_y69 + (this->y * this->w)));
HXDLIN( 266)									_y67 = ::Math_obj::atan2(_y70,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 266)									Float _z70 = (this->x * this->y);
HXDLIN( 266)									Float _z71 = ((int)2 * (_z70 + (this->z * this->w)));
HXDLIN( 266)									_z67 = ::Math_obj::atan2(_z71,(((sqw6 - sqx6) + sqy6) - sqz6));
            								}
            								else {
HXLINE( 266)									if ((order6 == (int)2)) {
HXLINE( 266)										Float value76 = (this->x * this->w);
HXDLIN( 266)										Float value77 = ((int)2 * (value76 + (this->y * this->z)));
HXDLIN( 266)										Float _x70;
HXDLIN( 266)										if ((value77 < (int)-1)) {
HXLINE( 266)											_x70 = (int)-1;
            										}
            										else {
HXLINE( 266)											if ((value77 > (int)1)) {
HXLINE( 266)												_x70 = (int)1;
            											}
            											else {
HXLINE( 266)												_x70 = value77;
            											}
            										}
HXDLIN( 266)										_x66 = ::Math_obj::asin(_x70);
HXDLIN( 266)										Float _y71 = (this->y * this->w);
HXDLIN( 266)										Float _y72 = ((int)2 * (_y71 - (this->z * this->x)));
HXDLIN( 266)										_y67 = ::Math_obj::atan2(_y72,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 266)										Float _z72 = (this->z * this->w);
HXDLIN( 266)										Float _z73 = ((int)2 * (_z72 - (this->x * this->y)));
HXDLIN( 266)										_z67 = ::Math_obj::atan2(_z73,(((sqw6 - sqx6) + sqy6) - sqz6));
            									}
            									else {
HXLINE( 266)										if ((order6 == (int)3)) {
HXLINE( 266)											Float _x71 = (this->x * this->w);
HXDLIN( 266)											Float _x72 = ((int)2 * (_x71 + (this->z * this->y)));
HXDLIN( 266)											_x66 = ::Math_obj::atan2(_x72,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 266)											Float value78 = (this->y * this->w);
HXDLIN( 266)											Float value79 = ((int)2 * (value78 - (this->x * this->z)));
HXDLIN( 266)											Float _y73;
HXDLIN( 266)											if ((value79 < (int)-1)) {
HXLINE( 266)												_y73 = (int)-1;
            											}
            											else {
HXLINE( 266)												if ((value79 > (int)1)) {
HXLINE( 266)													_y73 = (int)1;
            												}
            												else {
HXLINE( 266)													_y73 = value79;
            												}
            											}
HXDLIN( 266)											_y67 = ::Math_obj::asin(_y73);
HXDLIN( 266)											Float _z74 = (this->x * this->y);
HXDLIN( 266)											Float _z75 = ((int)2 * (_z74 + (this->z * this->w)));
HXDLIN( 266)											_z67 = ::Math_obj::atan2(_z75,(((sqw6 + sqx6) - sqy6) - sqz6));
            										}
            										else {
HXLINE( 266)											if ((order6 == (int)4)) {
HXLINE( 266)												Float _x73 = (this->x * this->w);
HXDLIN( 266)												Float _x74 = ((int)2 * (_x73 - (this->z * this->y)));
HXDLIN( 266)												_x66 = ::Math_obj::atan2(_x74,(((sqw6 - sqx6) + sqy6) - sqz6));
HXDLIN( 266)												Float _y74 = (this->y * this->w);
HXDLIN( 266)												Float _y75 = ((int)2 * (_y74 - (this->x * this->z)));
HXDLIN( 266)												_y67 = ::Math_obj::atan2(_y75,(((sqw6 + sqx6) - sqy6) - sqz6));
HXDLIN( 266)												Float value80 = (this->x * this->y);
HXDLIN( 266)												Float value81 = ((int)2 * (value80 + (this->z * this->w)));
HXDLIN( 266)												Float _z76;
HXDLIN( 266)												if ((value81 < (int)-1)) {
HXLINE( 266)													_z76 = (int)-1;
            												}
            												else {
HXLINE( 266)													if ((value81 > (int)1)) {
HXLINE( 266)														_z76 = (int)1;
            													}
            													else {
HXLINE( 266)														_z76 = value81;
            													}
            												}
HXDLIN( 266)												_z67 = ::Math_obj::asin(_z76);
            											}
            											else {
HXLINE( 266)												if ((order6 == (int)5)) {
HXLINE( 266)													Float _x75 = (this->x * this->w);
HXDLIN( 266)													Float _x76 = ((int)2 * (_x75 + (this->y * this->z)));
HXDLIN( 266)													_x66 = ::Math_obj::atan2(_x76,(((sqw6 - sqx6) + sqy6) - sqz6));
HXDLIN( 266)													Float _y76 = (this->x * this->z);
HXDLIN( 266)													Float _y77 = ((int)2 * (_y76 + (this->y * this->w)));
HXDLIN( 266)													_y67 = ::Math_obj::atan2(_y77,(((sqw6 + sqx6) - sqy6) - sqz6));
HXDLIN( 266)													Float value82 = (this->z * this->w);
HXDLIN( 266)													Float value83 = ((int)2 * (value82 - (this->x * this->y)));
HXDLIN( 266)													Float _z77;
HXDLIN( 266)													if ((value83 < (int)-1)) {
HXLINE( 266)														_z77 = (int)-1;
            													}
            													else {
HXLINE( 266)														if ((value83 > (int)1)) {
HXLINE( 266)															_z77 = (int)1;
            														}
            														else {
HXLINE( 266)															_z77 = value83;
            														}
            													}
HXDLIN( 266)													_z67 = ::Math_obj::asin(_z77);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 266)							{
HXLINE( 266)								bool prev6 = _this6->ignore_listeners;
HXDLIN( 266)								_this6->ignore_listeners = true;
HXDLIN( 266)								{
HXLINE( 266)									_this6->x = _x66;
HXDLIN( 266)									if (!(_this6->_construct)) {
HXLINE( 266)										bool _hx_tmp59;
HXDLIN( 266)										if (hx::IsNotNull( _this6->listen_x )) {
HXLINE( 266)											_hx_tmp59 = !(_this6->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp59 = false;
            										}
HXDLIN( 266)										if (_hx_tmp59) {
HXLINE( 266)											_this6->listen_x(_x66);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this6->y = _y67;
HXDLIN( 266)									if (!(_this6->_construct)) {
HXLINE( 266)										bool _hx_tmp60;
HXDLIN( 266)										if (hx::IsNotNull( _this6->listen_y )) {
HXLINE( 266)											_hx_tmp60 = !(_this6->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp60 = false;
            										}
HXDLIN( 266)										if (_hx_tmp60) {
HXLINE( 266)											_this6->listen_y(_y67);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this6->z = _z67;
HXDLIN( 266)									if (!(_this6->_construct)) {
HXLINE( 266)										bool _hx_tmp61;
HXDLIN( 266)										if (hx::IsNotNull( _this6->listen_z )) {
HXLINE( 266)											_hx_tmp61 = !(_this6->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp61 = false;
            										}
HXDLIN( 266)										if (_hx_tmp61) {
HXLINE( 266)											_this6->listen_z(_z67);
            										}
            									}
            								}
HXDLIN( 266)								_this6->ignore_listeners = prev6;
HXDLIN( 266)								bool _hx_tmp62;
HXDLIN( 266)								if (hx::IsNotNull( _this6->listen_x )) {
HXLINE( 266)									_hx_tmp62 = !(_this6->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp62 = false;
            								}
HXDLIN( 266)								if (_hx_tmp62) {
HXLINE( 266)									_this6->listen_x(_this6->x);
            								}
HXDLIN( 266)								bool _hx_tmp63;
HXDLIN( 266)								if (hx::IsNotNull( _this6->listen_y )) {
HXLINE( 266)									_hx_tmp63 = !(_this6->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp63 = false;
            								}
HXDLIN( 266)								if (_hx_tmp63) {
HXLINE( 266)									_this6->listen_y(_this6->y);
            								}
HXDLIN( 266)								bool _hx_tmp64;
HXDLIN( 266)								if (hx::IsNotNull( _this6->listen_z )) {
HXLINE( 266)									_hx_tmp64 = !(_this6->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp64 = false;
            								}
HXDLIN( 266)								if (_hx_tmp64) {
HXLINE( 266)									_this6->listen_z(_this6->z);
            								}
            							}
            						}
HXDLIN( 266)						bool _hx_tmp65;
HXDLIN( 266)						if (hx::IsNotNull( this->listen_y )) {
HXLINE( 266)							_hx_tmp65 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp65 = false;
            						}
HXDLIN( 266)						if (_hx_tmp65) {
HXLINE( 266)							this->listen_y(this->y);
            						}
            					}
            				}
HXDLIN( 266)				{
HXLINE( 266)					this->z = _z55;
HXDLIN( 266)					if (!(this->_construct)) {
HXLINE( 266)						bool _hx_tmp66;
HXDLIN( 266)						bool _hx_tmp67;
HXDLIN( 266)						if (hx::IsNotNull( this->euler )) {
HXLINE( 266)							_hx_tmp67 = this->ignore_euler;
            						}
            						else {
HXLINE( 266)							_hx_tmp67 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp67)) {
HXLINE( 266)							_hx_tmp66 = this->_construct;
            						}
            						else {
HXLINE( 266)							_hx_tmp66 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp66)) {
HXLINE( 266)							 ::phoenix::Vector _this7 = this->euler;
HXDLIN( 266)							int order7 = (int)0;
HXDLIN( 266)							Float sqx7 = (this->x * this->x);
HXDLIN( 266)							Float sqy7 = (this->y * this->y);
HXDLIN( 266)							Float sqz7 = (this->z * this->z);
HXDLIN( 266)							Float sqw7 = (this->w * this->w);
HXDLIN( 266)							Float _x77 = _this7->x;
HXDLIN( 266)							Float _y78 = _this7->y;
HXDLIN( 266)							Float _z78 = _this7->z;
HXDLIN( 266)							if ((order7 == (int)0)) {
HXLINE( 266)								Float _x78 = (this->x * this->w);
HXDLIN( 266)								Float _x79 = ((int)2 * (_x78 - (this->y * this->z)));
HXDLIN( 266)								_x77 = ::Math_obj::atan2(_x79,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 266)								Float value84 = (this->x * this->z);
HXDLIN( 266)								Float value85 = ((int)2 * (value84 + (this->y * this->w)));
HXDLIN( 266)								Float _y79;
HXDLIN( 266)								if ((value85 < (int)-1)) {
HXLINE( 266)									_y79 = (int)-1;
            								}
            								else {
HXLINE( 266)									if ((value85 > (int)1)) {
HXLINE( 266)										_y79 = (int)1;
            									}
            									else {
HXLINE( 266)										_y79 = value85;
            									}
            								}
HXDLIN( 266)								_y78 = ::Math_obj::asin(_y79);
HXDLIN( 266)								Float _z79 = (this->z * this->w);
HXDLIN( 266)								Float _z80 = ((int)2 * (_z79 - (this->x * this->y)));
HXDLIN( 266)								_z78 = ::Math_obj::atan2(_z80,(((sqw7 + sqx7) - sqy7) - sqz7));
            							}
            							else {
HXLINE( 266)								if ((order7 == (int)1)) {
HXLINE( 266)									Float value86 = (this->x * this->w);
HXDLIN( 266)									Float value87 = ((int)2 * (value86 - (this->y * this->z)));
HXDLIN( 266)									Float _x80;
HXDLIN( 266)									if ((value87 < (int)-1)) {
HXLINE( 266)										_x80 = (int)-1;
            									}
            									else {
HXLINE( 266)										if ((value87 > (int)1)) {
HXLINE( 266)											_x80 = (int)1;
            										}
            										else {
HXLINE( 266)											_x80 = value87;
            										}
            									}
HXDLIN( 266)									_x77 = ::Math_obj::asin(_x80);
HXDLIN( 266)									Float _y80 = (this->x * this->z);
HXDLIN( 266)									Float _y81 = ((int)2 * (_y80 + (this->y * this->w)));
HXDLIN( 266)									_y78 = ::Math_obj::atan2(_y81,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 266)									Float _z81 = (this->x * this->y);
HXDLIN( 266)									Float _z82 = ((int)2 * (_z81 + (this->z * this->w)));
HXDLIN( 266)									_z78 = ::Math_obj::atan2(_z82,(((sqw7 - sqx7) + sqy7) - sqz7));
            								}
            								else {
HXLINE( 266)									if ((order7 == (int)2)) {
HXLINE( 266)										Float value88 = (this->x * this->w);
HXDLIN( 266)										Float value89 = ((int)2 * (value88 + (this->y * this->z)));
HXDLIN( 266)										Float _x81;
HXDLIN( 266)										if ((value89 < (int)-1)) {
HXLINE( 266)											_x81 = (int)-1;
            										}
            										else {
HXLINE( 266)											if ((value89 > (int)1)) {
HXLINE( 266)												_x81 = (int)1;
            											}
            											else {
HXLINE( 266)												_x81 = value89;
            											}
            										}
HXDLIN( 266)										_x77 = ::Math_obj::asin(_x81);
HXDLIN( 266)										Float _y82 = (this->y * this->w);
HXDLIN( 266)										Float _y83 = ((int)2 * (_y82 - (this->z * this->x)));
HXDLIN( 266)										_y78 = ::Math_obj::atan2(_y83,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 266)										Float _z83 = (this->z * this->w);
HXDLIN( 266)										Float _z84 = ((int)2 * (_z83 - (this->x * this->y)));
HXDLIN( 266)										_z78 = ::Math_obj::atan2(_z84,(((sqw7 - sqx7) + sqy7) - sqz7));
            									}
            									else {
HXLINE( 266)										if ((order7 == (int)3)) {
HXLINE( 266)											Float _x82 = (this->x * this->w);
HXDLIN( 266)											Float _x83 = ((int)2 * (_x82 + (this->z * this->y)));
HXDLIN( 266)											_x77 = ::Math_obj::atan2(_x83,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 266)											Float value90 = (this->y * this->w);
HXDLIN( 266)											Float value91 = ((int)2 * (value90 - (this->x * this->z)));
HXDLIN( 266)											Float _y84;
HXDLIN( 266)											if ((value91 < (int)-1)) {
HXLINE( 266)												_y84 = (int)-1;
            											}
            											else {
HXLINE( 266)												if ((value91 > (int)1)) {
HXLINE( 266)													_y84 = (int)1;
            												}
            												else {
HXLINE( 266)													_y84 = value91;
            												}
            											}
HXDLIN( 266)											_y78 = ::Math_obj::asin(_y84);
HXDLIN( 266)											Float _z85 = (this->x * this->y);
HXDLIN( 266)											Float _z86 = ((int)2 * (_z85 + (this->z * this->w)));
HXDLIN( 266)											_z78 = ::Math_obj::atan2(_z86,(((sqw7 + sqx7) - sqy7) - sqz7));
            										}
            										else {
HXLINE( 266)											if ((order7 == (int)4)) {
HXLINE( 266)												Float _x84 = (this->x * this->w);
HXDLIN( 266)												Float _x85 = ((int)2 * (_x84 - (this->z * this->y)));
HXDLIN( 266)												_x77 = ::Math_obj::atan2(_x85,(((sqw7 - sqx7) + sqy7) - sqz7));
HXDLIN( 266)												Float _y85 = (this->y * this->w);
HXDLIN( 266)												Float _y86 = ((int)2 * (_y85 - (this->x * this->z)));
HXDLIN( 266)												_y78 = ::Math_obj::atan2(_y86,(((sqw7 + sqx7) - sqy7) - sqz7));
HXDLIN( 266)												Float value92 = (this->x * this->y);
HXDLIN( 266)												Float value93 = ((int)2 * (value92 + (this->z * this->w)));
HXDLIN( 266)												Float _z87;
HXDLIN( 266)												if ((value93 < (int)-1)) {
HXLINE( 266)													_z87 = (int)-1;
            												}
            												else {
HXLINE( 266)													if ((value93 > (int)1)) {
HXLINE( 266)														_z87 = (int)1;
            													}
            													else {
HXLINE( 266)														_z87 = value93;
            													}
            												}
HXDLIN( 266)												_z78 = ::Math_obj::asin(_z87);
            											}
            											else {
HXLINE( 266)												if ((order7 == (int)5)) {
HXLINE( 266)													Float _x86 = (this->x * this->w);
HXDLIN( 266)													Float _x87 = ((int)2 * (_x86 + (this->y * this->z)));
HXDLIN( 266)													_x77 = ::Math_obj::atan2(_x87,(((sqw7 - sqx7) + sqy7) - sqz7));
HXDLIN( 266)													Float _y87 = (this->x * this->z);
HXDLIN( 266)													Float _y88 = ((int)2 * (_y87 + (this->y * this->w)));
HXDLIN( 266)													_y78 = ::Math_obj::atan2(_y88,(((sqw7 + sqx7) - sqy7) - sqz7));
HXDLIN( 266)													Float value94 = (this->z * this->w);
HXDLIN( 266)													Float value95 = ((int)2 * (value94 - (this->x * this->y)));
HXDLIN( 266)													Float _z88;
HXDLIN( 266)													if ((value95 < (int)-1)) {
HXLINE( 266)														_z88 = (int)-1;
            													}
            													else {
HXLINE( 266)														if ((value95 > (int)1)) {
HXLINE( 266)															_z88 = (int)1;
            														}
            														else {
HXLINE( 266)															_z88 = value95;
            														}
            													}
HXDLIN( 266)													_z78 = ::Math_obj::asin(_z88);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 266)							{
HXLINE( 266)								bool prev7 = _this7->ignore_listeners;
HXDLIN( 266)								_this7->ignore_listeners = true;
HXDLIN( 266)								{
HXLINE( 266)									_this7->x = _x77;
HXDLIN( 266)									if (!(_this7->_construct)) {
HXLINE( 266)										bool _hx_tmp68;
HXDLIN( 266)										if (hx::IsNotNull( _this7->listen_x )) {
HXLINE( 266)											_hx_tmp68 = !(_this7->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp68 = false;
            										}
HXDLIN( 266)										if (_hx_tmp68) {
HXLINE( 266)											_this7->listen_x(_x77);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this7->y = _y78;
HXDLIN( 266)									if (!(_this7->_construct)) {
HXLINE( 266)										bool _hx_tmp69;
HXDLIN( 266)										if (hx::IsNotNull( _this7->listen_y )) {
HXLINE( 266)											_hx_tmp69 = !(_this7->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp69 = false;
            										}
HXDLIN( 266)										if (_hx_tmp69) {
HXLINE( 266)											_this7->listen_y(_y78);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this7->z = _z78;
HXDLIN( 266)									if (!(_this7->_construct)) {
HXLINE( 266)										bool _hx_tmp70;
HXDLIN( 266)										if (hx::IsNotNull( _this7->listen_z )) {
HXLINE( 266)											_hx_tmp70 = !(_this7->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp70 = false;
            										}
HXDLIN( 266)										if (_hx_tmp70) {
HXLINE( 266)											_this7->listen_z(_z78);
            										}
            									}
            								}
HXDLIN( 266)								_this7->ignore_listeners = prev7;
HXDLIN( 266)								bool _hx_tmp71;
HXDLIN( 266)								if (hx::IsNotNull( _this7->listen_x )) {
HXLINE( 266)									_hx_tmp71 = !(_this7->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp71 = false;
            								}
HXDLIN( 266)								if (_hx_tmp71) {
HXLINE( 266)									_this7->listen_x(_this7->x);
            								}
HXDLIN( 266)								bool _hx_tmp72;
HXDLIN( 266)								if (hx::IsNotNull( _this7->listen_y )) {
HXLINE( 266)									_hx_tmp72 = !(_this7->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp72 = false;
            								}
HXDLIN( 266)								if (_hx_tmp72) {
HXLINE( 266)									_this7->listen_y(_this7->y);
            								}
HXDLIN( 266)								bool _hx_tmp73;
HXDLIN( 266)								if (hx::IsNotNull( _this7->listen_z )) {
HXLINE( 266)									_hx_tmp73 = !(_this7->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp73 = false;
            								}
HXDLIN( 266)								if (_hx_tmp73) {
HXLINE( 266)									_this7->listen_z(_this7->z);
            								}
            							}
            						}
HXDLIN( 266)						bool _hx_tmp74;
HXDLIN( 266)						if (hx::IsNotNull( this->listen_z )) {
HXLINE( 266)							_hx_tmp74 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp74 = false;
            						}
HXDLIN( 266)						if (_hx_tmp74) {
HXLINE( 266)							this->listen_z(this->z);
            						}
            					}
            				}
HXDLIN( 266)				{
HXLINE( 266)					this->w = _w;
HXDLIN( 266)					if (!(this->_construct)) {
HXLINE( 266)						bool _hx_tmp75;
HXDLIN( 266)						bool _hx_tmp76;
HXDLIN( 266)						if (hx::IsNotNull( this->euler )) {
HXLINE( 266)							_hx_tmp76 = this->ignore_euler;
            						}
            						else {
HXLINE( 266)							_hx_tmp76 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp76)) {
HXLINE( 266)							_hx_tmp75 = this->_construct;
            						}
            						else {
HXLINE( 266)							_hx_tmp75 = true;
            						}
HXDLIN( 266)						if (!(_hx_tmp75)) {
HXLINE( 266)							 ::phoenix::Vector _this8 = this->euler;
HXDLIN( 266)							int order8 = (int)0;
HXDLIN( 266)							Float sqx8 = (this->x * this->x);
HXDLIN( 266)							Float sqy8 = (this->y * this->y);
HXDLIN( 266)							Float sqz8 = (this->z * this->z);
HXDLIN( 266)							Float sqw8 = (this->w * this->w);
HXDLIN( 266)							Float _x88 = _this8->x;
HXDLIN( 266)							Float _y89 = _this8->y;
HXDLIN( 266)							Float _z89 = _this8->z;
HXDLIN( 266)							if ((order8 == (int)0)) {
HXLINE( 266)								Float _x89 = (this->x * this->w);
HXDLIN( 266)								Float _x90 = ((int)2 * (_x89 - (this->y * this->z)));
HXDLIN( 266)								_x88 = ::Math_obj::atan2(_x90,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 266)								Float value96 = (this->x * this->z);
HXDLIN( 266)								Float value97 = ((int)2 * (value96 + (this->y * this->w)));
HXDLIN( 266)								Float _y90;
HXDLIN( 266)								if ((value97 < (int)-1)) {
HXLINE( 266)									_y90 = (int)-1;
            								}
            								else {
HXLINE( 266)									if ((value97 > (int)1)) {
HXLINE( 266)										_y90 = (int)1;
            									}
            									else {
HXLINE( 266)										_y90 = value97;
            									}
            								}
HXDLIN( 266)								_y89 = ::Math_obj::asin(_y90);
HXDLIN( 266)								Float _z90 = (this->z * this->w);
HXDLIN( 266)								Float _z91 = ((int)2 * (_z90 - (this->x * this->y)));
HXDLIN( 266)								_z89 = ::Math_obj::atan2(_z91,(((sqw8 + sqx8) - sqy8) - sqz8));
            							}
            							else {
HXLINE( 266)								if ((order8 == (int)1)) {
HXLINE( 266)									Float value98 = (this->x * this->w);
HXDLIN( 266)									Float value99 = ((int)2 * (value98 - (this->y * this->z)));
HXDLIN( 266)									Float _x91;
HXDLIN( 266)									if ((value99 < (int)-1)) {
HXLINE( 266)										_x91 = (int)-1;
            									}
            									else {
HXLINE( 266)										if ((value99 > (int)1)) {
HXLINE( 266)											_x91 = (int)1;
            										}
            										else {
HXLINE( 266)											_x91 = value99;
            										}
            									}
HXDLIN( 266)									_x88 = ::Math_obj::asin(_x91);
HXDLIN( 266)									Float _y91 = (this->x * this->z);
HXDLIN( 266)									Float _y92 = ((int)2 * (_y91 + (this->y * this->w)));
HXDLIN( 266)									_y89 = ::Math_obj::atan2(_y92,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 266)									Float _z92 = (this->x * this->y);
HXDLIN( 266)									Float _z93 = ((int)2 * (_z92 + (this->z * this->w)));
HXDLIN( 266)									_z89 = ::Math_obj::atan2(_z93,(((sqw8 - sqx8) + sqy8) - sqz8));
            								}
            								else {
HXLINE( 266)									if ((order8 == (int)2)) {
HXLINE( 266)										Float value100 = (this->x * this->w);
HXDLIN( 266)										Float value101 = ((int)2 * (value100 + (this->y * this->z)));
HXDLIN( 266)										Float _x92;
HXDLIN( 266)										if ((value101 < (int)-1)) {
HXLINE( 266)											_x92 = (int)-1;
            										}
            										else {
HXLINE( 266)											if ((value101 > (int)1)) {
HXLINE( 266)												_x92 = (int)1;
            											}
            											else {
HXLINE( 266)												_x92 = value101;
            											}
            										}
HXDLIN( 266)										_x88 = ::Math_obj::asin(_x92);
HXDLIN( 266)										Float _y93 = (this->y * this->w);
HXDLIN( 266)										Float _y94 = ((int)2 * (_y93 - (this->z * this->x)));
HXDLIN( 266)										_y89 = ::Math_obj::atan2(_y94,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 266)										Float _z94 = (this->z * this->w);
HXDLIN( 266)										Float _z95 = ((int)2 * (_z94 - (this->x * this->y)));
HXDLIN( 266)										_z89 = ::Math_obj::atan2(_z95,(((sqw8 - sqx8) + sqy8) - sqz8));
            									}
            									else {
HXLINE( 266)										if ((order8 == (int)3)) {
HXLINE( 266)											Float _x93 = (this->x * this->w);
HXDLIN( 266)											Float _x94 = ((int)2 * (_x93 + (this->z * this->y)));
HXDLIN( 266)											_x88 = ::Math_obj::atan2(_x94,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 266)											Float value102 = (this->y * this->w);
HXDLIN( 266)											Float value103 = ((int)2 * (value102 - (this->x * this->z)));
HXDLIN( 266)											Float _y95;
HXDLIN( 266)											if ((value103 < (int)-1)) {
HXLINE( 266)												_y95 = (int)-1;
            											}
            											else {
HXLINE( 266)												if ((value103 > (int)1)) {
HXLINE( 266)													_y95 = (int)1;
            												}
            												else {
HXLINE( 266)													_y95 = value103;
            												}
            											}
HXDLIN( 266)											_y89 = ::Math_obj::asin(_y95);
HXDLIN( 266)											Float _z96 = (this->x * this->y);
HXDLIN( 266)											Float _z97 = ((int)2 * (_z96 + (this->z * this->w)));
HXDLIN( 266)											_z89 = ::Math_obj::atan2(_z97,(((sqw8 + sqx8) - sqy8) - sqz8));
            										}
            										else {
HXLINE( 266)											if ((order8 == (int)4)) {
HXLINE( 266)												Float _x95 = (this->x * this->w);
HXDLIN( 266)												Float _x96 = ((int)2 * (_x95 - (this->z * this->y)));
HXDLIN( 266)												_x88 = ::Math_obj::atan2(_x96,(((sqw8 - sqx8) + sqy8) - sqz8));
HXDLIN( 266)												Float _y96 = (this->y * this->w);
HXDLIN( 266)												Float _y97 = ((int)2 * (_y96 - (this->x * this->z)));
HXDLIN( 266)												_y89 = ::Math_obj::atan2(_y97,(((sqw8 + sqx8) - sqy8) - sqz8));
HXDLIN( 266)												Float value104 = (this->x * this->y);
HXDLIN( 266)												Float value105 = ((int)2 * (value104 + (this->z * this->w)));
HXDLIN( 266)												Float _z98;
HXDLIN( 266)												if ((value105 < (int)-1)) {
HXLINE( 266)													_z98 = (int)-1;
            												}
            												else {
HXLINE( 266)													if ((value105 > (int)1)) {
HXLINE( 266)														_z98 = (int)1;
            													}
            													else {
HXLINE( 266)														_z98 = value105;
            													}
            												}
HXDLIN( 266)												_z89 = ::Math_obj::asin(_z98);
            											}
            											else {
HXLINE( 266)												if ((order8 == (int)5)) {
HXLINE( 266)													Float _x97 = (this->x * this->w);
HXDLIN( 266)													Float _x98 = ((int)2 * (_x97 + (this->y * this->z)));
HXDLIN( 266)													_x88 = ::Math_obj::atan2(_x98,(((sqw8 - sqx8) + sqy8) - sqz8));
HXDLIN( 266)													Float _y98 = (this->x * this->z);
HXDLIN( 266)													Float _y99 = ((int)2 * (_y98 + (this->y * this->w)));
HXDLIN( 266)													_y89 = ::Math_obj::atan2(_y99,(((sqw8 + sqx8) - sqy8) - sqz8));
HXDLIN( 266)													Float value106 = (this->z * this->w);
HXDLIN( 266)													Float value107 = ((int)2 * (value106 - (this->x * this->y)));
HXDLIN( 266)													Float _z99;
HXDLIN( 266)													if ((value107 < (int)-1)) {
HXLINE( 266)														_z99 = (int)-1;
            													}
            													else {
HXLINE( 266)														if ((value107 > (int)1)) {
HXLINE( 266)															_z99 = (int)1;
            														}
            														else {
HXLINE( 266)															_z99 = value107;
            														}
            													}
HXDLIN( 266)													_z89 = ::Math_obj::asin(_z99);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 266)							{
HXLINE( 266)								bool prev8 = _this8->ignore_listeners;
HXDLIN( 266)								_this8->ignore_listeners = true;
HXDLIN( 266)								{
HXLINE( 266)									_this8->x = _x88;
HXDLIN( 266)									if (!(_this8->_construct)) {
HXLINE( 266)										bool _hx_tmp77;
HXDLIN( 266)										if (hx::IsNotNull( _this8->listen_x )) {
HXLINE( 266)											_hx_tmp77 = !(_this8->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp77 = false;
            										}
HXDLIN( 266)										if (_hx_tmp77) {
HXLINE( 266)											_this8->listen_x(_x88);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this8->y = _y89;
HXDLIN( 266)									if (!(_this8->_construct)) {
HXLINE( 266)										bool _hx_tmp78;
HXDLIN( 266)										if (hx::IsNotNull( _this8->listen_y )) {
HXLINE( 266)											_hx_tmp78 = !(_this8->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp78 = false;
            										}
HXDLIN( 266)										if (_hx_tmp78) {
HXLINE( 266)											_this8->listen_y(_y89);
            										}
            									}
            								}
HXDLIN( 266)								{
HXLINE( 266)									_this8->z = _z89;
HXDLIN( 266)									if (!(_this8->_construct)) {
HXLINE( 266)										bool _hx_tmp79;
HXDLIN( 266)										if (hx::IsNotNull( _this8->listen_z )) {
HXLINE( 266)											_hx_tmp79 = !(_this8->ignore_listeners);
            										}
            										else {
HXLINE( 266)											_hx_tmp79 = false;
            										}
HXDLIN( 266)										if (_hx_tmp79) {
HXLINE( 266)											_this8->listen_z(_z89);
            										}
            									}
            								}
HXDLIN( 266)								_this8->ignore_listeners = prev8;
HXDLIN( 266)								bool _hx_tmp80;
HXDLIN( 266)								if (hx::IsNotNull( _this8->listen_x )) {
HXLINE( 266)									_hx_tmp80 = !(_this8->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp80 = false;
            								}
HXDLIN( 266)								if (_hx_tmp80) {
HXLINE( 266)									_this8->listen_x(_this8->x);
            								}
HXDLIN( 266)								bool _hx_tmp81;
HXDLIN( 266)								if (hx::IsNotNull( _this8->listen_y )) {
HXLINE( 266)									_hx_tmp81 = !(_this8->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp81 = false;
            								}
HXDLIN( 266)								if (_hx_tmp81) {
HXLINE( 266)									_this8->listen_y(_this8->y);
            								}
HXDLIN( 266)								bool _hx_tmp82;
HXDLIN( 266)								if (hx::IsNotNull( _this8->listen_z )) {
HXLINE( 266)									_hx_tmp82 = !(_this8->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp82 = false;
            								}
HXDLIN( 266)								if (_hx_tmp82) {
HXLINE( 266)									_this8->listen_z(_this8->z);
            								}
            							}
            						}
HXDLIN( 266)						bool _hx_tmp83;
HXDLIN( 266)						if (hx::IsNotNull( this->listen_w )) {
HXLINE( 266)							_hx_tmp83 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp83 = false;
            						}
HXDLIN( 266)						if (_hx_tmp83) {
HXLINE( 266)							this->listen_w(this->w);
            						}
            					}
            				}
HXDLIN( 266)				this->ignore_euler = false;
HXDLIN( 266)				bool _hx_tmp84;
HXDLIN( 266)				bool _hx_tmp85;
HXDLIN( 266)				if (hx::IsNotNull( this->euler )) {
HXLINE( 266)					_hx_tmp85 = this->ignore_euler;
            				}
            				else {
HXLINE( 266)					_hx_tmp85 = true;
            				}
HXDLIN( 266)				if (!(_hx_tmp85)) {
HXLINE( 266)					_hx_tmp84 = this->_construct;
            				}
            				else {
HXLINE( 266)					_hx_tmp84 = true;
            				}
HXDLIN( 266)				if (!(_hx_tmp84)) {
HXLINE( 266)					 ::phoenix::Vector _this9 = this->euler;
HXDLIN( 266)					int order9 = (int)0;
HXDLIN( 266)					Float sqx9 = (this->x * this->x);
HXDLIN( 266)					Float sqy9 = (this->y * this->y);
HXDLIN( 266)					Float sqz9 = (this->z * this->z);
HXDLIN( 266)					Float sqw9 = (this->w * this->w);
HXDLIN( 266)					Float _x99 = _this9->x;
HXDLIN( 266)					Float _y100 = _this9->y;
HXDLIN( 266)					Float _z100 = _this9->z;
HXDLIN( 266)					if ((order9 == (int)0)) {
HXLINE( 266)						Float _x100 = (this->x * this->w);
HXDLIN( 266)						Float _x101 = ((int)2 * (_x100 - (this->y * this->z)));
HXDLIN( 266)						_x99 = ::Math_obj::atan2(_x101,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 266)						Float value108 = (this->x * this->z);
HXDLIN( 266)						Float value109 = ((int)2 * (value108 + (this->y * this->w)));
HXDLIN( 266)						Float _y101;
HXDLIN( 266)						if ((value109 < (int)-1)) {
HXLINE( 266)							_y101 = (int)-1;
            						}
            						else {
HXLINE( 266)							if ((value109 > (int)1)) {
HXLINE( 266)								_y101 = (int)1;
            							}
            							else {
HXLINE( 266)								_y101 = value109;
            							}
            						}
HXDLIN( 266)						_y100 = ::Math_obj::asin(_y101);
HXDLIN( 266)						Float _z101 = (this->z * this->w);
HXDLIN( 266)						Float _z102 = ((int)2 * (_z101 - (this->x * this->y)));
HXDLIN( 266)						_z100 = ::Math_obj::atan2(_z102,(((sqw9 + sqx9) - sqy9) - sqz9));
            					}
            					else {
HXLINE( 266)						if ((order9 == (int)1)) {
HXLINE( 266)							Float value110 = (this->x * this->w);
HXDLIN( 266)							Float value111 = ((int)2 * (value110 - (this->y * this->z)));
HXDLIN( 266)							Float _x102;
HXDLIN( 266)							if ((value111 < (int)-1)) {
HXLINE( 266)								_x102 = (int)-1;
            							}
            							else {
HXLINE( 266)								if ((value111 > (int)1)) {
HXLINE( 266)									_x102 = (int)1;
            								}
            								else {
HXLINE( 266)									_x102 = value111;
            								}
            							}
HXDLIN( 266)							_x99 = ::Math_obj::asin(_x102);
HXDLIN( 266)							Float _y102 = (this->x * this->z);
HXDLIN( 266)							Float _y103 = ((int)2 * (_y102 + (this->y * this->w)));
HXDLIN( 266)							_y100 = ::Math_obj::atan2(_y103,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 266)							Float _z103 = (this->x * this->y);
HXDLIN( 266)							Float _z104 = ((int)2 * (_z103 + (this->z * this->w)));
HXDLIN( 266)							_z100 = ::Math_obj::atan2(_z104,(((sqw9 - sqx9) + sqy9) - sqz9));
            						}
            						else {
HXLINE( 266)							if ((order9 == (int)2)) {
HXLINE( 266)								Float value112 = (this->x * this->w);
HXDLIN( 266)								Float value113 = ((int)2 * (value112 + (this->y * this->z)));
HXDLIN( 266)								Float _x103;
HXDLIN( 266)								if ((value113 < (int)-1)) {
HXLINE( 266)									_x103 = (int)-1;
            								}
            								else {
HXLINE( 266)									if ((value113 > (int)1)) {
HXLINE( 266)										_x103 = (int)1;
            									}
            									else {
HXLINE( 266)										_x103 = value113;
            									}
            								}
HXDLIN( 266)								_x99 = ::Math_obj::asin(_x103);
HXDLIN( 266)								Float _y104 = (this->y * this->w);
HXDLIN( 266)								Float _y105 = ((int)2 * (_y104 - (this->z * this->x)));
HXDLIN( 266)								_y100 = ::Math_obj::atan2(_y105,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 266)								Float _z105 = (this->z * this->w);
HXDLIN( 266)								Float _z106 = ((int)2 * (_z105 - (this->x * this->y)));
HXDLIN( 266)								_z100 = ::Math_obj::atan2(_z106,(((sqw9 - sqx9) + sqy9) - sqz9));
            							}
            							else {
HXLINE( 266)								if ((order9 == (int)3)) {
HXLINE( 266)									Float _x104 = (this->x * this->w);
HXDLIN( 266)									Float _x105 = ((int)2 * (_x104 + (this->z * this->y)));
HXDLIN( 266)									_x99 = ::Math_obj::atan2(_x105,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 266)									Float value114 = (this->y * this->w);
HXDLIN( 266)									Float value115 = ((int)2 * (value114 - (this->x * this->z)));
HXDLIN( 266)									Float _y106;
HXDLIN( 266)									if ((value115 < (int)-1)) {
HXLINE( 266)										_y106 = (int)-1;
            									}
            									else {
HXLINE( 266)										if ((value115 > (int)1)) {
HXLINE( 266)											_y106 = (int)1;
            										}
            										else {
HXLINE( 266)											_y106 = value115;
            										}
            									}
HXDLIN( 266)									_y100 = ::Math_obj::asin(_y106);
HXDLIN( 266)									Float _z107 = (this->x * this->y);
HXDLIN( 266)									Float _z108 = ((int)2 * (_z107 + (this->z * this->w)));
HXDLIN( 266)									_z100 = ::Math_obj::atan2(_z108,(((sqw9 + sqx9) - sqy9) - sqz9));
            								}
            								else {
HXLINE( 266)									if ((order9 == (int)4)) {
HXLINE( 266)										Float _x106 = (this->x * this->w);
HXDLIN( 266)										Float _x107 = ((int)2 * (_x106 - (this->z * this->y)));
HXDLIN( 266)										_x99 = ::Math_obj::atan2(_x107,(((sqw9 - sqx9) + sqy9) - sqz9));
HXDLIN( 266)										Float _y107 = (this->y * this->w);
HXDLIN( 266)										Float _y108 = ((int)2 * (_y107 - (this->x * this->z)));
HXDLIN( 266)										_y100 = ::Math_obj::atan2(_y108,(((sqw9 + sqx9) - sqy9) - sqz9));
HXDLIN( 266)										Float value116 = (this->x * this->y);
HXDLIN( 266)										Float value117 = ((int)2 * (value116 + (this->z * this->w)));
HXDLIN( 266)										Float _z109;
HXDLIN( 266)										if ((value117 < (int)-1)) {
HXLINE( 266)											_z109 = (int)-1;
            										}
            										else {
HXLINE( 266)											if ((value117 > (int)1)) {
HXLINE( 266)												_z109 = (int)1;
            											}
            											else {
HXLINE( 266)												_z109 = value117;
            											}
            										}
HXDLIN( 266)										_z100 = ::Math_obj::asin(_z109);
            									}
            									else {
HXLINE( 266)										if ((order9 == (int)5)) {
HXLINE( 266)											Float _x108 = (this->x * this->w);
HXDLIN( 266)											Float _x109 = ((int)2 * (_x108 + (this->y * this->z)));
HXDLIN( 266)											_x99 = ::Math_obj::atan2(_x109,(((sqw9 - sqx9) + sqy9) - sqz9));
HXDLIN( 266)											Float _y109 = (this->x * this->z);
HXDLIN( 266)											Float _y110 = ((int)2 * (_y109 + (this->y * this->w)));
HXDLIN( 266)											_y100 = ::Math_obj::atan2(_y110,(((sqw9 + sqx9) - sqy9) - sqz9));
HXDLIN( 266)											Float value118 = (this->z * this->w);
HXDLIN( 266)											Float value119 = ((int)2 * (value118 - (this->x * this->y)));
HXDLIN( 266)											Float _z110;
HXDLIN( 266)											if ((value119 < (int)-1)) {
HXLINE( 266)												_z110 = (int)-1;
            											}
            											else {
HXLINE( 266)												if ((value119 > (int)1)) {
HXLINE( 266)													_z110 = (int)1;
            												}
            												else {
HXLINE( 266)													_z110 = value119;
            												}
            											}
HXDLIN( 266)											_z100 = ::Math_obj::asin(_z110);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 266)					{
HXLINE( 266)						bool prev9 = _this9->ignore_listeners;
HXDLIN( 266)						_this9->ignore_listeners = true;
HXDLIN( 266)						{
HXLINE( 266)							_this9->x = _x99;
HXDLIN( 266)							if (!(_this9->_construct)) {
HXLINE( 266)								bool _hx_tmp86;
HXDLIN( 266)								if (hx::IsNotNull( _this9->listen_x )) {
HXLINE( 266)									_hx_tmp86 = !(_this9->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp86 = false;
            								}
HXDLIN( 266)								if (_hx_tmp86) {
HXLINE( 266)									_this9->listen_x(_x99);
            								}
            							}
            						}
HXDLIN( 266)						{
HXLINE( 266)							_this9->y = _y100;
HXDLIN( 266)							if (!(_this9->_construct)) {
HXLINE( 266)								bool _hx_tmp87;
HXDLIN( 266)								if (hx::IsNotNull( _this9->listen_y )) {
HXLINE( 266)									_hx_tmp87 = !(_this9->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp87 = false;
            								}
HXDLIN( 266)								if (_hx_tmp87) {
HXLINE( 266)									_this9->listen_y(_y100);
            								}
            							}
            						}
HXDLIN( 266)						{
HXLINE( 266)							_this9->z = _z100;
HXDLIN( 266)							if (!(_this9->_construct)) {
HXLINE( 266)								bool _hx_tmp88;
HXDLIN( 266)								if (hx::IsNotNull( _this9->listen_z )) {
HXLINE( 266)									_hx_tmp88 = !(_this9->ignore_listeners);
            								}
            								else {
HXLINE( 266)									_hx_tmp88 = false;
            								}
HXDLIN( 266)								if (_hx_tmp88) {
HXLINE( 266)									_this9->listen_z(_z100);
            								}
            							}
            						}
HXDLIN( 266)						_this9->ignore_listeners = prev9;
HXDLIN( 266)						bool _hx_tmp89;
HXDLIN( 266)						if (hx::IsNotNull( _this9->listen_x )) {
HXLINE( 266)							_hx_tmp89 = !(_this9->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp89 = false;
            						}
HXDLIN( 266)						if (_hx_tmp89) {
HXLINE( 266)							_this9->listen_x(_this9->x);
            						}
HXDLIN( 266)						bool _hx_tmp90;
HXDLIN( 266)						if (hx::IsNotNull( _this9->listen_y )) {
HXLINE( 266)							_hx_tmp90 = !(_this9->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp90 = false;
            						}
HXDLIN( 266)						if (_hx_tmp90) {
HXLINE( 266)							_this9->listen_y(_this9->y);
            						}
HXDLIN( 266)						bool _hx_tmp91;
HXDLIN( 266)						if (hx::IsNotNull( _this9->listen_z )) {
HXLINE( 266)							_hx_tmp91 = !(_this9->ignore_listeners);
            						}
            						else {
HXLINE( 266)							_hx_tmp91 = false;
            						}
HXDLIN( 266)						if (_hx_tmp91) {
HXLINE( 266)							_this9->listen_z(_this9->z);
            						}
            					}
            				}
HXDLIN( 266)				bool _hx_tmp92;
HXDLIN( 266)				if (hx::IsNotNull( this->listen_x )) {
HXLINE( 266)					_hx_tmp92 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 266)					_hx_tmp92 = false;
            				}
HXDLIN( 266)				if (_hx_tmp92) {
HXLINE( 266)					this->listen_x(this->x);
            				}
HXDLIN( 266)				bool _hx_tmp93;
HXDLIN( 266)				if (hx::IsNotNull( this->listen_y )) {
HXLINE( 266)					_hx_tmp93 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 266)					_hx_tmp93 = false;
            				}
HXDLIN( 266)				if (_hx_tmp93) {
HXLINE( 266)					this->listen_y(this->y);
            				}
HXDLIN( 266)				bool _hx_tmp94;
HXDLIN( 266)				if (hx::IsNotNull( this->listen_z )) {
HXLINE( 266)					_hx_tmp94 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 266)					_hx_tmp94 = false;
            				}
HXDLIN( 266)				if (_hx_tmp94) {
HXLINE( 266)					this->listen_z(this->z);
            				}
HXDLIN( 266)				bool _hx_tmp95;
HXDLIN( 266)				if (hx::IsNotNull( this->listen_w )) {
HXLINE( 266)					_hx_tmp95 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 266)					_hx_tmp95 = false;
            				}
HXDLIN( 266)				if (_hx_tmp95) {
HXLINE( 266)					this->listen_w(this->w);
            				}
            			}
            		}
HXLINE( 270)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,normalize,return )

 ::phoenix::Quaternion Quaternion_obj::multiply( ::phoenix::Quaternion _quaternion){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_288_multiply)
HXDLIN( 288)		return this->multiplyQuaternions(hx::ObjectPtr<OBJ_>(this),_quaternion);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,multiply,return )

 ::phoenix::Quaternion Quaternion_obj::add( ::phoenix::Quaternion _quaternion){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_294_add)
HXDLIN( 294)		return this->addQuaternions(hx::ObjectPtr<OBJ_>(this),_quaternion);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,add,return )

 ::phoenix::Quaternion Quaternion_obj::addQuaternions( ::phoenix::Quaternion _a, ::phoenix::Quaternion _b){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_298_addQuaternions)
HXLINE( 300)		{
HXLINE( 300)			this->x = (_a->x + _b->x);
HXDLIN( 300)			if (!(this->_construct)) {
HXLINE( 300)				bool _hx_tmp;
HXDLIN( 300)				bool _hx_tmp1;
HXDLIN( 300)				if (hx::IsNotNull( this->euler )) {
HXLINE( 300)					_hx_tmp1 = this->ignore_euler;
            				}
            				else {
HXLINE( 300)					_hx_tmp1 = true;
            				}
HXDLIN( 300)				if (!(_hx_tmp1)) {
HXLINE( 300)					_hx_tmp = this->_construct;
            				}
            				else {
HXLINE( 300)					_hx_tmp = true;
            				}
HXDLIN( 300)				if (!(_hx_tmp)) {
HXLINE( 300)					 ::phoenix::Vector _this = this->euler;
HXDLIN( 300)					int order = (int)0;
HXDLIN( 300)					Float sqx = (this->x * this->x);
HXDLIN( 300)					Float sqy = (this->y * this->y);
HXDLIN( 300)					Float sqz = (this->z * this->z);
HXDLIN( 300)					Float sqw = (this->w * this->w);
HXDLIN( 300)					Float _x = _this->x;
HXDLIN( 300)					Float _y = _this->y;
HXDLIN( 300)					Float _z = _this->z;
HXDLIN( 300)					if ((order == (int)0)) {
HXLINE( 300)						Float _x1 = (this->x * this->w);
HXDLIN( 300)						Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 300)						_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 300)						Float value = (this->x * this->z);
HXDLIN( 300)						Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 300)						Float _y1;
HXDLIN( 300)						if ((value1 < (int)-1)) {
HXLINE( 300)							_y1 = (int)-1;
            						}
            						else {
HXLINE( 300)							if ((value1 > (int)1)) {
HXLINE( 300)								_y1 = (int)1;
            							}
            							else {
HXLINE( 300)								_y1 = value1;
            							}
            						}
HXDLIN( 300)						_y = ::Math_obj::asin(_y1);
HXDLIN( 300)						Float _z1 = (this->z * this->w);
HXDLIN( 300)						Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 300)						_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            					}
            					else {
HXLINE( 300)						if ((order == (int)1)) {
HXLINE( 300)							Float value2 = (this->x * this->w);
HXDLIN( 300)							Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 300)							Float _x3;
HXDLIN( 300)							if ((value3 < (int)-1)) {
HXLINE( 300)								_x3 = (int)-1;
            							}
            							else {
HXLINE( 300)								if ((value3 > (int)1)) {
HXLINE( 300)									_x3 = (int)1;
            								}
            								else {
HXLINE( 300)									_x3 = value3;
            								}
            							}
HXDLIN( 300)							_x = ::Math_obj::asin(_x3);
HXDLIN( 300)							Float _y2 = (this->x * this->z);
HXDLIN( 300)							Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 300)							_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 300)							Float _z3 = (this->x * this->y);
HXDLIN( 300)							Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 300)							_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            						}
            						else {
HXLINE( 300)							if ((order == (int)2)) {
HXLINE( 300)								Float value4 = (this->x * this->w);
HXDLIN( 300)								Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 300)								Float _x4;
HXDLIN( 300)								if ((value5 < (int)-1)) {
HXLINE( 300)									_x4 = (int)-1;
            								}
            								else {
HXLINE( 300)									if ((value5 > (int)1)) {
HXLINE( 300)										_x4 = (int)1;
            									}
            									else {
HXLINE( 300)										_x4 = value5;
            									}
            								}
HXDLIN( 300)								_x = ::Math_obj::asin(_x4);
HXDLIN( 300)								Float _y4 = (this->y * this->w);
HXDLIN( 300)								Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 300)								_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 300)								Float _z5 = (this->z * this->w);
HXDLIN( 300)								Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 300)								_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 300)								if ((order == (int)3)) {
HXLINE( 300)									Float _x5 = (this->x * this->w);
HXDLIN( 300)									Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 300)									_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 300)									Float value6 = (this->y * this->w);
HXDLIN( 300)									Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 300)									Float _y6;
HXDLIN( 300)									if ((value7 < (int)-1)) {
HXLINE( 300)										_y6 = (int)-1;
            									}
            									else {
HXLINE( 300)										if ((value7 > (int)1)) {
HXLINE( 300)											_y6 = (int)1;
            										}
            										else {
HXLINE( 300)											_y6 = value7;
            										}
            									}
HXDLIN( 300)									_y = ::Math_obj::asin(_y6);
HXDLIN( 300)									Float _z7 = (this->x * this->y);
HXDLIN( 300)									Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 300)									_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            								}
            								else {
HXLINE( 300)									if ((order == (int)4)) {
HXLINE( 300)										Float _x7 = (this->x * this->w);
HXDLIN( 300)										Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 300)										_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 300)										Float _y7 = (this->y * this->w);
HXDLIN( 300)										Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 300)										_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 300)										Float value8 = (this->x * this->y);
HXDLIN( 300)										Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 300)										Float _z9;
HXDLIN( 300)										if ((value9 < (int)-1)) {
HXLINE( 300)											_z9 = (int)-1;
            										}
            										else {
HXLINE( 300)											if ((value9 > (int)1)) {
HXLINE( 300)												_z9 = (int)1;
            											}
            											else {
HXLINE( 300)												_z9 = value9;
            											}
            										}
HXDLIN( 300)										_z = ::Math_obj::asin(_z9);
            									}
            									else {
HXLINE( 300)										if ((order == (int)5)) {
HXLINE( 300)											Float _x9 = (this->x * this->w);
HXDLIN( 300)											Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 300)											_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 300)											Float _y9 = (this->x * this->z);
HXDLIN( 300)											Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 300)											_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 300)											Float value10 = (this->z * this->w);
HXDLIN( 300)											Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 300)											Float _z10;
HXDLIN( 300)											if ((value11 < (int)-1)) {
HXLINE( 300)												_z10 = (int)-1;
            											}
            											else {
HXLINE( 300)												if ((value11 > (int)1)) {
HXLINE( 300)													_z10 = (int)1;
            												}
            												else {
HXLINE( 300)													_z10 = value11;
            												}
            											}
HXDLIN( 300)											_z = ::Math_obj::asin(_z10);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 300)					{
HXLINE( 300)						bool prev = _this->ignore_listeners;
HXDLIN( 300)						_this->ignore_listeners = true;
HXDLIN( 300)						{
HXLINE( 300)							_this->x = _x;
HXDLIN( 300)							if (!(_this->_construct)) {
HXLINE( 300)								bool _hx_tmp2;
HXDLIN( 300)								if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 300)									_hx_tmp2 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 300)									_hx_tmp2 = false;
            								}
HXDLIN( 300)								if (_hx_tmp2) {
HXLINE( 300)									_this->listen_x(_x);
            								}
            							}
            						}
HXDLIN( 300)						{
HXLINE( 300)							_this->y = _y;
HXDLIN( 300)							if (!(_this->_construct)) {
HXLINE( 300)								bool _hx_tmp3;
HXDLIN( 300)								if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 300)									_hx_tmp3 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 300)									_hx_tmp3 = false;
            								}
HXDLIN( 300)								if (_hx_tmp3) {
HXLINE( 300)									_this->listen_y(_y);
            								}
            							}
            						}
HXDLIN( 300)						{
HXLINE( 300)							_this->z = _z;
HXDLIN( 300)							if (!(_this->_construct)) {
HXLINE( 300)								bool _hx_tmp4;
HXDLIN( 300)								if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 300)									_hx_tmp4 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 300)									_hx_tmp4 = false;
            								}
HXDLIN( 300)								if (_hx_tmp4) {
HXLINE( 300)									_this->listen_z(_z);
            								}
            							}
            						}
HXDLIN( 300)						_this->ignore_listeners = prev;
HXDLIN( 300)						bool _hx_tmp5;
HXDLIN( 300)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 300)							_hx_tmp5 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 300)							_hx_tmp5 = false;
            						}
HXDLIN( 300)						if (_hx_tmp5) {
HXLINE( 300)							_this->listen_x(_this->x);
            						}
HXDLIN( 300)						bool _hx_tmp6;
HXDLIN( 300)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 300)							_hx_tmp6 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 300)							_hx_tmp6 = false;
            						}
HXDLIN( 300)						if (_hx_tmp6) {
HXLINE( 300)							_this->listen_y(_this->y);
            						}
HXDLIN( 300)						bool _hx_tmp7;
HXDLIN( 300)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 300)							_hx_tmp7 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 300)							_hx_tmp7 = false;
            						}
HXDLIN( 300)						if (_hx_tmp7) {
HXLINE( 300)							_this->listen_z(_this->z);
            						}
            					}
            				}
HXDLIN( 300)				bool _hx_tmp8;
HXDLIN( 300)				if (hx::IsNotNull( this->listen_x )) {
HXLINE( 300)					_hx_tmp8 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 300)					_hx_tmp8 = false;
            				}
HXDLIN( 300)				if (_hx_tmp8) {
HXLINE( 300)					this->listen_x(this->x);
            				}
            			}
            		}
HXLINE( 301)		{
HXLINE( 301)			this->y = (_a->y + _b->y);
HXDLIN( 301)			if (!(this->_construct)) {
HXLINE( 301)				bool _hx_tmp9;
HXDLIN( 301)				bool _hx_tmp10;
HXDLIN( 301)				if (hx::IsNotNull( this->euler )) {
HXLINE( 301)					_hx_tmp10 = this->ignore_euler;
            				}
            				else {
HXLINE( 301)					_hx_tmp10 = true;
            				}
HXDLIN( 301)				if (!(_hx_tmp10)) {
HXLINE( 301)					_hx_tmp9 = this->_construct;
            				}
            				else {
HXLINE( 301)					_hx_tmp9 = true;
            				}
HXDLIN( 301)				if (!(_hx_tmp9)) {
HXLINE( 301)					 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 301)					int order1 = (int)0;
HXDLIN( 301)					Float sqx1 = (this->x * this->x);
HXDLIN( 301)					Float sqy1 = (this->y * this->y);
HXDLIN( 301)					Float sqz1 = (this->z * this->z);
HXDLIN( 301)					Float sqw1 = (this->w * this->w);
HXDLIN( 301)					Float _x11 = _this1->x;
HXDLIN( 301)					Float _y11 = _this1->y;
HXDLIN( 301)					Float _z11 = _this1->z;
HXDLIN( 301)					if ((order1 == (int)0)) {
HXLINE( 301)						Float _x12 = (this->x * this->w);
HXDLIN( 301)						Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN( 301)						_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 301)						Float value12 = (this->x * this->z);
HXDLIN( 301)						Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 301)						Float _y12;
HXDLIN( 301)						if ((value13 < (int)-1)) {
HXLINE( 301)							_y12 = (int)-1;
            						}
            						else {
HXLINE( 301)							if ((value13 > (int)1)) {
HXLINE( 301)								_y12 = (int)1;
            							}
            							else {
HXLINE( 301)								_y12 = value13;
            							}
            						}
HXDLIN( 301)						_y11 = ::Math_obj::asin(_y12);
HXDLIN( 301)						Float _z12 = (this->z * this->w);
HXDLIN( 301)						Float _z13 = ((int)2 * (_z12 - (this->x * this->y)));
HXDLIN( 301)						_z11 = ::Math_obj::atan2(_z13,(((sqw1 + sqx1) - sqy1) - sqz1));
            					}
            					else {
HXLINE( 301)						if ((order1 == (int)1)) {
HXLINE( 301)							Float value14 = (this->x * this->w);
HXDLIN( 301)							Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 301)							Float _x14;
HXDLIN( 301)							if ((value15 < (int)-1)) {
HXLINE( 301)								_x14 = (int)-1;
            							}
            							else {
HXLINE( 301)								if ((value15 > (int)1)) {
HXLINE( 301)									_x14 = (int)1;
            								}
            								else {
HXLINE( 301)									_x14 = value15;
            								}
            							}
HXDLIN( 301)							_x11 = ::Math_obj::asin(_x14);
HXDLIN( 301)							Float _y13 = (this->x * this->z);
HXDLIN( 301)							Float _y14 = ((int)2 * (_y13 + (this->y * this->w)));
HXDLIN( 301)							_y11 = ::Math_obj::atan2(_y14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 301)							Float _z14 = (this->x * this->y);
HXDLIN( 301)							Float _z15 = ((int)2 * (_z14 + (this->z * this->w)));
HXDLIN( 301)							_z11 = ::Math_obj::atan2(_z15,(((sqw1 - sqx1) + sqy1) - sqz1));
            						}
            						else {
HXLINE( 301)							if ((order1 == (int)2)) {
HXLINE( 301)								Float value16 = (this->x * this->w);
HXDLIN( 301)								Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 301)								Float _x15;
HXDLIN( 301)								if ((value17 < (int)-1)) {
HXLINE( 301)									_x15 = (int)-1;
            								}
            								else {
HXLINE( 301)									if ((value17 > (int)1)) {
HXLINE( 301)										_x15 = (int)1;
            									}
            									else {
HXLINE( 301)										_x15 = value17;
            									}
            								}
HXDLIN( 301)								_x11 = ::Math_obj::asin(_x15);
HXDLIN( 301)								Float _y15 = (this->y * this->w);
HXDLIN( 301)								Float _y16 = ((int)2 * (_y15 - (this->z * this->x)));
HXDLIN( 301)								_y11 = ::Math_obj::atan2(_y16,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 301)								Float _z16 = (this->z * this->w);
HXDLIN( 301)								Float _z17 = ((int)2 * (_z16 - (this->x * this->y)));
HXDLIN( 301)								_z11 = ::Math_obj::atan2(_z17,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 301)								if ((order1 == (int)3)) {
HXLINE( 301)									Float _x16 = (this->x * this->w);
HXDLIN( 301)									Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN( 301)									_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 301)									Float value18 = (this->y * this->w);
HXDLIN( 301)									Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 301)									Float _y17;
HXDLIN( 301)									if ((value19 < (int)-1)) {
HXLINE( 301)										_y17 = (int)-1;
            									}
            									else {
HXLINE( 301)										if ((value19 > (int)1)) {
HXLINE( 301)											_y17 = (int)1;
            										}
            										else {
HXLINE( 301)											_y17 = value19;
            										}
            									}
HXDLIN( 301)									_y11 = ::Math_obj::asin(_y17);
HXDLIN( 301)									Float _z18 = (this->x * this->y);
HXDLIN( 301)									Float _z19 = ((int)2 * (_z18 + (this->z * this->w)));
HXDLIN( 301)									_z11 = ::Math_obj::atan2(_z19,(((sqw1 + sqx1) - sqy1) - sqz1));
            								}
            								else {
HXLINE( 301)									if ((order1 == (int)4)) {
HXLINE( 301)										Float _x18 = (this->x * this->w);
HXDLIN( 301)										Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN( 301)										_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 301)										Float _y18 = (this->y * this->w);
HXDLIN( 301)										Float _y19 = ((int)2 * (_y18 - (this->x * this->z)));
HXDLIN( 301)										_y11 = ::Math_obj::atan2(_y19,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 301)										Float value20 = (this->x * this->y);
HXDLIN( 301)										Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 301)										Float _z20;
HXDLIN( 301)										if ((value21 < (int)-1)) {
HXLINE( 301)											_z20 = (int)-1;
            										}
            										else {
HXLINE( 301)											if ((value21 > (int)1)) {
HXLINE( 301)												_z20 = (int)1;
            											}
            											else {
HXLINE( 301)												_z20 = value21;
            											}
            										}
HXDLIN( 301)										_z11 = ::Math_obj::asin(_z20);
            									}
            									else {
HXLINE( 301)										if ((order1 == (int)5)) {
HXLINE( 301)											Float _x20 = (this->x * this->w);
HXDLIN( 301)											Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN( 301)											_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 301)											Float _y20 = (this->x * this->z);
HXDLIN( 301)											Float _y21 = ((int)2 * (_y20 + (this->y * this->w)));
HXDLIN( 301)											_y11 = ::Math_obj::atan2(_y21,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 301)											Float value22 = (this->z * this->w);
HXDLIN( 301)											Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 301)											Float _z21;
HXDLIN( 301)											if ((value23 < (int)-1)) {
HXLINE( 301)												_z21 = (int)-1;
            											}
            											else {
HXLINE( 301)												if ((value23 > (int)1)) {
HXLINE( 301)													_z21 = (int)1;
            												}
            												else {
HXLINE( 301)													_z21 = value23;
            												}
            											}
HXDLIN( 301)											_z11 = ::Math_obj::asin(_z21);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 301)					{
HXLINE( 301)						bool prev1 = _this1->ignore_listeners;
HXDLIN( 301)						_this1->ignore_listeners = true;
HXDLIN( 301)						{
HXLINE( 301)							_this1->x = _x11;
HXDLIN( 301)							if (!(_this1->_construct)) {
HXLINE( 301)								bool _hx_tmp11;
HXDLIN( 301)								if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 301)									_hx_tmp11 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 301)									_hx_tmp11 = false;
            								}
HXDLIN( 301)								if (_hx_tmp11) {
HXLINE( 301)									_this1->listen_x(_x11);
            								}
            							}
            						}
HXDLIN( 301)						{
HXLINE( 301)							_this1->y = _y11;
HXDLIN( 301)							if (!(_this1->_construct)) {
HXLINE( 301)								bool _hx_tmp12;
HXDLIN( 301)								if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 301)									_hx_tmp12 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 301)									_hx_tmp12 = false;
            								}
HXDLIN( 301)								if (_hx_tmp12) {
HXLINE( 301)									_this1->listen_y(_y11);
            								}
            							}
            						}
HXDLIN( 301)						{
HXLINE( 301)							_this1->z = _z11;
HXDLIN( 301)							if (!(_this1->_construct)) {
HXLINE( 301)								bool _hx_tmp13;
HXDLIN( 301)								if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 301)									_hx_tmp13 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 301)									_hx_tmp13 = false;
            								}
HXDLIN( 301)								if (_hx_tmp13) {
HXLINE( 301)									_this1->listen_z(_z11);
            								}
            							}
            						}
HXDLIN( 301)						_this1->ignore_listeners = prev1;
HXDLIN( 301)						bool _hx_tmp14;
HXDLIN( 301)						if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 301)							_hx_tmp14 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 301)							_hx_tmp14 = false;
            						}
HXDLIN( 301)						if (_hx_tmp14) {
HXLINE( 301)							_this1->listen_x(_this1->x);
            						}
HXDLIN( 301)						bool _hx_tmp15;
HXDLIN( 301)						if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 301)							_hx_tmp15 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 301)							_hx_tmp15 = false;
            						}
HXDLIN( 301)						if (_hx_tmp15) {
HXLINE( 301)							_this1->listen_y(_this1->y);
            						}
HXDLIN( 301)						bool _hx_tmp16;
HXDLIN( 301)						if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 301)							_hx_tmp16 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 301)							_hx_tmp16 = false;
            						}
HXDLIN( 301)						if (_hx_tmp16) {
HXLINE( 301)							_this1->listen_z(_this1->z);
            						}
            					}
            				}
HXDLIN( 301)				bool _hx_tmp17;
HXDLIN( 301)				if (hx::IsNotNull( this->listen_y )) {
HXLINE( 301)					_hx_tmp17 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 301)					_hx_tmp17 = false;
            				}
HXDLIN( 301)				if (_hx_tmp17) {
HXLINE( 301)					this->listen_y(this->y);
            				}
            			}
            		}
HXLINE( 302)		{
HXLINE( 302)			this->z = (_a->z + _b->z);
HXDLIN( 302)			if (!(this->_construct)) {
HXLINE( 302)				bool _hx_tmp18;
HXDLIN( 302)				bool _hx_tmp19;
HXDLIN( 302)				if (hx::IsNotNull( this->euler )) {
HXLINE( 302)					_hx_tmp19 = this->ignore_euler;
            				}
            				else {
HXLINE( 302)					_hx_tmp19 = true;
            				}
HXDLIN( 302)				if (!(_hx_tmp19)) {
HXLINE( 302)					_hx_tmp18 = this->_construct;
            				}
            				else {
HXLINE( 302)					_hx_tmp18 = true;
            				}
HXDLIN( 302)				if (!(_hx_tmp18)) {
HXLINE( 302)					 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 302)					int order2 = (int)0;
HXDLIN( 302)					Float sqx2 = (this->x * this->x);
HXDLIN( 302)					Float sqy2 = (this->y * this->y);
HXDLIN( 302)					Float sqz2 = (this->z * this->z);
HXDLIN( 302)					Float sqw2 = (this->w * this->w);
HXDLIN( 302)					Float _x22 = _this2->x;
HXDLIN( 302)					Float _y22 = _this2->y;
HXDLIN( 302)					Float _z22 = _this2->z;
HXDLIN( 302)					if ((order2 == (int)0)) {
HXLINE( 302)						Float _x23 = (this->x * this->w);
HXDLIN( 302)						Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN( 302)						_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 302)						Float value24 = (this->x * this->z);
HXDLIN( 302)						Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 302)						Float _y23;
HXDLIN( 302)						if ((value25 < (int)-1)) {
HXLINE( 302)							_y23 = (int)-1;
            						}
            						else {
HXLINE( 302)							if ((value25 > (int)1)) {
HXLINE( 302)								_y23 = (int)1;
            							}
            							else {
HXLINE( 302)								_y23 = value25;
            							}
            						}
HXDLIN( 302)						_y22 = ::Math_obj::asin(_y23);
HXDLIN( 302)						Float _z23 = (this->z * this->w);
HXDLIN( 302)						Float _z24 = ((int)2 * (_z23 - (this->x * this->y)));
HXDLIN( 302)						_z22 = ::Math_obj::atan2(_z24,(((sqw2 + sqx2) - sqy2) - sqz2));
            					}
            					else {
HXLINE( 302)						if ((order2 == (int)1)) {
HXLINE( 302)							Float value26 = (this->x * this->w);
HXDLIN( 302)							Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 302)							Float _x25;
HXDLIN( 302)							if ((value27 < (int)-1)) {
HXLINE( 302)								_x25 = (int)-1;
            							}
            							else {
HXLINE( 302)								if ((value27 > (int)1)) {
HXLINE( 302)									_x25 = (int)1;
            								}
            								else {
HXLINE( 302)									_x25 = value27;
            								}
            							}
HXDLIN( 302)							_x22 = ::Math_obj::asin(_x25);
HXDLIN( 302)							Float _y24 = (this->x * this->z);
HXDLIN( 302)							Float _y25 = ((int)2 * (_y24 + (this->y * this->w)));
HXDLIN( 302)							_y22 = ::Math_obj::atan2(_y25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 302)							Float _z25 = (this->x * this->y);
HXDLIN( 302)							Float _z26 = ((int)2 * (_z25 + (this->z * this->w)));
HXDLIN( 302)							_z22 = ::Math_obj::atan2(_z26,(((sqw2 - sqx2) + sqy2) - sqz2));
            						}
            						else {
HXLINE( 302)							if ((order2 == (int)2)) {
HXLINE( 302)								Float value28 = (this->x * this->w);
HXDLIN( 302)								Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 302)								Float _x26;
HXDLIN( 302)								if ((value29 < (int)-1)) {
HXLINE( 302)									_x26 = (int)-1;
            								}
            								else {
HXLINE( 302)									if ((value29 > (int)1)) {
HXLINE( 302)										_x26 = (int)1;
            									}
            									else {
HXLINE( 302)										_x26 = value29;
            									}
            								}
HXDLIN( 302)								_x22 = ::Math_obj::asin(_x26);
HXDLIN( 302)								Float _y26 = (this->y * this->w);
HXDLIN( 302)								Float _y27 = ((int)2 * (_y26 - (this->z * this->x)));
HXDLIN( 302)								_y22 = ::Math_obj::atan2(_y27,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 302)								Float _z27 = (this->z * this->w);
HXDLIN( 302)								Float _z28 = ((int)2 * (_z27 - (this->x * this->y)));
HXDLIN( 302)								_z22 = ::Math_obj::atan2(_z28,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 302)								if ((order2 == (int)3)) {
HXLINE( 302)									Float _x27 = (this->x * this->w);
HXDLIN( 302)									Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN( 302)									_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 302)									Float value30 = (this->y * this->w);
HXDLIN( 302)									Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 302)									Float _y28;
HXDLIN( 302)									if ((value31 < (int)-1)) {
HXLINE( 302)										_y28 = (int)-1;
            									}
            									else {
HXLINE( 302)										if ((value31 > (int)1)) {
HXLINE( 302)											_y28 = (int)1;
            										}
            										else {
HXLINE( 302)											_y28 = value31;
            										}
            									}
HXDLIN( 302)									_y22 = ::Math_obj::asin(_y28);
HXDLIN( 302)									Float _z29 = (this->x * this->y);
HXDLIN( 302)									Float _z30 = ((int)2 * (_z29 + (this->z * this->w)));
HXDLIN( 302)									_z22 = ::Math_obj::atan2(_z30,(((sqw2 + sqx2) - sqy2) - sqz2));
            								}
            								else {
HXLINE( 302)									if ((order2 == (int)4)) {
HXLINE( 302)										Float _x29 = (this->x * this->w);
HXDLIN( 302)										Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN( 302)										_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 302)										Float _y29 = (this->y * this->w);
HXDLIN( 302)										Float _y30 = ((int)2 * (_y29 - (this->x * this->z)));
HXDLIN( 302)										_y22 = ::Math_obj::atan2(_y30,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 302)										Float value32 = (this->x * this->y);
HXDLIN( 302)										Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 302)										Float _z31;
HXDLIN( 302)										if ((value33 < (int)-1)) {
HXLINE( 302)											_z31 = (int)-1;
            										}
            										else {
HXLINE( 302)											if ((value33 > (int)1)) {
HXLINE( 302)												_z31 = (int)1;
            											}
            											else {
HXLINE( 302)												_z31 = value33;
            											}
            										}
HXDLIN( 302)										_z22 = ::Math_obj::asin(_z31);
            									}
            									else {
HXLINE( 302)										if ((order2 == (int)5)) {
HXLINE( 302)											Float _x31 = (this->x * this->w);
HXDLIN( 302)											Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN( 302)											_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 302)											Float _y31 = (this->x * this->z);
HXDLIN( 302)											Float _y32 = ((int)2 * (_y31 + (this->y * this->w)));
HXDLIN( 302)											_y22 = ::Math_obj::atan2(_y32,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 302)											Float value34 = (this->z * this->w);
HXDLIN( 302)											Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 302)											Float _z32;
HXDLIN( 302)											if ((value35 < (int)-1)) {
HXLINE( 302)												_z32 = (int)-1;
            											}
            											else {
HXLINE( 302)												if ((value35 > (int)1)) {
HXLINE( 302)													_z32 = (int)1;
            												}
            												else {
HXLINE( 302)													_z32 = value35;
            												}
            											}
HXDLIN( 302)											_z22 = ::Math_obj::asin(_z32);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 302)					{
HXLINE( 302)						bool prev2 = _this2->ignore_listeners;
HXDLIN( 302)						_this2->ignore_listeners = true;
HXDLIN( 302)						{
HXLINE( 302)							_this2->x = _x22;
HXDLIN( 302)							if (!(_this2->_construct)) {
HXLINE( 302)								bool _hx_tmp20;
HXDLIN( 302)								if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 302)									_hx_tmp20 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 302)									_hx_tmp20 = false;
            								}
HXDLIN( 302)								if (_hx_tmp20) {
HXLINE( 302)									_this2->listen_x(_x22);
            								}
            							}
            						}
HXDLIN( 302)						{
HXLINE( 302)							_this2->y = _y22;
HXDLIN( 302)							if (!(_this2->_construct)) {
HXLINE( 302)								bool _hx_tmp21;
HXDLIN( 302)								if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 302)									_hx_tmp21 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 302)									_hx_tmp21 = false;
            								}
HXDLIN( 302)								if (_hx_tmp21) {
HXLINE( 302)									_this2->listen_y(_y22);
            								}
            							}
            						}
HXDLIN( 302)						{
HXLINE( 302)							_this2->z = _z22;
HXDLIN( 302)							if (!(_this2->_construct)) {
HXLINE( 302)								bool _hx_tmp22;
HXDLIN( 302)								if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 302)									_hx_tmp22 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 302)									_hx_tmp22 = false;
            								}
HXDLIN( 302)								if (_hx_tmp22) {
HXLINE( 302)									_this2->listen_z(_z22);
            								}
            							}
            						}
HXDLIN( 302)						_this2->ignore_listeners = prev2;
HXDLIN( 302)						bool _hx_tmp23;
HXDLIN( 302)						if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 302)							_hx_tmp23 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 302)							_hx_tmp23 = false;
            						}
HXDLIN( 302)						if (_hx_tmp23) {
HXLINE( 302)							_this2->listen_x(_this2->x);
            						}
HXDLIN( 302)						bool _hx_tmp24;
HXDLIN( 302)						if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 302)							_hx_tmp24 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 302)							_hx_tmp24 = false;
            						}
HXDLIN( 302)						if (_hx_tmp24) {
HXLINE( 302)							_this2->listen_y(_this2->y);
            						}
HXDLIN( 302)						bool _hx_tmp25;
HXDLIN( 302)						if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 302)							_hx_tmp25 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 302)							_hx_tmp25 = false;
            						}
HXDLIN( 302)						if (_hx_tmp25) {
HXLINE( 302)							_this2->listen_z(_this2->z);
            						}
            					}
            				}
HXDLIN( 302)				bool _hx_tmp26;
HXDLIN( 302)				if (hx::IsNotNull( this->listen_z )) {
HXLINE( 302)					_hx_tmp26 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 302)					_hx_tmp26 = false;
            				}
HXDLIN( 302)				if (_hx_tmp26) {
HXLINE( 302)					this->listen_z(this->z);
            				}
            			}
            		}
HXLINE( 303)		{
HXLINE( 303)			this->w = (_a->w + _b->w);
HXDLIN( 303)			if (!(this->_construct)) {
HXLINE( 303)				bool _hx_tmp27;
HXDLIN( 303)				bool _hx_tmp28;
HXDLIN( 303)				if (hx::IsNotNull( this->euler )) {
HXLINE( 303)					_hx_tmp28 = this->ignore_euler;
            				}
            				else {
HXLINE( 303)					_hx_tmp28 = true;
            				}
HXDLIN( 303)				if (!(_hx_tmp28)) {
HXLINE( 303)					_hx_tmp27 = this->_construct;
            				}
            				else {
HXLINE( 303)					_hx_tmp27 = true;
            				}
HXDLIN( 303)				if (!(_hx_tmp27)) {
HXLINE( 303)					 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 303)					int order3 = (int)0;
HXDLIN( 303)					Float sqx3 = (this->x * this->x);
HXDLIN( 303)					Float sqy3 = (this->y * this->y);
HXDLIN( 303)					Float sqz3 = (this->z * this->z);
HXDLIN( 303)					Float sqw3 = (this->w * this->w);
HXDLIN( 303)					Float _x33 = _this3->x;
HXDLIN( 303)					Float _y33 = _this3->y;
HXDLIN( 303)					Float _z33 = _this3->z;
HXDLIN( 303)					if ((order3 == (int)0)) {
HXLINE( 303)						Float _x34 = (this->x * this->w);
HXDLIN( 303)						Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN( 303)						_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 303)						Float value36 = (this->x * this->z);
HXDLIN( 303)						Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 303)						Float _y34;
HXDLIN( 303)						if ((value37 < (int)-1)) {
HXLINE( 303)							_y34 = (int)-1;
            						}
            						else {
HXLINE( 303)							if ((value37 > (int)1)) {
HXLINE( 303)								_y34 = (int)1;
            							}
            							else {
HXLINE( 303)								_y34 = value37;
            							}
            						}
HXDLIN( 303)						_y33 = ::Math_obj::asin(_y34);
HXDLIN( 303)						Float _z34 = (this->z * this->w);
HXDLIN( 303)						Float _z35 = ((int)2 * (_z34 - (this->x * this->y)));
HXDLIN( 303)						_z33 = ::Math_obj::atan2(_z35,(((sqw3 + sqx3) - sqy3) - sqz3));
            					}
            					else {
HXLINE( 303)						if ((order3 == (int)1)) {
HXLINE( 303)							Float value38 = (this->x * this->w);
HXDLIN( 303)							Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 303)							Float _x36;
HXDLIN( 303)							if ((value39 < (int)-1)) {
HXLINE( 303)								_x36 = (int)-1;
            							}
            							else {
HXLINE( 303)								if ((value39 > (int)1)) {
HXLINE( 303)									_x36 = (int)1;
            								}
            								else {
HXLINE( 303)									_x36 = value39;
            								}
            							}
HXDLIN( 303)							_x33 = ::Math_obj::asin(_x36);
HXDLIN( 303)							Float _y35 = (this->x * this->z);
HXDLIN( 303)							Float _y36 = ((int)2 * (_y35 + (this->y * this->w)));
HXDLIN( 303)							_y33 = ::Math_obj::atan2(_y36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 303)							Float _z36 = (this->x * this->y);
HXDLIN( 303)							Float _z37 = ((int)2 * (_z36 + (this->z * this->w)));
HXDLIN( 303)							_z33 = ::Math_obj::atan2(_z37,(((sqw3 - sqx3) + sqy3) - sqz3));
            						}
            						else {
HXLINE( 303)							if ((order3 == (int)2)) {
HXLINE( 303)								Float value40 = (this->x * this->w);
HXDLIN( 303)								Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 303)								Float _x37;
HXDLIN( 303)								if ((value41 < (int)-1)) {
HXLINE( 303)									_x37 = (int)-1;
            								}
            								else {
HXLINE( 303)									if ((value41 > (int)1)) {
HXLINE( 303)										_x37 = (int)1;
            									}
            									else {
HXLINE( 303)										_x37 = value41;
            									}
            								}
HXDLIN( 303)								_x33 = ::Math_obj::asin(_x37);
HXDLIN( 303)								Float _y37 = (this->y * this->w);
HXDLIN( 303)								Float _y38 = ((int)2 * (_y37 - (this->z * this->x)));
HXDLIN( 303)								_y33 = ::Math_obj::atan2(_y38,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 303)								Float _z38 = (this->z * this->w);
HXDLIN( 303)								Float _z39 = ((int)2 * (_z38 - (this->x * this->y)));
HXDLIN( 303)								_z33 = ::Math_obj::atan2(_z39,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 303)								if ((order3 == (int)3)) {
HXLINE( 303)									Float _x38 = (this->x * this->w);
HXDLIN( 303)									Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN( 303)									_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 303)									Float value42 = (this->y * this->w);
HXDLIN( 303)									Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 303)									Float _y39;
HXDLIN( 303)									if ((value43 < (int)-1)) {
HXLINE( 303)										_y39 = (int)-1;
            									}
            									else {
HXLINE( 303)										if ((value43 > (int)1)) {
HXLINE( 303)											_y39 = (int)1;
            										}
            										else {
HXLINE( 303)											_y39 = value43;
            										}
            									}
HXDLIN( 303)									_y33 = ::Math_obj::asin(_y39);
HXDLIN( 303)									Float _z40 = (this->x * this->y);
HXDLIN( 303)									Float _z41 = ((int)2 * (_z40 + (this->z * this->w)));
HXDLIN( 303)									_z33 = ::Math_obj::atan2(_z41,(((sqw3 + sqx3) - sqy3) - sqz3));
            								}
            								else {
HXLINE( 303)									if ((order3 == (int)4)) {
HXLINE( 303)										Float _x40 = (this->x * this->w);
HXDLIN( 303)										Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN( 303)										_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 303)										Float _y40 = (this->y * this->w);
HXDLIN( 303)										Float _y41 = ((int)2 * (_y40 - (this->x * this->z)));
HXDLIN( 303)										_y33 = ::Math_obj::atan2(_y41,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 303)										Float value44 = (this->x * this->y);
HXDLIN( 303)										Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 303)										Float _z42;
HXDLIN( 303)										if ((value45 < (int)-1)) {
HXLINE( 303)											_z42 = (int)-1;
            										}
            										else {
HXLINE( 303)											if ((value45 > (int)1)) {
HXLINE( 303)												_z42 = (int)1;
            											}
            											else {
HXLINE( 303)												_z42 = value45;
            											}
            										}
HXDLIN( 303)										_z33 = ::Math_obj::asin(_z42);
            									}
            									else {
HXLINE( 303)										if ((order3 == (int)5)) {
HXLINE( 303)											Float _x42 = (this->x * this->w);
HXDLIN( 303)											Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN( 303)											_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 303)											Float _y42 = (this->x * this->z);
HXDLIN( 303)											Float _y43 = ((int)2 * (_y42 + (this->y * this->w)));
HXDLIN( 303)											_y33 = ::Math_obj::atan2(_y43,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 303)											Float value46 = (this->z * this->w);
HXDLIN( 303)											Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 303)											Float _z43;
HXDLIN( 303)											if ((value47 < (int)-1)) {
HXLINE( 303)												_z43 = (int)-1;
            											}
            											else {
HXLINE( 303)												if ((value47 > (int)1)) {
HXLINE( 303)													_z43 = (int)1;
            												}
            												else {
HXLINE( 303)													_z43 = value47;
            												}
            											}
HXDLIN( 303)											_z33 = ::Math_obj::asin(_z43);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 303)					{
HXLINE( 303)						bool prev3 = _this3->ignore_listeners;
HXDLIN( 303)						_this3->ignore_listeners = true;
HXDLIN( 303)						{
HXLINE( 303)							_this3->x = _x33;
HXDLIN( 303)							if (!(_this3->_construct)) {
HXLINE( 303)								bool _hx_tmp29;
HXDLIN( 303)								if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 303)									_hx_tmp29 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE( 303)									_hx_tmp29 = false;
            								}
HXDLIN( 303)								if (_hx_tmp29) {
HXLINE( 303)									_this3->listen_x(_x33);
            								}
            							}
            						}
HXDLIN( 303)						{
HXLINE( 303)							_this3->y = _y33;
HXDLIN( 303)							if (!(_this3->_construct)) {
HXLINE( 303)								bool _hx_tmp30;
HXDLIN( 303)								if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 303)									_hx_tmp30 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE( 303)									_hx_tmp30 = false;
            								}
HXDLIN( 303)								if (_hx_tmp30) {
HXLINE( 303)									_this3->listen_y(_y33);
            								}
            							}
            						}
HXDLIN( 303)						{
HXLINE( 303)							_this3->z = _z33;
HXDLIN( 303)							if (!(_this3->_construct)) {
HXLINE( 303)								bool _hx_tmp31;
HXDLIN( 303)								if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 303)									_hx_tmp31 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE( 303)									_hx_tmp31 = false;
            								}
HXDLIN( 303)								if (_hx_tmp31) {
HXLINE( 303)									_this3->listen_z(_z33);
            								}
            							}
            						}
HXDLIN( 303)						_this3->ignore_listeners = prev3;
HXDLIN( 303)						bool _hx_tmp32;
HXDLIN( 303)						if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 303)							_hx_tmp32 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 303)							_hx_tmp32 = false;
            						}
HXDLIN( 303)						if (_hx_tmp32) {
HXLINE( 303)							_this3->listen_x(_this3->x);
            						}
HXDLIN( 303)						bool _hx_tmp33;
HXDLIN( 303)						if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 303)							_hx_tmp33 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 303)							_hx_tmp33 = false;
            						}
HXDLIN( 303)						if (_hx_tmp33) {
HXLINE( 303)							_this3->listen_y(_this3->y);
            						}
HXDLIN( 303)						bool _hx_tmp34;
HXDLIN( 303)						if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 303)							_hx_tmp34 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 303)							_hx_tmp34 = false;
            						}
HXDLIN( 303)						if (_hx_tmp34) {
HXLINE( 303)							_this3->listen_z(_this3->z);
            						}
            					}
            				}
HXDLIN( 303)				bool _hx_tmp35;
HXDLIN( 303)				if (hx::IsNotNull( this->listen_w )) {
HXLINE( 303)					_hx_tmp35 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 303)					_hx_tmp35 = false;
            				}
HXDLIN( 303)				if (_hx_tmp35) {
HXLINE( 303)					this->listen_w(this->w);
            				}
            			}
            		}
HXLINE( 305)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,addQuaternions,return )

 ::phoenix::Quaternion Quaternion_obj::multiplyScalar(Float _scalar){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_309_multiplyScalar)
HXLINE( 311)		{
HXLINE( 311)			 ::phoenix::Quaternion _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 311)			{
HXLINE( 311)				_g->x = (_g->x * _scalar);
HXDLIN( 311)				if (!(_g->_construct)) {
HXLINE( 311)					bool _hx_tmp;
HXDLIN( 311)					bool _hx_tmp1;
HXDLIN( 311)					if (hx::IsNotNull( _g->euler )) {
HXLINE( 311)						_hx_tmp1 = _g->ignore_euler;
            					}
            					else {
HXLINE( 311)						_hx_tmp1 = true;
            					}
HXDLIN( 311)					if (!(_hx_tmp1)) {
HXLINE( 311)						_hx_tmp = _g->_construct;
            					}
            					else {
HXLINE( 311)						_hx_tmp = true;
            					}
HXDLIN( 311)					if (!(_hx_tmp)) {
HXLINE( 311)						 ::phoenix::Vector _this = _g->euler;
HXDLIN( 311)						int order = (int)0;
HXDLIN( 311)						Float sqx = (_g->x * _g->x);
HXDLIN( 311)						Float sqy = (_g->y * _g->y);
HXDLIN( 311)						Float sqz = (_g->z * _g->z);
HXDLIN( 311)						Float sqw = (_g->w * _g->w);
HXDLIN( 311)						Float _x = _this->x;
HXDLIN( 311)						Float _y = _this->y;
HXDLIN( 311)						Float _z = _this->z;
HXDLIN( 311)						if ((order == (int)0)) {
HXLINE( 311)							Float _x1 = (_g->x * _g->w);
HXDLIN( 311)							Float _x2 = ((int)2 * (_x1 - (_g->y * _g->z)));
HXDLIN( 311)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 311)							Float value = (_g->x * _g->z);
HXDLIN( 311)							Float value1 = ((int)2 * (value + (_g->y * _g->w)));
HXDLIN( 311)							Float _y1;
HXDLIN( 311)							if ((value1 < (int)-1)) {
HXLINE( 311)								_y1 = (int)-1;
            							}
            							else {
HXLINE( 311)								if ((value1 > (int)1)) {
HXLINE( 311)									_y1 = (int)1;
            								}
            								else {
HXLINE( 311)									_y1 = value1;
            								}
            							}
HXDLIN( 311)							_y = ::Math_obj::asin(_y1);
HXDLIN( 311)							Float _z1 = (_g->z * _g->w);
HXDLIN( 311)							Float _z2 = ((int)2 * (_z1 - (_g->x * _g->y)));
HXDLIN( 311)							_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 311)							if ((order == (int)1)) {
HXLINE( 311)								Float value2 = (_g->x * _g->w);
HXDLIN( 311)								Float value3 = ((int)2 * (value2 - (_g->y * _g->z)));
HXDLIN( 311)								Float _x3;
HXDLIN( 311)								if ((value3 < (int)-1)) {
HXLINE( 311)									_x3 = (int)-1;
            								}
            								else {
HXLINE( 311)									if ((value3 > (int)1)) {
HXLINE( 311)										_x3 = (int)1;
            									}
            									else {
HXLINE( 311)										_x3 = value3;
            									}
            								}
HXDLIN( 311)								_x = ::Math_obj::asin(_x3);
HXDLIN( 311)								Float _y2 = (_g->x * _g->z);
HXDLIN( 311)								Float _y3 = ((int)2 * (_y2 + (_g->y * _g->w)));
HXDLIN( 311)								_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 311)								Float _z3 = (_g->x * _g->y);
HXDLIN( 311)								Float _z4 = ((int)2 * (_z3 + (_g->z * _g->w)));
HXDLIN( 311)								_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 311)								if ((order == (int)2)) {
HXLINE( 311)									Float value4 = (_g->x * _g->w);
HXDLIN( 311)									Float value5 = ((int)2 * (value4 + (_g->y * _g->z)));
HXDLIN( 311)									Float _x4;
HXDLIN( 311)									if ((value5 < (int)-1)) {
HXLINE( 311)										_x4 = (int)-1;
            									}
            									else {
HXLINE( 311)										if ((value5 > (int)1)) {
HXLINE( 311)											_x4 = (int)1;
            										}
            										else {
HXLINE( 311)											_x4 = value5;
            										}
            									}
HXDLIN( 311)									_x = ::Math_obj::asin(_x4);
HXDLIN( 311)									Float _y4 = (_g->y * _g->w);
HXDLIN( 311)									Float _y5 = ((int)2 * (_y4 - (_g->z * _g->x)));
HXDLIN( 311)									_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 311)									Float _z5 = (_g->z * _g->w);
HXDLIN( 311)									Float _z6 = ((int)2 * (_z5 - (_g->x * _g->y)));
HXDLIN( 311)									_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 311)									if ((order == (int)3)) {
HXLINE( 311)										Float _x5 = (_g->x * _g->w);
HXDLIN( 311)										Float _x6 = ((int)2 * (_x5 + (_g->z * _g->y)));
HXDLIN( 311)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 311)										Float value6 = (_g->y * _g->w);
HXDLIN( 311)										Float value7 = ((int)2 * (value6 - (_g->x * _g->z)));
HXDLIN( 311)										Float _y6;
HXDLIN( 311)										if ((value7 < (int)-1)) {
HXLINE( 311)											_y6 = (int)-1;
            										}
            										else {
HXLINE( 311)											if ((value7 > (int)1)) {
HXLINE( 311)												_y6 = (int)1;
            											}
            											else {
HXLINE( 311)												_y6 = value7;
            											}
            										}
HXDLIN( 311)										_y = ::Math_obj::asin(_y6);
HXDLIN( 311)										Float _z7 = (_g->x * _g->y);
HXDLIN( 311)										Float _z8 = ((int)2 * (_z7 + (_g->z * _g->w)));
HXDLIN( 311)										_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 311)										if ((order == (int)4)) {
HXLINE( 311)											Float _x7 = (_g->x * _g->w);
HXDLIN( 311)											Float _x8 = ((int)2 * (_x7 - (_g->z * _g->y)));
HXDLIN( 311)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 311)											Float _y7 = (_g->y * _g->w);
HXDLIN( 311)											Float _y8 = ((int)2 * (_y7 - (_g->x * _g->z)));
HXDLIN( 311)											_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 311)											Float value8 = (_g->x * _g->y);
HXDLIN( 311)											Float value9 = ((int)2 * (value8 + (_g->z * _g->w)));
HXDLIN( 311)											Float _z9;
HXDLIN( 311)											if ((value9 < (int)-1)) {
HXLINE( 311)												_z9 = (int)-1;
            											}
            											else {
HXLINE( 311)												if ((value9 > (int)1)) {
HXLINE( 311)													_z9 = (int)1;
            												}
            												else {
HXLINE( 311)													_z9 = value9;
            												}
            											}
HXDLIN( 311)											_z = ::Math_obj::asin(_z9);
            										}
            										else {
HXLINE( 311)											if ((order == (int)5)) {
HXLINE( 311)												Float _x9 = (_g->x * _g->w);
HXDLIN( 311)												Float _x10 = ((int)2 * (_x9 + (_g->y * _g->z)));
HXDLIN( 311)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 311)												Float _y9 = (_g->x * _g->z);
HXDLIN( 311)												Float _y10 = ((int)2 * (_y9 + (_g->y * _g->w)));
HXDLIN( 311)												_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 311)												Float value10 = (_g->z * _g->w);
HXDLIN( 311)												Float value11 = ((int)2 * (value10 - (_g->x * _g->y)));
HXDLIN( 311)												Float _z10;
HXDLIN( 311)												if ((value11 < (int)-1)) {
HXLINE( 311)													_z10 = (int)-1;
            												}
            												else {
HXLINE( 311)													if ((value11 > (int)1)) {
HXLINE( 311)														_z10 = (int)1;
            													}
            													else {
HXLINE( 311)														_z10 = value11;
            													}
            												}
HXDLIN( 311)												_z = ::Math_obj::asin(_z10);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 311)						{
HXLINE( 311)							bool prev = _this->ignore_listeners;
HXDLIN( 311)							_this->ignore_listeners = true;
HXDLIN( 311)							{
HXLINE( 311)								_this->x = _x;
HXDLIN( 311)								if (!(_this->_construct)) {
HXLINE( 311)									bool _hx_tmp2;
HXDLIN( 311)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 311)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 311)										_hx_tmp2 = false;
            									}
HXDLIN( 311)									if (_hx_tmp2) {
HXLINE( 311)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN( 311)							{
HXLINE( 311)								_this->y = _y;
HXDLIN( 311)								if (!(_this->_construct)) {
HXLINE( 311)									bool _hx_tmp3;
HXDLIN( 311)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 311)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 311)										_hx_tmp3 = false;
            									}
HXDLIN( 311)									if (_hx_tmp3) {
HXLINE( 311)										_this->listen_y(_y);
            									}
            								}
            							}
HXDLIN( 311)							{
HXLINE( 311)								_this->z = _z;
HXDLIN( 311)								if (!(_this->_construct)) {
HXLINE( 311)									bool _hx_tmp4;
HXDLIN( 311)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 311)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 311)										_hx_tmp4 = false;
            									}
HXDLIN( 311)									if (_hx_tmp4) {
HXLINE( 311)										_this->listen_z(_z);
            									}
            								}
            							}
HXDLIN( 311)							_this->ignore_listeners = prev;
HXDLIN( 311)							bool _hx_tmp5;
HXDLIN( 311)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 311)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 311)								_hx_tmp5 = false;
            							}
HXDLIN( 311)							if (_hx_tmp5) {
HXLINE( 311)								_this->listen_x(_this->x);
            							}
HXDLIN( 311)							bool _hx_tmp6;
HXDLIN( 311)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 311)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 311)								_hx_tmp6 = false;
            							}
HXDLIN( 311)							if (_hx_tmp6) {
HXLINE( 311)								_this->listen_y(_this->y);
            							}
HXDLIN( 311)							bool _hx_tmp7;
HXDLIN( 311)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 311)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 311)								_hx_tmp7 = false;
            							}
HXDLIN( 311)							if (_hx_tmp7) {
HXLINE( 311)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 311)					bool _hx_tmp8;
HXDLIN( 311)					if (hx::IsNotNull( _g->listen_x )) {
HXLINE( 311)						_hx_tmp8 = !(_g->ignore_listeners);
            					}
            					else {
HXLINE( 311)						_hx_tmp8 = false;
            					}
HXDLIN( 311)					if (_hx_tmp8) {
HXLINE( 311)						_g->listen_x(_g->x);
            					}
            				}
            			}
            		}
HXLINE( 312)		{
HXLINE( 312)			 ::phoenix::Quaternion _g1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 312)			{
HXLINE( 312)				_g1->y = (_g1->y * _scalar);
HXDLIN( 312)				if (!(_g1->_construct)) {
HXLINE( 312)					bool _hx_tmp9;
HXDLIN( 312)					bool _hx_tmp10;
HXDLIN( 312)					if (hx::IsNotNull( _g1->euler )) {
HXLINE( 312)						_hx_tmp10 = _g1->ignore_euler;
            					}
            					else {
HXLINE( 312)						_hx_tmp10 = true;
            					}
HXDLIN( 312)					if (!(_hx_tmp10)) {
HXLINE( 312)						_hx_tmp9 = _g1->_construct;
            					}
            					else {
HXLINE( 312)						_hx_tmp9 = true;
            					}
HXDLIN( 312)					if (!(_hx_tmp9)) {
HXLINE( 312)						 ::phoenix::Vector _this1 = _g1->euler;
HXDLIN( 312)						int order1 = (int)0;
HXDLIN( 312)						Float sqx1 = (_g1->x * _g1->x);
HXDLIN( 312)						Float sqy1 = (_g1->y * _g1->y);
HXDLIN( 312)						Float sqz1 = (_g1->z * _g1->z);
HXDLIN( 312)						Float sqw1 = (_g1->w * _g1->w);
HXDLIN( 312)						Float _x11 = _this1->x;
HXDLIN( 312)						Float _y11 = _this1->y;
HXDLIN( 312)						Float _z11 = _this1->z;
HXDLIN( 312)						if ((order1 == (int)0)) {
HXLINE( 312)							Float _x12 = (_g1->x * _g1->w);
HXDLIN( 312)							Float _x13 = ((int)2 * (_x12 - (_g1->y * _g1->z)));
HXDLIN( 312)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 312)							Float value12 = (_g1->x * _g1->z);
HXDLIN( 312)							Float value13 = ((int)2 * (value12 + (_g1->y * _g1->w)));
HXDLIN( 312)							Float _y12;
HXDLIN( 312)							if ((value13 < (int)-1)) {
HXLINE( 312)								_y12 = (int)-1;
            							}
            							else {
HXLINE( 312)								if ((value13 > (int)1)) {
HXLINE( 312)									_y12 = (int)1;
            								}
            								else {
HXLINE( 312)									_y12 = value13;
            								}
            							}
HXDLIN( 312)							_y11 = ::Math_obj::asin(_y12);
HXDLIN( 312)							Float _z12 = (_g1->z * _g1->w);
HXDLIN( 312)							Float _z13 = ((int)2 * (_z12 - (_g1->x * _g1->y)));
HXDLIN( 312)							_z11 = ::Math_obj::atan2(_z13,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 312)							if ((order1 == (int)1)) {
HXLINE( 312)								Float value14 = (_g1->x * _g1->w);
HXDLIN( 312)								Float value15 = ((int)2 * (value14 - (_g1->y * _g1->z)));
HXDLIN( 312)								Float _x14;
HXDLIN( 312)								if ((value15 < (int)-1)) {
HXLINE( 312)									_x14 = (int)-1;
            								}
            								else {
HXLINE( 312)									if ((value15 > (int)1)) {
HXLINE( 312)										_x14 = (int)1;
            									}
            									else {
HXLINE( 312)										_x14 = value15;
            									}
            								}
HXDLIN( 312)								_x11 = ::Math_obj::asin(_x14);
HXDLIN( 312)								Float _y13 = (_g1->x * _g1->z);
HXDLIN( 312)								Float _y14 = ((int)2 * (_y13 + (_g1->y * _g1->w)));
HXDLIN( 312)								_y11 = ::Math_obj::atan2(_y14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 312)								Float _z14 = (_g1->x * _g1->y);
HXDLIN( 312)								Float _z15 = ((int)2 * (_z14 + (_g1->z * _g1->w)));
HXDLIN( 312)								_z11 = ::Math_obj::atan2(_z15,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 312)								if ((order1 == (int)2)) {
HXLINE( 312)									Float value16 = (_g1->x * _g1->w);
HXDLIN( 312)									Float value17 = ((int)2 * (value16 + (_g1->y * _g1->z)));
HXDLIN( 312)									Float _x15;
HXDLIN( 312)									if ((value17 < (int)-1)) {
HXLINE( 312)										_x15 = (int)-1;
            									}
            									else {
HXLINE( 312)										if ((value17 > (int)1)) {
HXLINE( 312)											_x15 = (int)1;
            										}
            										else {
HXLINE( 312)											_x15 = value17;
            										}
            									}
HXDLIN( 312)									_x11 = ::Math_obj::asin(_x15);
HXDLIN( 312)									Float _y15 = (_g1->y * _g1->w);
HXDLIN( 312)									Float _y16 = ((int)2 * (_y15 - (_g1->z * _g1->x)));
HXDLIN( 312)									_y11 = ::Math_obj::atan2(_y16,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 312)									Float _z16 = (_g1->z * _g1->w);
HXDLIN( 312)									Float _z17 = ((int)2 * (_z16 - (_g1->x * _g1->y)));
HXDLIN( 312)									_z11 = ::Math_obj::atan2(_z17,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 312)									if ((order1 == (int)3)) {
HXLINE( 312)										Float _x16 = (_g1->x * _g1->w);
HXDLIN( 312)										Float _x17 = ((int)2 * (_x16 + (_g1->z * _g1->y)));
HXDLIN( 312)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 312)										Float value18 = (_g1->y * _g1->w);
HXDLIN( 312)										Float value19 = ((int)2 * (value18 - (_g1->x * _g1->z)));
HXDLIN( 312)										Float _y17;
HXDLIN( 312)										if ((value19 < (int)-1)) {
HXLINE( 312)											_y17 = (int)-1;
            										}
            										else {
HXLINE( 312)											if ((value19 > (int)1)) {
HXLINE( 312)												_y17 = (int)1;
            											}
            											else {
HXLINE( 312)												_y17 = value19;
            											}
            										}
HXDLIN( 312)										_y11 = ::Math_obj::asin(_y17);
HXDLIN( 312)										Float _z18 = (_g1->x * _g1->y);
HXDLIN( 312)										Float _z19 = ((int)2 * (_z18 + (_g1->z * _g1->w)));
HXDLIN( 312)										_z11 = ::Math_obj::atan2(_z19,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 312)										if ((order1 == (int)4)) {
HXLINE( 312)											Float _x18 = (_g1->x * _g1->w);
HXDLIN( 312)											Float _x19 = ((int)2 * (_x18 - (_g1->z * _g1->y)));
HXDLIN( 312)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 312)											Float _y18 = (_g1->y * _g1->w);
HXDLIN( 312)											Float _y19 = ((int)2 * (_y18 - (_g1->x * _g1->z)));
HXDLIN( 312)											_y11 = ::Math_obj::atan2(_y19,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 312)											Float value20 = (_g1->x * _g1->y);
HXDLIN( 312)											Float value21 = ((int)2 * (value20 + (_g1->z * _g1->w)));
HXDLIN( 312)											Float _z20;
HXDLIN( 312)											if ((value21 < (int)-1)) {
HXLINE( 312)												_z20 = (int)-1;
            											}
            											else {
HXLINE( 312)												if ((value21 > (int)1)) {
HXLINE( 312)													_z20 = (int)1;
            												}
            												else {
HXLINE( 312)													_z20 = value21;
            												}
            											}
HXDLIN( 312)											_z11 = ::Math_obj::asin(_z20);
            										}
            										else {
HXLINE( 312)											if ((order1 == (int)5)) {
HXLINE( 312)												Float _x20 = (_g1->x * _g1->w);
HXDLIN( 312)												Float _x21 = ((int)2 * (_x20 + (_g1->y * _g1->z)));
HXDLIN( 312)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 312)												Float _y20 = (_g1->x * _g1->z);
HXDLIN( 312)												Float _y21 = ((int)2 * (_y20 + (_g1->y * _g1->w)));
HXDLIN( 312)												_y11 = ::Math_obj::atan2(_y21,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 312)												Float value22 = (_g1->z * _g1->w);
HXDLIN( 312)												Float value23 = ((int)2 * (value22 - (_g1->x * _g1->y)));
HXDLIN( 312)												Float _z21;
HXDLIN( 312)												if ((value23 < (int)-1)) {
HXLINE( 312)													_z21 = (int)-1;
            												}
            												else {
HXLINE( 312)													if ((value23 > (int)1)) {
HXLINE( 312)														_z21 = (int)1;
            													}
            													else {
HXLINE( 312)														_z21 = value23;
            													}
            												}
HXDLIN( 312)												_z11 = ::Math_obj::asin(_z21);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 312)						{
HXLINE( 312)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 312)							_this1->ignore_listeners = true;
HXDLIN( 312)							{
HXLINE( 312)								_this1->x = _x11;
HXDLIN( 312)								if (!(_this1->_construct)) {
HXLINE( 312)									bool _hx_tmp11;
HXDLIN( 312)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 312)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 312)										_hx_tmp11 = false;
            									}
HXDLIN( 312)									if (_hx_tmp11) {
HXLINE( 312)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN( 312)							{
HXLINE( 312)								_this1->y = _y11;
HXDLIN( 312)								if (!(_this1->_construct)) {
HXLINE( 312)									bool _hx_tmp12;
HXDLIN( 312)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 312)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 312)										_hx_tmp12 = false;
            									}
HXDLIN( 312)									if (_hx_tmp12) {
HXLINE( 312)										_this1->listen_y(_y11);
            									}
            								}
            							}
HXDLIN( 312)							{
HXLINE( 312)								_this1->z = _z11;
HXDLIN( 312)								if (!(_this1->_construct)) {
HXLINE( 312)									bool _hx_tmp13;
HXDLIN( 312)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 312)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 312)										_hx_tmp13 = false;
            									}
HXDLIN( 312)									if (_hx_tmp13) {
HXLINE( 312)										_this1->listen_z(_z11);
            									}
            								}
            							}
HXDLIN( 312)							_this1->ignore_listeners = prev1;
HXDLIN( 312)							bool _hx_tmp14;
HXDLIN( 312)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 312)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 312)								_hx_tmp14 = false;
            							}
HXDLIN( 312)							if (_hx_tmp14) {
HXLINE( 312)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 312)							bool _hx_tmp15;
HXDLIN( 312)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 312)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 312)								_hx_tmp15 = false;
            							}
HXDLIN( 312)							if (_hx_tmp15) {
HXLINE( 312)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 312)							bool _hx_tmp16;
HXDLIN( 312)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 312)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 312)								_hx_tmp16 = false;
            							}
HXDLIN( 312)							if (_hx_tmp16) {
HXLINE( 312)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 312)					bool _hx_tmp17;
HXDLIN( 312)					if (hx::IsNotNull( _g1->listen_y )) {
HXLINE( 312)						_hx_tmp17 = !(_g1->ignore_listeners);
            					}
            					else {
HXLINE( 312)						_hx_tmp17 = false;
            					}
HXDLIN( 312)					if (_hx_tmp17) {
HXLINE( 312)						_g1->listen_y(_g1->y);
            					}
            				}
            			}
            		}
HXLINE( 313)		{
HXLINE( 313)			 ::phoenix::Quaternion _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 313)			{
HXLINE( 313)				_g2->z = (_g2->z * _scalar);
HXDLIN( 313)				if (!(_g2->_construct)) {
HXLINE( 313)					bool _hx_tmp18;
HXDLIN( 313)					bool _hx_tmp19;
HXDLIN( 313)					if (hx::IsNotNull( _g2->euler )) {
HXLINE( 313)						_hx_tmp19 = _g2->ignore_euler;
            					}
            					else {
HXLINE( 313)						_hx_tmp19 = true;
            					}
HXDLIN( 313)					if (!(_hx_tmp19)) {
HXLINE( 313)						_hx_tmp18 = _g2->_construct;
            					}
            					else {
HXLINE( 313)						_hx_tmp18 = true;
            					}
HXDLIN( 313)					if (!(_hx_tmp18)) {
HXLINE( 313)						 ::phoenix::Vector _this2 = _g2->euler;
HXDLIN( 313)						int order2 = (int)0;
HXDLIN( 313)						Float sqx2 = (_g2->x * _g2->x);
HXDLIN( 313)						Float sqy2 = (_g2->y * _g2->y);
HXDLIN( 313)						Float sqz2 = (_g2->z * _g2->z);
HXDLIN( 313)						Float sqw2 = (_g2->w * _g2->w);
HXDLIN( 313)						Float _x22 = _this2->x;
HXDLIN( 313)						Float _y22 = _this2->y;
HXDLIN( 313)						Float _z22 = _this2->z;
HXDLIN( 313)						if ((order2 == (int)0)) {
HXLINE( 313)							Float _x23 = (_g2->x * _g2->w);
HXDLIN( 313)							Float _x24 = ((int)2 * (_x23 - (_g2->y * _g2->z)));
HXDLIN( 313)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 313)							Float value24 = (_g2->x * _g2->z);
HXDLIN( 313)							Float value25 = ((int)2 * (value24 + (_g2->y * _g2->w)));
HXDLIN( 313)							Float _y23;
HXDLIN( 313)							if ((value25 < (int)-1)) {
HXLINE( 313)								_y23 = (int)-1;
            							}
            							else {
HXLINE( 313)								if ((value25 > (int)1)) {
HXLINE( 313)									_y23 = (int)1;
            								}
            								else {
HXLINE( 313)									_y23 = value25;
            								}
            							}
HXDLIN( 313)							_y22 = ::Math_obj::asin(_y23);
HXDLIN( 313)							Float _z23 = (_g2->z * _g2->w);
HXDLIN( 313)							Float _z24 = ((int)2 * (_z23 - (_g2->x * _g2->y)));
HXDLIN( 313)							_z22 = ::Math_obj::atan2(_z24,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 313)							if ((order2 == (int)1)) {
HXLINE( 313)								Float value26 = (_g2->x * _g2->w);
HXDLIN( 313)								Float value27 = ((int)2 * (value26 - (_g2->y * _g2->z)));
HXDLIN( 313)								Float _x25;
HXDLIN( 313)								if ((value27 < (int)-1)) {
HXLINE( 313)									_x25 = (int)-1;
            								}
            								else {
HXLINE( 313)									if ((value27 > (int)1)) {
HXLINE( 313)										_x25 = (int)1;
            									}
            									else {
HXLINE( 313)										_x25 = value27;
            									}
            								}
HXDLIN( 313)								_x22 = ::Math_obj::asin(_x25);
HXDLIN( 313)								Float _y24 = (_g2->x * _g2->z);
HXDLIN( 313)								Float _y25 = ((int)2 * (_y24 + (_g2->y * _g2->w)));
HXDLIN( 313)								_y22 = ::Math_obj::atan2(_y25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 313)								Float _z25 = (_g2->x * _g2->y);
HXDLIN( 313)								Float _z26 = ((int)2 * (_z25 + (_g2->z * _g2->w)));
HXDLIN( 313)								_z22 = ::Math_obj::atan2(_z26,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 313)								if ((order2 == (int)2)) {
HXLINE( 313)									Float value28 = (_g2->x * _g2->w);
HXDLIN( 313)									Float value29 = ((int)2 * (value28 + (_g2->y * _g2->z)));
HXDLIN( 313)									Float _x26;
HXDLIN( 313)									if ((value29 < (int)-1)) {
HXLINE( 313)										_x26 = (int)-1;
            									}
            									else {
HXLINE( 313)										if ((value29 > (int)1)) {
HXLINE( 313)											_x26 = (int)1;
            										}
            										else {
HXLINE( 313)											_x26 = value29;
            										}
            									}
HXDLIN( 313)									_x22 = ::Math_obj::asin(_x26);
HXDLIN( 313)									Float _y26 = (_g2->y * _g2->w);
HXDLIN( 313)									Float _y27 = ((int)2 * (_y26 - (_g2->z * _g2->x)));
HXDLIN( 313)									_y22 = ::Math_obj::atan2(_y27,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 313)									Float _z27 = (_g2->z * _g2->w);
HXDLIN( 313)									Float _z28 = ((int)2 * (_z27 - (_g2->x * _g2->y)));
HXDLIN( 313)									_z22 = ::Math_obj::atan2(_z28,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 313)									if ((order2 == (int)3)) {
HXLINE( 313)										Float _x27 = (_g2->x * _g2->w);
HXDLIN( 313)										Float _x28 = ((int)2 * (_x27 + (_g2->z * _g2->y)));
HXDLIN( 313)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 313)										Float value30 = (_g2->y * _g2->w);
HXDLIN( 313)										Float value31 = ((int)2 * (value30 - (_g2->x * _g2->z)));
HXDLIN( 313)										Float _y28;
HXDLIN( 313)										if ((value31 < (int)-1)) {
HXLINE( 313)											_y28 = (int)-1;
            										}
            										else {
HXLINE( 313)											if ((value31 > (int)1)) {
HXLINE( 313)												_y28 = (int)1;
            											}
            											else {
HXLINE( 313)												_y28 = value31;
            											}
            										}
HXDLIN( 313)										_y22 = ::Math_obj::asin(_y28);
HXDLIN( 313)										Float _z29 = (_g2->x * _g2->y);
HXDLIN( 313)										Float _z30 = ((int)2 * (_z29 + (_g2->z * _g2->w)));
HXDLIN( 313)										_z22 = ::Math_obj::atan2(_z30,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 313)										if ((order2 == (int)4)) {
HXLINE( 313)											Float _x29 = (_g2->x * _g2->w);
HXDLIN( 313)											Float _x30 = ((int)2 * (_x29 - (_g2->z * _g2->y)));
HXDLIN( 313)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 313)											Float _y29 = (_g2->y * _g2->w);
HXDLIN( 313)											Float _y30 = ((int)2 * (_y29 - (_g2->x * _g2->z)));
HXDLIN( 313)											_y22 = ::Math_obj::atan2(_y30,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 313)											Float value32 = (_g2->x * _g2->y);
HXDLIN( 313)											Float value33 = ((int)2 * (value32 + (_g2->z * _g2->w)));
HXDLIN( 313)											Float _z31;
HXDLIN( 313)											if ((value33 < (int)-1)) {
HXLINE( 313)												_z31 = (int)-1;
            											}
            											else {
HXLINE( 313)												if ((value33 > (int)1)) {
HXLINE( 313)													_z31 = (int)1;
            												}
            												else {
HXLINE( 313)													_z31 = value33;
            												}
            											}
HXDLIN( 313)											_z22 = ::Math_obj::asin(_z31);
            										}
            										else {
HXLINE( 313)											if ((order2 == (int)5)) {
HXLINE( 313)												Float _x31 = (_g2->x * _g2->w);
HXDLIN( 313)												Float _x32 = ((int)2 * (_x31 + (_g2->y * _g2->z)));
HXDLIN( 313)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 313)												Float _y31 = (_g2->x * _g2->z);
HXDLIN( 313)												Float _y32 = ((int)2 * (_y31 + (_g2->y * _g2->w)));
HXDLIN( 313)												_y22 = ::Math_obj::atan2(_y32,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 313)												Float value34 = (_g2->z * _g2->w);
HXDLIN( 313)												Float value35 = ((int)2 * (value34 - (_g2->x * _g2->y)));
HXDLIN( 313)												Float _z32;
HXDLIN( 313)												if ((value35 < (int)-1)) {
HXLINE( 313)													_z32 = (int)-1;
            												}
            												else {
HXLINE( 313)													if ((value35 > (int)1)) {
HXLINE( 313)														_z32 = (int)1;
            													}
            													else {
HXLINE( 313)														_z32 = value35;
            													}
            												}
HXDLIN( 313)												_z22 = ::Math_obj::asin(_z32);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 313)						{
HXLINE( 313)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 313)							_this2->ignore_listeners = true;
HXDLIN( 313)							{
HXLINE( 313)								_this2->x = _x22;
HXDLIN( 313)								if (!(_this2->_construct)) {
HXLINE( 313)									bool _hx_tmp20;
HXDLIN( 313)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 313)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 313)										_hx_tmp20 = false;
            									}
HXDLIN( 313)									if (_hx_tmp20) {
HXLINE( 313)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN( 313)							{
HXLINE( 313)								_this2->y = _y22;
HXDLIN( 313)								if (!(_this2->_construct)) {
HXLINE( 313)									bool _hx_tmp21;
HXDLIN( 313)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 313)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 313)										_hx_tmp21 = false;
            									}
HXDLIN( 313)									if (_hx_tmp21) {
HXLINE( 313)										_this2->listen_y(_y22);
            									}
            								}
            							}
HXDLIN( 313)							{
HXLINE( 313)								_this2->z = _z22;
HXDLIN( 313)								if (!(_this2->_construct)) {
HXLINE( 313)									bool _hx_tmp22;
HXDLIN( 313)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 313)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 313)										_hx_tmp22 = false;
            									}
HXDLIN( 313)									if (_hx_tmp22) {
HXLINE( 313)										_this2->listen_z(_z22);
            									}
            								}
            							}
HXDLIN( 313)							_this2->ignore_listeners = prev2;
HXDLIN( 313)							bool _hx_tmp23;
HXDLIN( 313)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 313)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 313)								_hx_tmp23 = false;
            							}
HXDLIN( 313)							if (_hx_tmp23) {
HXLINE( 313)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 313)							bool _hx_tmp24;
HXDLIN( 313)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 313)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 313)								_hx_tmp24 = false;
            							}
HXDLIN( 313)							if (_hx_tmp24) {
HXLINE( 313)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 313)							bool _hx_tmp25;
HXDLIN( 313)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 313)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 313)								_hx_tmp25 = false;
            							}
HXDLIN( 313)							if (_hx_tmp25) {
HXLINE( 313)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 313)					bool _hx_tmp26;
HXDLIN( 313)					if (hx::IsNotNull( _g2->listen_z )) {
HXLINE( 313)						_hx_tmp26 = !(_g2->ignore_listeners);
            					}
            					else {
HXLINE( 313)						_hx_tmp26 = false;
            					}
HXDLIN( 313)					if (_hx_tmp26) {
HXLINE( 313)						_g2->listen_z(_g2->z);
            					}
            				}
            			}
            		}
HXLINE( 314)		{
HXLINE( 314)			 ::phoenix::Quaternion _g3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 314)			{
HXLINE( 314)				_g3->w = (_g3->w * _scalar);
HXDLIN( 314)				if (!(_g3->_construct)) {
HXLINE( 314)					bool _hx_tmp27;
HXDLIN( 314)					bool _hx_tmp28;
HXDLIN( 314)					if (hx::IsNotNull( _g3->euler )) {
HXLINE( 314)						_hx_tmp28 = _g3->ignore_euler;
            					}
            					else {
HXLINE( 314)						_hx_tmp28 = true;
            					}
HXDLIN( 314)					if (!(_hx_tmp28)) {
HXLINE( 314)						_hx_tmp27 = _g3->_construct;
            					}
            					else {
HXLINE( 314)						_hx_tmp27 = true;
            					}
HXDLIN( 314)					if (!(_hx_tmp27)) {
HXLINE( 314)						 ::phoenix::Vector _this3 = _g3->euler;
HXDLIN( 314)						int order3 = (int)0;
HXDLIN( 314)						Float sqx3 = (_g3->x * _g3->x);
HXDLIN( 314)						Float sqy3 = (_g3->y * _g3->y);
HXDLIN( 314)						Float sqz3 = (_g3->z * _g3->z);
HXDLIN( 314)						Float sqw3 = (_g3->w * _g3->w);
HXDLIN( 314)						Float _x33 = _this3->x;
HXDLIN( 314)						Float _y33 = _this3->y;
HXDLIN( 314)						Float _z33 = _this3->z;
HXDLIN( 314)						if ((order3 == (int)0)) {
HXLINE( 314)							Float _x34 = (_g3->x * _g3->w);
HXDLIN( 314)							Float _x35 = ((int)2 * (_x34 - (_g3->y * _g3->z)));
HXDLIN( 314)							_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 314)							Float value36 = (_g3->x * _g3->z);
HXDLIN( 314)							Float value37 = ((int)2 * (value36 + (_g3->y * _g3->w)));
HXDLIN( 314)							Float _y34;
HXDLIN( 314)							if ((value37 < (int)-1)) {
HXLINE( 314)								_y34 = (int)-1;
            							}
            							else {
HXLINE( 314)								if ((value37 > (int)1)) {
HXLINE( 314)									_y34 = (int)1;
            								}
            								else {
HXLINE( 314)									_y34 = value37;
            								}
            							}
HXDLIN( 314)							_y33 = ::Math_obj::asin(_y34);
HXDLIN( 314)							Float _z34 = (_g3->z * _g3->w);
HXDLIN( 314)							Float _z35 = ((int)2 * (_z34 - (_g3->x * _g3->y)));
HXDLIN( 314)							_z33 = ::Math_obj::atan2(_z35,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 314)							if ((order3 == (int)1)) {
HXLINE( 314)								Float value38 = (_g3->x * _g3->w);
HXDLIN( 314)								Float value39 = ((int)2 * (value38 - (_g3->y * _g3->z)));
HXDLIN( 314)								Float _x36;
HXDLIN( 314)								if ((value39 < (int)-1)) {
HXLINE( 314)									_x36 = (int)-1;
            								}
            								else {
HXLINE( 314)									if ((value39 > (int)1)) {
HXLINE( 314)										_x36 = (int)1;
            									}
            									else {
HXLINE( 314)										_x36 = value39;
            									}
            								}
HXDLIN( 314)								_x33 = ::Math_obj::asin(_x36);
HXDLIN( 314)								Float _y35 = (_g3->x * _g3->z);
HXDLIN( 314)								Float _y36 = ((int)2 * (_y35 + (_g3->y * _g3->w)));
HXDLIN( 314)								_y33 = ::Math_obj::atan2(_y36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 314)								Float _z36 = (_g3->x * _g3->y);
HXDLIN( 314)								Float _z37 = ((int)2 * (_z36 + (_g3->z * _g3->w)));
HXDLIN( 314)								_z33 = ::Math_obj::atan2(_z37,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 314)								if ((order3 == (int)2)) {
HXLINE( 314)									Float value40 = (_g3->x * _g3->w);
HXDLIN( 314)									Float value41 = ((int)2 * (value40 + (_g3->y * _g3->z)));
HXDLIN( 314)									Float _x37;
HXDLIN( 314)									if ((value41 < (int)-1)) {
HXLINE( 314)										_x37 = (int)-1;
            									}
            									else {
HXLINE( 314)										if ((value41 > (int)1)) {
HXLINE( 314)											_x37 = (int)1;
            										}
            										else {
HXLINE( 314)											_x37 = value41;
            										}
            									}
HXDLIN( 314)									_x33 = ::Math_obj::asin(_x37);
HXDLIN( 314)									Float _y37 = (_g3->y * _g3->w);
HXDLIN( 314)									Float _y38 = ((int)2 * (_y37 - (_g3->z * _g3->x)));
HXDLIN( 314)									_y33 = ::Math_obj::atan2(_y38,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 314)									Float _z38 = (_g3->z * _g3->w);
HXDLIN( 314)									Float _z39 = ((int)2 * (_z38 - (_g3->x * _g3->y)));
HXDLIN( 314)									_z33 = ::Math_obj::atan2(_z39,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 314)									if ((order3 == (int)3)) {
HXLINE( 314)										Float _x38 = (_g3->x * _g3->w);
HXDLIN( 314)										Float _x39 = ((int)2 * (_x38 + (_g3->z * _g3->y)));
HXDLIN( 314)										_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 314)										Float value42 = (_g3->y * _g3->w);
HXDLIN( 314)										Float value43 = ((int)2 * (value42 - (_g3->x * _g3->z)));
HXDLIN( 314)										Float _y39;
HXDLIN( 314)										if ((value43 < (int)-1)) {
HXLINE( 314)											_y39 = (int)-1;
            										}
            										else {
HXLINE( 314)											if ((value43 > (int)1)) {
HXLINE( 314)												_y39 = (int)1;
            											}
            											else {
HXLINE( 314)												_y39 = value43;
            											}
            										}
HXDLIN( 314)										_y33 = ::Math_obj::asin(_y39);
HXDLIN( 314)										Float _z40 = (_g3->x * _g3->y);
HXDLIN( 314)										Float _z41 = ((int)2 * (_z40 + (_g3->z * _g3->w)));
HXDLIN( 314)										_z33 = ::Math_obj::atan2(_z41,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 314)										if ((order3 == (int)4)) {
HXLINE( 314)											Float _x40 = (_g3->x * _g3->w);
HXDLIN( 314)											Float _x41 = ((int)2 * (_x40 - (_g3->z * _g3->y)));
HXDLIN( 314)											_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 314)											Float _y40 = (_g3->y * _g3->w);
HXDLIN( 314)											Float _y41 = ((int)2 * (_y40 - (_g3->x * _g3->z)));
HXDLIN( 314)											_y33 = ::Math_obj::atan2(_y41,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 314)											Float value44 = (_g3->x * _g3->y);
HXDLIN( 314)											Float value45 = ((int)2 * (value44 + (_g3->z * _g3->w)));
HXDLIN( 314)											Float _z42;
HXDLIN( 314)											if ((value45 < (int)-1)) {
HXLINE( 314)												_z42 = (int)-1;
            											}
            											else {
HXLINE( 314)												if ((value45 > (int)1)) {
HXLINE( 314)													_z42 = (int)1;
            												}
            												else {
HXLINE( 314)													_z42 = value45;
            												}
            											}
HXDLIN( 314)											_z33 = ::Math_obj::asin(_z42);
            										}
            										else {
HXLINE( 314)											if ((order3 == (int)5)) {
HXLINE( 314)												Float _x42 = (_g3->x * _g3->w);
HXDLIN( 314)												Float _x43 = ((int)2 * (_x42 + (_g3->y * _g3->z)));
HXDLIN( 314)												_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 314)												Float _y42 = (_g3->x * _g3->z);
HXDLIN( 314)												Float _y43 = ((int)2 * (_y42 + (_g3->y * _g3->w)));
HXDLIN( 314)												_y33 = ::Math_obj::atan2(_y43,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 314)												Float value46 = (_g3->z * _g3->w);
HXDLIN( 314)												Float value47 = ((int)2 * (value46 - (_g3->x * _g3->y)));
HXDLIN( 314)												Float _z43;
HXDLIN( 314)												if ((value47 < (int)-1)) {
HXLINE( 314)													_z43 = (int)-1;
            												}
            												else {
HXLINE( 314)													if ((value47 > (int)1)) {
HXLINE( 314)														_z43 = (int)1;
            													}
            													else {
HXLINE( 314)														_z43 = value47;
            													}
            												}
HXDLIN( 314)												_z33 = ::Math_obj::asin(_z43);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 314)						{
HXLINE( 314)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 314)							_this3->ignore_listeners = true;
HXDLIN( 314)							{
HXLINE( 314)								_this3->x = _x33;
HXDLIN( 314)								if (!(_this3->_construct)) {
HXLINE( 314)									bool _hx_tmp29;
HXDLIN( 314)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 314)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 314)										_hx_tmp29 = false;
            									}
HXDLIN( 314)									if (_hx_tmp29) {
HXLINE( 314)										_this3->listen_x(_x33);
            									}
            								}
            							}
HXDLIN( 314)							{
HXLINE( 314)								_this3->y = _y33;
HXDLIN( 314)								if (!(_this3->_construct)) {
HXLINE( 314)									bool _hx_tmp30;
HXDLIN( 314)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 314)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 314)										_hx_tmp30 = false;
            									}
HXDLIN( 314)									if (_hx_tmp30) {
HXLINE( 314)										_this3->listen_y(_y33);
            									}
            								}
            							}
HXDLIN( 314)							{
HXLINE( 314)								_this3->z = _z33;
HXDLIN( 314)								if (!(_this3->_construct)) {
HXLINE( 314)									bool _hx_tmp31;
HXDLIN( 314)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 314)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 314)										_hx_tmp31 = false;
            									}
HXDLIN( 314)									if (_hx_tmp31) {
HXLINE( 314)										_this3->listen_z(_z33);
            									}
            								}
            							}
HXDLIN( 314)							_this3->ignore_listeners = prev3;
HXDLIN( 314)							bool _hx_tmp32;
HXDLIN( 314)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 314)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 314)								_hx_tmp32 = false;
            							}
HXDLIN( 314)							if (_hx_tmp32) {
HXLINE( 314)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 314)							bool _hx_tmp33;
HXDLIN( 314)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 314)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 314)								_hx_tmp33 = false;
            							}
HXDLIN( 314)							if (_hx_tmp33) {
HXLINE( 314)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 314)							bool _hx_tmp34;
HXDLIN( 314)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 314)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 314)								_hx_tmp34 = false;
            							}
HXDLIN( 314)							if (_hx_tmp34) {
HXLINE( 314)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 314)					bool _hx_tmp35;
HXDLIN( 314)					if (hx::IsNotNull( _g3->listen_w )) {
HXLINE( 314)						_hx_tmp35 = !(_g3->ignore_listeners);
            					}
            					else {
HXLINE( 314)						_hx_tmp35 = false;
            					}
HXDLIN( 314)					if (_hx_tmp35) {
HXLINE( 314)						_g3->listen_w(_g3->w);
            					}
            				}
            			}
            		}
HXLINE( 316)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,multiplyScalar,return )

 ::phoenix::Quaternion Quaternion_obj::multiplyQuaternions( ::phoenix::Quaternion _a, ::phoenix::Quaternion _b){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_320_multiplyQuaternions)
HXLINE( 322)		Float qax = _a->x;
HXDLIN( 322)		Float qay = _a->y;
HXDLIN( 322)		Float qaz = _a->z;
HXDLIN( 322)		Float qaw = _a->w;
HXLINE( 323)		Float qbx = _b->x;
HXDLIN( 323)		Float qby = _b->y;
HXDLIN( 323)		Float qbz = _b->z;
HXDLIN( 323)		Float qbw = _b->w;
HXLINE( 325)		{
HXLINE( 325)			this->ignore_euler = true;
HXDLIN( 325)			{
HXLINE( 325)				this->x = ((((qax * qbw) + (qaw * qbx)) + (qay * qbz)) - (qaz * qby));
HXDLIN( 325)				if (!(this->_construct)) {
HXLINE( 325)					bool _hx_tmp;
HXDLIN( 325)					bool _hx_tmp1;
HXDLIN( 325)					if (hx::IsNotNull( this->euler )) {
HXLINE( 325)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 325)						_hx_tmp1 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp1)) {
HXLINE( 325)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 325)						_hx_tmp = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp)) {
HXLINE( 325)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 325)						int order = (int)0;
HXDLIN( 325)						Float sqx = (this->x * this->x);
HXDLIN( 325)						Float sqy = (this->y * this->y);
HXDLIN( 325)						Float sqz = (this->z * this->z);
HXDLIN( 325)						Float sqw = (this->w * this->w);
HXDLIN( 325)						Float _x = _this->x;
HXDLIN( 325)						Float _y = _this->y;
HXDLIN( 325)						Float _z = _this->z;
HXDLIN( 325)						if ((order == (int)0)) {
HXLINE( 325)							Float _x1 = (this->x * this->w);
HXDLIN( 325)							Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 325)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 325)							Float value = (this->x * this->z);
HXDLIN( 325)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 325)							Float _y1;
HXDLIN( 325)							if ((value1 < (int)-1)) {
HXLINE( 325)								_y1 = (int)-1;
            							}
            							else {
HXLINE( 325)								if ((value1 > (int)1)) {
HXLINE( 325)									_y1 = (int)1;
            								}
            								else {
HXLINE( 325)									_y1 = value1;
            								}
            							}
HXDLIN( 325)							_y = ::Math_obj::asin(_y1);
HXDLIN( 325)							Float _z1 = (this->z * this->w);
HXDLIN( 325)							Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 325)							_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 325)							if ((order == (int)1)) {
HXLINE( 325)								Float value2 = (this->x * this->w);
HXDLIN( 325)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 325)								Float _x3;
HXDLIN( 325)								if ((value3 < (int)-1)) {
HXLINE( 325)									_x3 = (int)-1;
            								}
            								else {
HXLINE( 325)									if ((value3 > (int)1)) {
HXLINE( 325)										_x3 = (int)1;
            									}
            									else {
HXLINE( 325)										_x3 = value3;
            									}
            								}
HXDLIN( 325)								_x = ::Math_obj::asin(_x3);
HXDLIN( 325)								Float _y2 = (this->x * this->z);
HXDLIN( 325)								Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 325)								_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 325)								Float _z3 = (this->x * this->y);
HXDLIN( 325)								Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 325)								_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 325)								if ((order == (int)2)) {
HXLINE( 325)									Float value4 = (this->x * this->w);
HXDLIN( 325)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 325)									Float _x4;
HXDLIN( 325)									if ((value5 < (int)-1)) {
HXLINE( 325)										_x4 = (int)-1;
            									}
            									else {
HXLINE( 325)										if ((value5 > (int)1)) {
HXLINE( 325)											_x4 = (int)1;
            										}
            										else {
HXLINE( 325)											_x4 = value5;
            										}
            									}
HXDLIN( 325)									_x = ::Math_obj::asin(_x4);
HXDLIN( 325)									Float _y4 = (this->y * this->w);
HXDLIN( 325)									Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 325)									_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 325)									Float _z5 = (this->z * this->w);
HXDLIN( 325)									Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 325)									_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 325)									if ((order == (int)3)) {
HXLINE( 325)										Float _x5 = (this->x * this->w);
HXDLIN( 325)										Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 325)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 325)										Float value6 = (this->y * this->w);
HXDLIN( 325)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 325)										Float _y6;
HXDLIN( 325)										if ((value7 < (int)-1)) {
HXLINE( 325)											_y6 = (int)-1;
            										}
            										else {
HXLINE( 325)											if ((value7 > (int)1)) {
HXLINE( 325)												_y6 = (int)1;
            											}
            											else {
HXLINE( 325)												_y6 = value7;
            											}
            										}
HXDLIN( 325)										_y = ::Math_obj::asin(_y6);
HXDLIN( 325)										Float _z7 = (this->x * this->y);
HXDLIN( 325)										Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 325)										_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 325)										if ((order == (int)4)) {
HXLINE( 325)											Float _x7 = (this->x * this->w);
HXDLIN( 325)											Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 325)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 325)											Float _y7 = (this->y * this->w);
HXDLIN( 325)											Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 325)											_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 325)											Float value8 = (this->x * this->y);
HXDLIN( 325)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 325)											Float _z9;
HXDLIN( 325)											if ((value9 < (int)-1)) {
HXLINE( 325)												_z9 = (int)-1;
            											}
            											else {
HXLINE( 325)												if ((value9 > (int)1)) {
HXLINE( 325)													_z9 = (int)1;
            												}
            												else {
HXLINE( 325)													_z9 = value9;
            												}
            											}
HXDLIN( 325)											_z = ::Math_obj::asin(_z9);
            										}
            										else {
HXLINE( 325)											if ((order == (int)5)) {
HXLINE( 325)												Float _x9 = (this->x * this->w);
HXDLIN( 325)												Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 325)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 325)												Float _y9 = (this->x * this->z);
HXDLIN( 325)												Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 325)												_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 325)												Float value10 = (this->z * this->w);
HXDLIN( 325)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 325)												Float _z10;
HXDLIN( 325)												if ((value11 < (int)-1)) {
HXLINE( 325)													_z10 = (int)-1;
            												}
            												else {
HXLINE( 325)													if ((value11 > (int)1)) {
HXLINE( 325)														_z10 = (int)1;
            													}
            													else {
HXLINE( 325)														_z10 = value11;
            													}
            												}
HXDLIN( 325)												_z = ::Math_obj::asin(_z10);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 325)						{
HXLINE( 325)							bool prev = _this->ignore_listeners;
HXDLIN( 325)							_this->ignore_listeners = true;
HXDLIN( 325)							{
HXLINE( 325)								_this->x = _x;
HXDLIN( 325)								if (!(_this->_construct)) {
HXLINE( 325)									bool _hx_tmp2;
HXDLIN( 325)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 325)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp2 = false;
            									}
HXDLIN( 325)									if (_hx_tmp2) {
HXLINE( 325)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this->y = _y;
HXDLIN( 325)								if (!(_this->_construct)) {
HXLINE( 325)									bool _hx_tmp3;
HXDLIN( 325)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 325)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp3 = false;
            									}
HXDLIN( 325)									if (_hx_tmp3) {
HXLINE( 325)										_this->listen_y(_y);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this->z = _z;
HXDLIN( 325)								if (!(_this->_construct)) {
HXLINE( 325)									bool _hx_tmp4;
HXDLIN( 325)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 325)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp4 = false;
            									}
HXDLIN( 325)									if (_hx_tmp4) {
HXLINE( 325)										_this->listen_z(_z);
            									}
            								}
            							}
HXDLIN( 325)							_this->ignore_listeners = prev;
HXDLIN( 325)							bool _hx_tmp5;
HXDLIN( 325)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 325)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp5 = false;
            							}
HXDLIN( 325)							if (_hx_tmp5) {
HXLINE( 325)								_this->listen_x(_this->x);
            							}
HXDLIN( 325)							bool _hx_tmp6;
HXDLIN( 325)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 325)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp6 = false;
            							}
HXDLIN( 325)							if (_hx_tmp6) {
HXLINE( 325)								_this->listen_y(_this->y);
            							}
HXDLIN( 325)							bool _hx_tmp7;
HXDLIN( 325)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 325)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp7 = false;
            							}
HXDLIN( 325)							if (_hx_tmp7) {
HXLINE( 325)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 325)					bool _hx_tmp8;
HXDLIN( 325)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 325)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp8 = false;
            					}
HXDLIN( 325)					if (_hx_tmp8) {
HXLINE( 325)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 325)			{
HXLINE( 325)				this->y = ((((qay * qbw) + (qaw * qby)) + (qaz * qbx)) - (qax * qbz));
HXDLIN( 325)				if (!(this->_construct)) {
HXLINE( 325)					bool _hx_tmp9;
HXDLIN( 325)					bool _hx_tmp10;
HXDLIN( 325)					if (hx::IsNotNull( this->euler )) {
HXLINE( 325)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 325)						_hx_tmp10 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp10)) {
HXLINE( 325)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 325)						_hx_tmp9 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp9)) {
HXLINE( 325)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 325)						int order1 = (int)0;
HXDLIN( 325)						Float sqx1 = (this->x * this->x);
HXDLIN( 325)						Float sqy1 = (this->y * this->y);
HXDLIN( 325)						Float sqz1 = (this->z * this->z);
HXDLIN( 325)						Float sqw1 = (this->w * this->w);
HXDLIN( 325)						Float _x11 = _this1->x;
HXDLIN( 325)						Float _y11 = _this1->y;
HXDLIN( 325)						Float _z11 = _this1->z;
HXDLIN( 325)						if ((order1 == (int)0)) {
HXLINE( 325)							Float _x12 = (this->x * this->w);
HXDLIN( 325)							Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN( 325)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 325)							Float value12 = (this->x * this->z);
HXDLIN( 325)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 325)							Float _y12;
HXDLIN( 325)							if ((value13 < (int)-1)) {
HXLINE( 325)								_y12 = (int)-1;
            							}
            							else {
HXLINE( 325)								if ((value13 > (int)1)) {
HXLINE( 325)									_y12 = (int)1;
            								}
            								else {
HXLINE( 325)									_y12 = value13;
            								}
            							}
HXDLIN( 325)							_y11 = ::Math_obj::asin(_y12);
HXDLIN( 325)							Float _z12 = (this->z * this->w);
HXDLIN( 325)							Float _z13 = ((int)2 * (_z12 - (this->x * this->y)));
HXDLIN( 325)							_z11 = ::Math_obj::atan2(_z13,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 325)							if ((order1 == (int)1)) {
HXLINE( 325)								Float value14 = (this->x * this->w);
HXDLIN( 325)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 325)								Float _x14;
HXDLIN( 325)								if ((value15 < (int)-1)) {
HXLINE( 325)									_x14 = (int)-1;
            								}
            								else {
HXLINE( 325)									if ((value15 > (int)1)) {
HXLINE( 325)										_x14 = (int)1;
            									}
            									else {
HXLINE( 325)										_x14 = value15;
            									}
            								}
HXDLIN( 325)								_x11 = ::Math_obj::asin(_x14);
HXDLIN( 325)								Float _y13 = (this->x * this->z);
HXDLIN( 325)								Float _y14 = ((int)2 * (_y13 + (this->y * this->w)));
HXDLIN( 325)								_y11 = ::Math_obj::atan2(_y14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 325)								Float _z14 = (this->x * this->y);
HXDLIN( 325)								Float _z15 = ((int)2 * (_z14 + (this->z * this->w)));
HXDLIN( 325)								_z11 = ::Math_obj::atan2(_z15,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 325)								if ((order1 == (int)2)) {
HXLINE( 325)									Float value16 = (this->x * this->w);
HXDLIN( 325)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 325)									Float _x15;
HXDLIN( 325)									if ((value17 < (int)-1)) {
HXLINE( 325)										_x15 = (int)-1;
            									}
            									else {
HXLINE( 325)										if ((value17 > (int)1)) {
HXLINE( 325)											_x15 = (int)1;
            										}
            										else {
HXLINE( 325)											_x15 = value17;
            										}
            									}
HXDLIN( 325)									_x11 = ::Math_obj::asin(_x15);
HXDLIN( 325)									Float _y15 = (this->y * this->w);
HXDLIN( 325)									Float _y16 = ((int)2 * (_y15 - (this->z * this->x)));
HXDLIN( 325)									_y11 = ::Math_obj::atan2(_y16,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 325)									Float _z16 = (this->z * this->w);
HXDLIN( 325)									Float _z17 = ((int)2 * (_z16 - (this->x * this->y)));
HXDLIN( 325)									_z11 = ::Math_obj::atan2(_z17,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 325)									if ((order1 == (int)3)) {
HXLINE( 325)										Float _x16 = (this->x * this->w);
HXDLIN( 325)										Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN( 325)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 325)										Float value18 = (this->y * this->w);
HXDLIN( 325)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 325)										Float _y17;
HXDLIN( 325)										if ((value19 < (int)-1)) {
HXLINE( 325)											_y17 = (int)-1;
            										}
            										else {
HXLINE( 325)											if ((value19 > (int)1)) {
HXLINE( 325)												_y17 = (int)1;
            											}
            											else {
HXLINE( 325)												_y17 = value19;
            											}
            										}
HXDLIN( 325)										_y11 = ::Math_obj::asin(_y17);
HXDLIN( 325)										Float _z18 = (this->x * this->y);
HXDLIN( 325)										Float _z19 = ((int)2 * (_z18 + (this->z * this->w)));
HXDLIN( 325)										_z11 = ::Math_obj::atan2(_z19,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 325)										if ((order1 == (int)4)) {
HXLINE( 325)											Float _x18 = (this->x * this->w);
HXDLIN( 325)											Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN( 325)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 325)											Float _y18 = (this->y * this->w);
HXDLIN( 325)											Float _y19 = ((int)2 * (_y18 - (this->x * this->z)));
HXDLIN( 325)											_y11 = ::Math_obj::atan2(_y19,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 325)											Float value20 = (this->x * this->y);
HXDLIN( 325)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 325)											Float _z20;
HXDLIN( 325)											if ((value21 < (int)-1)) {
HXLINE( 325)												_z20 = (int)-1;
            											}
            											else {
HXLINE( 325)												if ((value21 > (int)1)) {
HXLINE( 325)													_z20 = (int)1;
            												}
            												else {
HXLINE( 325)													_z20 = value21;
            												}
            											}
HXDLIN( 325)											_z11 = ::Math_obj::asin(_z20);
            										}
            										else {
HXLINE( 325)											if ((order1 == (int)5)) {
HXLINE( 325)												Float _x20 = (this->x * this->w);
HXDLIN( 325)												Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN( 325)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 325)												Float _y20 = (this->x * this->z);
HXDLIN( 325)												Float _y21 = ((int)2 * (_y20 + (this->y * this->w)));
HXDLIN( 325)												_y11 = ::Math_obj::atan2(_y21,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 325)												Float value22 = (this->z * this->w);
HXDLIN( 325)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 325)												Float _z21;
HXDLIN( 325)												if ((value23 < (int)-1)) {
HXLINE( 325)													_z21 = (int)-1;
            												}
            												else {
HXLINE( 325)													if ((value23 > (int)1)) {
HXLINE( 325)														_z21 = (int)1;
            													}
            													else {
HXLINE( 325)														_z21 = value23;
            													}
            												}
HXDLIN( 325)												_z11 = ::Math_obj::asin(_z21);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 325)						{
HXLINE( 325)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 325)							_this1->ignore_listeners = true;
HXDLIN( 325)							{
HXLINE( 325)								_this1->x = _x11;
HXDLIN( 325)								if (!(_this1->_construct)) {
HXLINE( 325)									bool _hx_tmp11;
HXDLIN( 325)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 325)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp11 = false;
            									}
HXDLIN( 325)									if (_hx_tmp11) {
HXLINE( 325)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this1->y = _y11;
HXDLIN( 325)								if (!(_this1->_construct)) {
HXLINE( 325)									bool _hx_tmp12;
HXDLIN( 325)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 325)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp12 = false;
            									}
HXDLIN( 325)									if (_hx_tmp12) {
HXLINE( 325)										_this1->listen_y(_y11);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this1->z = _z11;
HXDLIN( 325)								if (!(_this1->_construct)) {
HXLINE( 325)									bool _hx_tmp13;
HXDLIN( 325)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 325)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp13 = false;
            									}
HXDLIN( 325)									if (_hx_tmp13) {
HXLINE( 325)										_this1->listen_z(_z11);
            									}
            								}
            							}
HXDLIN( 325)							_this1->ignore_listeners = prev1;
HXDLIN( 325)							bool _hx_tmp14;
HXDLIN( 325)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 325)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp14 = false;
            							}
HXDLIN( 325)							if (_hx_tmp14) {
HXLINE( 325)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 325)							bool _hx_tmp15;
HXDLIN( 325)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 325)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp15 = false;
            							}
HXDLIN( 325)							if (_hx_tmp15) {
HXLINE( 325)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 325)							bool _hx_tmp16;
HXDLIN( 325)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 325)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp16 = false;
            							}
HXDLIN( 325)							if (_hx_tmp16) {
HXLINE( 325)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 325)					bool _hx_tmp17;
HXDLIN( 325)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 325)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp17 = false;
            					}
HXDLIN( 325)					if (_hx_tmp17) {
HXLINE( 325)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 325)			{
HXLINE( 325)				this->z = ((((qaz * qbw) + (qaw * qbz)) + (qax * qby)) - (qay * qbx));
HXDLIN( 325)				if (!(this->_construct)) {
HXLINE( 325)					bool _hx_tmp18;
HXDLIN( 325)					bool _hx_tmp19;
HXDLIN( 325)					if (hx::IsNotNull( this->euler )) {
HXLINE( 325)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 325)						_hx_tmp19 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp19)) {
HXLINE( 325)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 325)						_hx_tmp18 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp18)) {
HXLINE( 325)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 325)						int order2 = (int)0;
HXDLIN( 325)						Float sqx2 = (this->x * this->x);
HXDLIN( 325)						Float sqy2 = (this->y * this->y);
HXDLIN( 325)						Float sqz2 = (this->z * this->z);
HXDLIN( 325)						Float sqw2 = (this->w * this->w);
HXDLIN( 325)						Float _x22 = _this2->x;
HXDLIN( 325)						Float _y22 = _this2->y;
HXDLIN( 325)						Float _z22 = _this2->z;
HXDLIN( 325)						if ((order2 == (int)0)) {
HXLINE( 325)							Float _x23 = (this->x * this->w);
HXDLIN( 325)							Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN( 325)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 325)							Float value24 = (this->x * this->z);
HXDLIN( 325)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 325)							Float _y23;
HXDLIN( 325)							if ((value25 < (int)-1)) {
HXLINE( 325)								_y23 = (int)-1;
            							}
            							else {
HXLINE( 325)								if ((value25 > (int)1)) {
HXLINE( 325)									_y23 = (int)1;
            								}
            								else {
HXLINE( 325)									_y23 = value25;
            								}
            							}
HXDLIN( 325)							_y22 = ::Math_obj::asin(_y23);
HXDLIN( 325)							Float _z23 = (this->z * this->w);
HXDLIN( 325)							Float _z24 = ((int)2 * (_z23 - (this->x * this->y)));
HXDLIN( 325)							_z22 = ::Math_obj::atan2(_z24,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 325)							if ((order2 == (int)1)) {
HXLINE( 325)								Float value26 = (this->x * this->w);
HXDLIN( 325)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 325)								Float _x25;
HXDLIN( 325)								if ((value27 < (int)-1)) {
HXLINE( 325)									_x25 = (int)-1;
            								}
            								else {
HXLINE( 325)									if ((value27 > (int)1)) {
HXLINE( 325)										_x25 = (int)1;
            									}
            									else {
HXLINE( 325)										_x25 = value27;
            									}
            								}
HXDLIN( 325)								_x22 = ::Math_obj::asin(_x25);
HXDLIN( 325)								Float _y24 = (this->x * this->z);
HXDLIN( 325)								Float _y25 = ((int)2 * (_y24 + (this->y * this->w)));
HXDLIN( 325)								_y22 = ::Math_obj::atan2(_y25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 325)								Float _z25 = (this->x * this->y);
HXDLIN( 325)								Float _z26 = ((int)2 * (_z25 + (this->z * this->w)));
HXDLIN( 325)								_z22 = ::Math_obj::atan2(_z26,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 325)								if ((order2 == (int)2)) {
HXLINE( 325)									Float value28 = (this->x * this->w);
HXDLIN( 325)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 325)									Float _x26;
HXDLIN( 325)									if ((value29 < (int)-1)) {
HXLINE( 325)										_x26 = (int)-1;
            									}
            									else {
HXLINE( 325)										if ((value29 > (int)1)) {
HXLINE( 325)											_x26 = (int)1;
            										}
            										else {
HXLINE( 325)											_x26 = value29;
            										}
            									}
HXDLIN( 325)									_x22 = ::Math_obj::asin(_x26);
HXDLIN( 325)									Float _y26 = (this->y * this->w);
HXDLIN( 325)									Float _y27 = ((int)2 * (_y26 - (this->z * this->x)));
HXDLIN( 325)									_y22 = ::Math_obj::atan2(_y27,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 325)									Float _z27 = (this->z * this->w);
HXDLIN( 325)									Float _z28 = ((int)2 * (_z27 - (this->x * this->y)));
HXDLIN( 325)									_z22 = ::Math_obj::atan2(_z28,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 325)									if ((order2 == (int)3)) {
HXLINE( 325)										Float _x27 = (this->x * this->w);
HXDLIN( 325)										Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN( 325)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 325)										Float value30 = (this->y * this->w);
HXDLIN( 325)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 325)										Float _y28;
HXDLIN( 325)										if ((value31 < (int)-1)) {
HXLINE( 325)											_y28 = (int)-1;
            										}
            										else {
HXLINE( 325)											if ((value31 > (int)1)) {
HXLINE( 325)												_y28 = (int)1;
            											}
            											else {
HXLINE( 325)												_y28 = value31;
            											}
            										}
HXDLIN( 325)										_y22 = ::Math_obj::asin(_y28);
HXDLIN( 325)										Float _z29 = (this->x * this->y);
HXDLIN( 325)										Float _z30 = ((int)2 * (_z29 + (this->z * this->w)));
HXDLIN( 325)										_z22 = ::Math_obj::atan2(_z30,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 325)										if ((order2 == (int)4)) {
HXLINE( 325)											Float _x29 = (this->x * this->w);
HXDLIN( 325)											Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN( 325)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 325)											Float _y29 = (this->y * this->w);
HXDLIN( 325)											Float _y30 = ((int)2 * (_y29 - (this->x * this->z)));
HXDLIN( 325)											_y22 = ::Math_obj::atan2(_y30,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 325)											Float value32 = (this->x * this->y);
HXDLIN( 325)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 325)											Float _z31;
HXDLIN( 325)											if ((value33 < (int)-1)) {
HXLINE( 325)												_z31 = (int)-1;
            											}
            											else {
HXLINE( 325)												if ((value33 > (int)1)) {
HXLINE( 325)													_z31 = (int)1;
            												}
            												else {
HXLINE( 325)													_z31 = value33;
            												}
            											}
HXDLIN( 325)											_z22 = ::Math_obj::asin(_z31);
            										}
            										else {
HXLINE( 325)											if ((order2 == (int)5)) {
HXLINE( 325)												Float _x31 = (this->x * this->w);
HXDLIN( 325)												Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN( 325)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 325)												Float _y31 = (this->x * this->z);
HXDLIN( 325)												Float _y32 = ((int)2 * (_y31 + (this->y * this->w)));
HXDLIN( 325)												_y22 = ::Math_obj::atan2(_y32,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 325)												Float value34 = (this->z * this->w);
HXDLIN( 325)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 325)												Float _z32;
HXDLIN( 325)												if ((value35 < (int)-1)) {
HXLINE( 325)													_z32 = (int)-1;
            												}
            												else {
HXLINE( 325)													if ((value35 > (int)1)) {
HXLINE( 325)														_z32 = (int)1;
            													}
            													else {
HXLINE( 325)														_z32 = value35;
            													}
            												}
HXDLIN( 325)												_z22 = ::Math_obj::asin(_z32);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 325)						{
HXLINE( 325)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 325)							_this2->ignore_listeners = true;
HXDLIN( 325)							{
HXLINE( 325)								_this2->x = _x22;
HXDLIN( 325)								if (!(_this2->_construct)) {
HXLINE( 325)									bool _hx_tmp20;
HXDLIN( 325)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 325)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp20 = false;
            									}
HXDLIN( 325)									if (_hx_tmp20) {
HXLINE( 325)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this2->y = _y22;
HXDLIN( 325)								if (!(_this2->_construct)) {
HXLINE( 325)									bool _hx_tmp21;
HXDLIN( 325)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 325)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp21 = false;
            									}
HXDLIN( 325)									if (_hx_tmp21) {
HXLINE( 325)										_this2->listen_y(_y22);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this2->z = _z22;
HXDLIN( 325)								if (!(_this2->_construct)) {
HXLINE( 325)									bool _hx_tmp22;
HXDLIN( 325)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 325)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp22 = false;
            									}
HXDLIN( 325)									if (_hx_tmp22) {
HXLINE( 325)										_this2->listen_z(_z22);
            									}
            								}
            							}
HXDLIN( 325)							_this2->ignore_listeners = prev2;
HXDLIN( 325)							bool _hx_tmp23;
HXDLIN( 325)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 325)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp23 = false;
            							}
HXDLIN( 325)							if (_hx_tmp23) {
HXLINE( 325)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 325)							bool _hx_tmp24;
HXDLIN( 325)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 325)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp24 = false;
            							}
HXDLIN( 325)							if (_hx_tmp24) {
HXLINE( 325)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 325)							bool _hx_tmp25;
HXDLIN( 325)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 325)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp25 = false;
            							}
HXDLIN( 325)							if (_hx_tmp25) {
HXLINE( 325)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 325)					bool _hx_tmp26;
HXDLIN( 325)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 325)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp26 = false;
            					}
HXDLIN( 325)					if (_hx_tmp26) {
HXLINE( 325)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 325)			{
HXLINE( 325)				this->w = ((((qaw * qbw) - (qax * qbx)) - (qay * qby)) - (qaz * qbz));
HXDLIN( 325)				if (!(this->_construct)) {
HXLINE( 325)					bool _hx_tmp27;
HXDLIN( 325)					bool _hx_tmp28;
HXDLIN( 325)					if (hx::IsNotNull( this->euler )) {
HXLINE( 325)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE( 325)						_hx_tmp28 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp28)) {
HXLINE( 325)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE( 325)						_hx_tmp27 = true;
            					}
HXDLIN( 325)					if (!(_hx_tmp27)) {
HXLINE( 325)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 325)						int order3 = (int)0;
HXDLIN( 325)						Float sqx3 = (this->x * this->x);
HXDLIN( 325)						Float sqy3 = (this->y * this->y);
HXDLIN( 325)						Float sqz3 = (this->z * this->z);
HXDLIN( 325)						Float sqw3 = (this->w * this->w);
HXDLIN( 325)						Float _x33 = _this3->x;
HXDLIN( 325)						Float _y33 = _this3->y;
HXDLIN( 325)						Float _z33 = _this3->z;
HXDLIN( 325)						if ((order3 == (int)0)) {
HXLINE( 325)							Float _x34 = (this->x * this->w);
HXDLIN( 325)							Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN( 325)							_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 325)							Float value36 = (this->x * this->z);
HXDLIN( 325)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 325)							Float _y34;
HXDLIN( 325)							if ((value37 < (int)-1)) {
HXLINE( 325)								_y34 = (int)-1;
            							}
            							else {
HXLINE( 325)								if ((value37 > (int)1)) {
HXLINE( 325)									_y34 = (int)1;
            								}
            								else {
HXLINE( 325)									_y34 = value37;
            								}
            							}
HXDLIN( 325)							_y33 = ::Math_obj::asin(_y34);
HXDLIN( 325)							Float _z34 = (this->z * this->w);
HXDLIN( 325)							Float _z35 = ((int)2 * (_z34 - (this->x * this->y)));
HXDLIN( 325)							_z33 = ::Math_obj::atan2(_z35,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 325)							if ((order3 == (int)1)) {
HXLINE( 325)								Float value38 = (this->x * this->w);
HXDLIN( 325)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 325)								Float _x36;
HXDLIN( 325)								if ((value39 < (int)-1)) {
HXLINE( 325)									_x36 = (int)-1;
            								}
            								else {
HXLINE( 325)									if ((value39 > (int)1)) {
HXLINE( 325)										_x36 = (int)1;
            									}
            									else {
HXLINE( 325)										_x36 = value39;
            									}
            								}
HXDLIN( 325)								_x33 = ::Math_obj::asin(_x36);
HXDLIN( 325)								Float _y35 = (this->x * this->z);
HXDLIN( 325)								Float _y36 = ((int)2 * (_y35 + (this->y * this->w)));
HXDLIN( 325)								_y33 = ::Math_obj::atan2(_y36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 325)								Float _z36 = (this->x * this->y);
HXDLIN( 325)								Float _z37 = ((int)2 * (_z36 + (this->z * this->w)));
HXDLIN( 325)								_z33 = ::Math_obj::atan2(_z37,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 325)								if ((order3 == (int)2)) {
HXLINE( 325)									Float value40 = (this->x * this->w);
HXDLIN( 325)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 325)									Float _x37;
HXDLIN( 325)									if ((value41 < (int)-1)) {
HXLINE( 325)										_x37 = (int)-1;
            									}
            									else {
HXLINE( 325)										if ((value41 > (int)1)) {
HXLINE( 325)											_x37 = (int)1;
            										}
            										else {
HXLINE( 325)											_x37 = value41;
            										}
            									}
HXDLIN( 325)									_x33 = ::Math_obj::asin(_x37);
HXDLIN( 325)									Float _y37 = (this->y * this->w);
HXDLIN( 325)									Float _y38 = ((int)2 * (_y37 - (this->z * this->x)));
HXDLIN( 325)									_y33 = ::Math_obj::atan2(_y38,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 325)									Float _z38 = (this->z * this->w);
HXDLIN( 325)									Float _z39 = ((int)2 * (_z38 - (this->x * this->y)));
HXDLIN( 325)									_z33 = ::Math_obj::atan2(_z39,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 325)									if ((order3 == (int)3)) {
HXLINE( 325)										Float _x38 = (this->x * this->w);
HXDLIN( 325)										Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN( 325)										_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 325)										Float value42 = (this->y * this->w);
HXDLIN( 325)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 325)										Float _y39;
HXDLIN( 325)										if ((value43 < (int)-1)) {
HXLINE( 325)											_y39 = (int)-1;
            										}
            										else {
HXLINE( 325)											if ((value43 > (int)1)) {
HXLINE( 325)												_y39 = (int)1;
            											}
            											else {
HXLINE( 325)												_y39 = value43;
            											}
            										}
HXDLIN( 325)										_y33 = ::Math_obj::asin(_y39);
HXDLIN( 325)										Float _z40 = (this->x * this->y);
HXDLIN( 325)										Float _z41 = ((int)2 * (_z40 + (this->z * this->w)));
HXDLIN( 325)										_z33 = ::Math_obj::atan2(_z41,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 325)										if ((order3 == (int)4)) {
HXLINE( 325)											Float _x40 = (this->x * this->w);
HXDLIN( 325)											Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN( 325)											_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 325)											Float _y40 = (this->y * this->w);
HXDLIN( 325)											Float _y41 = ((int)2 * (_y40 - (this->x * this->z)));
HXDLIN( 325)											_y33 = ::Math_obj::atan2(_y41,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 325)											Float value44 = (this->x * this->y);
HXDLIN( 325)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 325)											Float _z42;
HXDLIN( 325)											if ((value45 < (int)-1)) {
HXLINE( 325)												_z42 = (int)-1;
            											}
            											else {
HXLINE( 325)												if ((value45 > (int)1)) {
HXLINE( 325)													_z42 = (int)1;
            												}
            												else {
HXLINE( 325)													_z42 = value45;
            												}
            											}
HXDLIN( 325)											_z33 = ::Math_obj::asin(_z42);
            										}
            										else {
HXLINE( 325)											if ((order3 == (int)5)) {
HXLINE( 325)												Float _x42 = (this->x * this->w);
HXDLIN( 325)												Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN( 325)												_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 325)												Float _y42 = (this->x * this->z);
HXDLIN( 325)												Float _y43 = ((int)2 * (_y42 + (this->y * this->w)));
HXDLIN( 325)												_y33 = ::Math_obj::atan2(_y43,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 325)												Float value46 = (this->z * this->w);
HXDLIN( 325)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 325)												Float _z43;
HXDLIN( 325)												if ((value47 < (int)-1)) {
HXLINE( 325)													_z43 = (int)-1;
            												}
            												else {
HXLINE( 325)													if ((value47 > (int)1)) {
HXLINE( 325)														_z43 = (int)1;
            													}
            													else {
HXLINE( 325)														_z43 = value47;
            													}
            												}
HXDLIN( 325)												_z33 = ::Math_obj::asin(_z43);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 325)						{
HXLINE( 325)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 325)							_this3->ignore_listeners = true;
HXDLIN( 325)							{
HXLINE( 325)								_this3->x = _x33;
HXDLIN( 325)								if (!(_this3->_construct)) {
HXLINE( 325)									bool _hx_tmp29;
HXDLIN( 325)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 325)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp29 = false;
            									}
HXDLIN( 325)									if (_hx_tmp29) {
HXLINE( 325)										_this3->listen_x(_x33);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this3->y = _y33;
HXDLIN( 325)								if (!(_this3->_construct)) {
HXLINE( 325)									bool _hx_tmp30;
HXDLIN( 325)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 325)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp30 = false;
            									}
HXDLIN( 325)									if (_hx_tmp30) {
HXLINE( 325)										_this3->listen_y(_y33);
            									}
            								}
            							}
HXDLIN( 325)							{
HXLINE( 325)								_this3->z = _z33;
HXDLIN( 325)								if (!(_this3->_construct)) {
HXLINE( 325)									bool _hx_tmp31;
HXDLIN( 325)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 325)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 325)										_hx_tmp31 = false;
            									}
HXDLIN( 325)									if (_hx_tmp31) {
HXLINE( 325)										_this3->listen_z(_z33);
            									}
            								}
            							}
HXDLIN( 325)							_this3->ignore_listeners = prev3;
HXDLIN( 325)							bool _hx_tmp32;
HXDLIN( 325)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 325)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp32 = false;
            							}
HXDLIN( 325)							if (_hx_tmp32) {
HXLINE( 325)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 325)							bool _hx_tmp33;
HXDLIN( 325)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 325)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp33 = false;
            							}
HXDLIN( 325)							if (_hx_tmp33) {
HXLINE( 325)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 325)							bool _hx_tmp34;
HXDLIN( 325)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 325)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp34 = false;
            							}
HXDLIN( 325)							if (_hx_tmp34) {
HXLINE( 325)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 325)					bool _hx_tmp35;
HXDLIN( 325)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 325)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp35 = false;
            					}
HXDLIN( 325)					if (_hx_tmp35) {
HXLINE( 325)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 325)			this->ignore_euler = false;
HXDLIN( 325)			bool _hx_tmp36;
HXDLIN( 325)			bool _hx_tmp37;
HXDLIN( 325)			if (hx::IsNotNull( this->euler )) {
HXLINE( 325)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE( 325)				_hx_tmp37 = true;
            			}
HXDLIN( 325)			if (!(_hx_tmp37)) {
HXLINE( 325)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE( 325)				_hx_tmp36 = true;
            			}
HXDLIN( 325)			if (!(_hx_tmp36)) {
HXLINE( 325)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 325)				int order4 = (int)0;
HXDLIN( 325)				Float sqx4 = (this->x * this->x);
HXDLIN( 325)				Float sqy4 = (this->y * this->y);
HXDLIN( 325)				Float sqz4 = (this->z * this->z);
HXDLIN( 325)				Float sqw4 = (this->w * this->w);
HXDLIN( 325)				Float _x44 = _this4->x;
HXDLIN( 325)				Float _y44 = _this4->y;
HXDLIN( 325)				Float _z44 = _this4->z;
HXDLIN( 325)				if ((order4 == (int)0)) {
HXLINE( 325)					Float _x45 = (this->x * this->w);
HXDLIN( 325)					Float _x46 = ((int)2 * (_x45 - (this->y * this->z)));
HXDLIN( 325)					_x44 = ::Math_obj::atan2(_x46,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 325)					Float value48 = (this->x * this->z);
HXDLIN( 325)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 325)					Float _y45;
HXDLIN( 325)					if ((value49 < (int)-1)) {
HXLINE( 325)						_y45 = (int)-1;
            					}
            					else {
HXLINE( 325)						if ((value49 > (int)1)) {
HXLINE( 325)							_y45 = (int)1;
            						}
            						else {
HXLINE( 325)							_y45 = value49;
            						}
            					}
HXDLIN( 325)					_y44 = ::Math_obj::asin(_y45);
HXDLIN( 325)					Float _z45 = (this->z * this->w);
HXDLIN( 325)					Float _z46 = ((int)2 * (_z45 - (this->x * this->y)));
HXDLIN( 325)					_z44 = ::Math_obj::atan2(_z46,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE( 325)					if ((order4 == (int)1)) {
HXLINE( 325)						Float value50 = (this->x * this->w);
HXDLIN( 325)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 325)						Float _x47;
HXDLIN( 325)						if ((value51 < (int)-1)) {
HXLINE( 325)							_x47 = (int)-1;
            						}
            						else {
HXLINE( 325)							if ((value51 > (int)1)) {
HXLINE( 325)								_x47 = (int)1;
            							}
            							else {
HXLINE( 325)								_x47 = value51;
            							}
            						}
HXDLIN( 325)						_x44 = ::Math_obj::asin(_x47);
HXDLIN( 325)						Float _y46 = (this->x * this->z);
HXDLIN( 325)						Float _y47 = ((int)2 * (_y46 + (this->y * this->w)));
HXDLIN( 325)						_y44 = ::Math_obj::atan2(_y47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 325)						Float _z47 = (this->x * this->y);
HXDLIN( 325)						Float _z48 = ((int)2 * (_z47 + (this->z * this->w)));
HXDLIN( 325)						_z44 = ::Math_obj::atan2(_z48,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 325)						if ((order4 == (int)2)) {
HXLINE( 325)							Float value52 = (this->x * this->w);
HXDLIN( 325)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 325)							Float _x48;
HXDLIN( 325)							if ((value53 < (int)-1)) {
HXLINE( 325)								_x48 = (int)-1;
            							}
            							else {
HXLINE( 325)								if ((value53 > (int)1)) {
HXLINE( 325)									_x48 = (int)1;
            								}
            								else {
HXLINE( 325)									_x48 = value53;
            								}
            							}
HXDLIN( 325)							_x44 = ::Math_obj::asin(_x48);
HXDLIN( 325)							Float _y48 = (this->y * this->w);
HXDLIN( 325)							Float _y49 = ((int)2 * (_y48 - (this->z * this->x)));
HXDLIN( 325)							_y44 = ::Math_obj::atan2(_y49,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 325)							Float _z49 = (this->z * this->w);
HXDLIN( 325)							Float _z50 = ((int)2 * (_z49 - (this->x * this->y)));
HXDLIN( 325)							_z44 = ::Math_obj::atan2(_z50,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE( 325)							if ((order4 == (int)3)) {
HXLINE( 325)								Float _x49 = (this->x * this->w);
HXDLIN( 325)								Float _x50 = ((int)2 * (_x49 + (this->z * this->y)));
HXDLIN( 325)								_x44 = ::Math_obj::atan2(_x50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 325)								Float value54 = (this->y * this->w);
HXDLIN( 325)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 325)								Float _y50;
HXDLIN( 325)								if ((value55 < (int)-1)) {
HXLINE( 325)									_y50 = (int)-1;
            								}
            								else {
HXLINE( 325)									if ((value55 > (int)1)) {
HXLINE( 325)										_y50 = (int)1;
            									}
            									else {
HXLINE( 325)										_y50 = value55;
            									}
            								}
HXDLIN( 325)								_y44 = ::Math_obj::asin(_y50);
HXDLIN( 325)								Float _z51 = (this->x * this->y);
HXDLIN( 325)								Float _z52 = ((int)2 * (_z51 + (this->z * this->w)));
HXDLIN( 325)								_z44 = ::Math_obj::atan2(_z52,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 325)								if ((order4 == (int)4)) {
HXLINE( 325)									Float _x51 = (this->x * this->w);
HXDLIN( 325)									Float _x52 = ((int)2 * (_x51 - (this->z * this->y)));
HXDLIN( 325)									_x44 = ::Math_obj::atan2(_x52,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 325)									Float _y51 = (this->y * this->w);
HXDLIN( 325)									Float _y52 = ((int)2 * (_y51 - (this->x * this->z)));
HXDLIN( 325)									_y44 = ::Math_obj::atan2(_y52,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 325)									Float value56 = (this->x * this->y);
HXDLIN( 325)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 325)									Float _z53;
HXDLIN( 325)									if ((value57 < (int)-1)) {
HXLINE( 325)										_z53 = (int)-1;
            									}
            									else {
HXLINE( 325)										if ((value57 > (int)1)) {
HXLINE( 325)											_z53 = (int)1;
            										}
            										else {
HXLINE( 325)											_z53 = value57;
            										}
            									}
HXDLIN( 325)									_z44 = ::Math_obj::asin(_z53);
            								}
            								else {
HXLINE( 325)									if ((order4 == (int)5)) {
HXLINE( 325)										Float _x53 = (this->x * this->w);
HXDLIN( 325)										Float _x54 = ((int)2 * (_x53 + (this->y * this->z)));
HXDLIN( 325)										_x44 = ::Math_obj::atan2(_x54,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 325)										Float _y53 = (this->x * this->z);
HXDLIN( 325)										Float _y54 = ((int)2 * (_y53 + (this->y * this->w)));
HXDLIN( 325)										_y44 = ::Math_obj::atan2(_y54,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 325)										Float value58 = (this->z * this->w);
HXDLIN( 325)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 325)										Float _z54;
HXDLIN( 325)										if ((value59 < (int)-1)) {
HXLINE( 325)											_z54 = (int)-1;
            										}
            										else {
HXLINE( 325)											if ((value59 > (int)1)) {
HXLINE( 325)												_z54 = (int)1;
            											}
            											else {
HXLINE( 325)												_z54 = value59;
            											}
            										}
HXDLIN( 325)										_z44 = ::Math_obj::asin(_z54);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 325)				{
HXLINE( 325)					bool prev4 = _this4->ignore_listeners;
HXDLIN( 325)					_this4->ignore_listeners = true;
HXDLIN( 325)					{
HXLINE( 325)						_this4->x = _x44;
HXDLIN( 325)						if (!(_this4->_construct)) {
HXLINE( 325)							bool _hx_tmp38;
HXDLIN( 325)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 325)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp38 = false;
            							}
HXDLIN( 325)							if (_hx_tmp38) {
HXLINE( 325)								_this4->listen_x(_x44);
            							}
            						}
            					}
HXDLIN( 325)					{
HXLINE( 325)						_this4->y = _y44;
HXDLIN( 325)						if (!(_this4->_construct)) {
HXLINE( 325)							bool _hx_tmp39;
HXDLIN( 325)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 325)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp39 = false;
            							}
HXDLIN( 325)							if (_hx_tmp39) {
HXLINE( 325)								_this4->listen_y(_y44);
            							}
            						}
            					}
HXDLIN( 325)					{
HXLINE( 325)						_this4->z = _z44;
HXDLIN( 325)						if (!(_this4->_construct)) {
HXLINE( 325)							bool _hx_tmp40;
HXDLIN( 325)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 325)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 325)								_hx_tmp40 = false;
            							}
HXDLIN( 325)							if (_hx_tmp40) {
HXLINE( 325)								_this4->listen_z(_z44);
            							}
            						}
            					}
HXDLIN( 325)					_this4->ignore_listeners = prev4;
HXDLIN( 325)					bool _hx_tmp41;
HXDLIN( 325)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 325)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp41 = false;
            					}
HXDLIN( 325)					if (_hx_tmp41) {
HXLINE( 325)						_this4->listen_x(_this4->x);
            					}
HXDLIN( 325)					bool _hx_tmp42;
HXDLIN( 325)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 325)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp42 = false;
            					}
HXDLIN( 325)					if (_hx_tmp42) {
HXLINE( 325)						_this4->listen_y(_this4->y);
            					}
HXDLIN( 325)					bool _hx_tmp43;
HXDLIN( 325)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 325)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 325)						_hx_tmp43 = false;
            					}
HXDLIN( 325)					if (_hx_tmp43) {
HXLINE( 325)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN( 325)			bool _hx_tmp44;
HXDLIN( 325)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 325)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 325)				_hx_tmp44 = false;
            			}
HXDLIN( 325)			if (_hx_tmp44) {
HXLINE( 325)				this->listen_x(this->x);
            			}
HXDLIN( 325)			bool _hx_tmp45;
HXDLIN( 325)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 325)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 325)				_hx_tmp45 = false;
            			}
HXDLIN( 325)			if (_hx_tmp45) {
HXLINE( 325)				this->listen_y(this->y);
            			}
HXDLIN( 325)			bool _hx_tmp46;
HXDLIN( 325)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 325)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 325)				_hx_tmp46 = false;
            			}
HXDLIN( 325)			if (_hx_tmp46) {
HXLINE( 325)				this->listen_z(this->z);
            			}
HXDLIN( 325)			bool _hx_tmp47;
HXDLIN( 325)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 325)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 325)				_hx_tmp47 = false;
            			}
HXDLIN( 325)			if (_hx_tmp47) {
HXLINE( 325)				this->listen_w(this->w);
            			}
            		}
HXLINE( 330)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,multiplyQuaternions,return )

 ::phoenix::Quaternion Quaternion_obj::slerp( ::phoenix::Quaternion _qb,Float _t){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_335_slerp)
HXLINE( 337)		Float _x = this->x;
HXLINE( 338)		Float _y = this->y;
HXLINE( 339)		Float _z = this->z;
HXLINE( 340)		Float _w = this->w;
HXLINE( 344)		Float cosHalfTheta = (_w * _qb->w);
HXDLIN( 344)		Float cosHalfTheta1 = (cosHalfTheta + (_x * _qb->x));
HXDLIN( 344)		Float cosHalfTheta2 = (cosHalfTheta1 + (_y * _qb->y));
HXDLIN( 344)		Float cosHalfTheta3 = (cosHalfTheta2 + (_z * _qb->z));
HXLINE( 346)		if ((cosHalfTheta3 < (int)0)) {
HXLINE( 348)			{
HXLINE( 348)				this->x = -(_qb->x);
HXDLIN( 348)				if (!(this->_construct)) {
HXLINE( 348)					bool _hx_tmp;
HXDLIN( 348)					bool _hx_tmp1;
HXDLIN( 348)					if (hx::IsNotNull( this->euler )) {
HXLINE( 348)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 348)						_hx_tmp1 = true;
            					}
HXDLIN( 348)					if (!(_hx_tmp1)) {
HXLINE( 348)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 348)						_hx_tmp = true;
            					}
HXDLIN( 348)					if (!(_hx_tmp)) {
HXLINE( 348)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 348)						int order = (int)0;
HXDLIN( 348)						Float sqx = (this->x * this->x);
HXDLIN( 348)						Float sqy = (this->y * this->y);
HXDLIN( 348)						Float sqz = (this->z * this->z);
HXDLIN( 348)						Float sqw = (this->w * this->w);
HXDLIN( 348)						Float _x1 = _this->x;
HXDLIN( 348)						Float _y1 = _this->y;
HXDLIN( 348)						Float _z1 = _this->z;
HXDLIN( 348)						if ((order == (int)0)) {
HXLINE( 348)							Float _x2 = (this->x * this->w);
HXDLIN( 348)							Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN( 348)							_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 348)							Float value = (this->x * this->z);
HXDLIN( 348)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 348)							Float _y2;
HXDLIN( 348)							if ((value1 < (int)-1)) {
HXLINE( 348)								_y2 = (int)-1;
            							}
            							else {
HXLINE( 348)								if ((value1 > (int)1)) {
HXLINE( 348)									_y2 = (int)1;
            								}
            								else {
HXLINE( 348)									_y2 = value1;
            								}
            							}
HXDLIN( 348)							_y1 = ::Math_obj::asin(_y2);
HXDLIN( 348)							Float _z2 = (this->z * this->w);
HXDLIN( 348)							Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 348)							_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 348)							if ((order == (int)1)) {
HXLINE( 348)								Float value2 = (this->x * this->w);
HXDLIN( 348)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 348)								Float _x4;
HXDLIN( 348)								if ((value3 < (int)-1)) {
HXLINE( 348)									_x4 = (int)-1;
            								}
            								else {
HXLINE( 348)									if ((value3 > (int)1)) {
HXLINE( 348)										_x4 = (int)1;
            									}
            									else {
HXLINE( 348)										_x4 = value3;
            									}
            								}
HXDLIN( 348)								_x1 = ::Math_obj::asin(_x4);
HXDLIN( 348)								Float _y3 = (this->x * this->z);
HXDLIN( 348)								Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 348)								_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 348)								Float _z4 = (this->x * this->y);
HXDLIN( 348)								Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 348)								_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 348)								if ((order == (int)2)) {
HXLINE( 348)									Float value4 = (this->x * this->w);
HXDLIN( 348)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 348)									Float _x5;
HXDLIN( 348)									if ((value5 < (int)-1)) {
HXLINE( 348)										_x5 = (int)-1;
            									}
            									else {
HXLINE( 348)										if ((value5 > (int)1)) {
HXLINE( 348)											_x5 = (int)1;
            										}
            										else {
HXLINE( 348)											_x5 = value5;
            										}
            									}
HXDLIN( 348)									_x1 = ::Math_obj::asin(_x5);
HXDLIN( 348)									Float _y5 = (this->y * this->w);
HXDLIN( 348)									Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 348)									_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 348)									Float _z6 = (this->z * this->w);
HXDLIN( 348)									Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 348)									_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 348)									if ((order == (int)3)) {
HXLINE( 348)										Float _x6 = (this->x * this->w);
HXDLIN( 348)										Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN( 348)										_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 348)										Float value6 = (this->y * this->w);
HXDLIN( 348)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 348)										Float _y7;
HXDLIN( 348)										if ((value7 < (int)-1)) {
HXLINE( 348)											_y7 = (int)-1;
            										}
            										else {
HXLINE( 348)											if ((value7 > (int)1)) {
HXLINE( 348)												_y7 = (int)1;
            											}
            											else {
HXLINE( 348)												_y7 = value7;
            											}
            										}
HXDLIN( 348)										_y1 = ::Math_obj::asin(_y7);
HXDLIN( 348)										Float _z8 = (this->x * this->y);
HXDLIN( 348)										Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 348)										_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 348)										if ((order == (int)4)) {
HXLINE( 348)											Float _x8 = (this->x * this->w);
HXDLIN( 348)											Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN( 348)											_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 348)											Float _y8 = (this->y * this->w);
HXDLIN( 348)											Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 348)											_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 348)											Float value8 = (this->x * this->y);
HXDLIN( 348)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 348)											Float _z10;
HXDLIN( 348)											if ((value9 < (int)-1)) {
HXLINE( 348)												_z10 = (int)-1;
            											}
            											else {
HXLINE( 348)												if ((value9 > (int)1)) {
HXLINE( 348)													_z10 = (int)1;
            												}
            												else {
HXLINE( 348)													_z10 = value9;
            												}
            											}
HXDLIN( 348)											_z1 = ::Math_obj::asin(_z10);
            										}
            										else {
HXLINE( 348)											if ((order == (int)5)) {
HXLINE( 348)												Float _x10 = (this->x * this->w);
HXDLIN( 348)												Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN( 348)												_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 348)												Float _y10 = (this->x * this->z);
HXDLIN( 348)												Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 348)												_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 348)												Float value10 = (this->z * this->w);
HXDLIN( 348)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 348)												Float _z11;
HXDLIN( 348)												if ((value11 < (int)-1)) {
HXLINE( 348)													_z11 = (int)-1;
            												}
            												else {
HXLINE( 348)													if ((value11 > (int)1)) {
HXLINE( 348)														_z11 = (int)1;
            													}
            													else {
HXLINE( 348)														_z11 = value11;
            													}
            												}
HXDLIN( 348)												_z1 = ::Math_obj::asin(_z11);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 348)						{
HXLINE( 348)							bool prev = _this->ignore_listeners;
HXDLIN( 348)							_this->ignore_listeners = true;
HXDLIN( 348)							{
HXLINE( 348)								_this->x = _x1;
HXDLIN( 348)								if (!(_this->_construct)) {
HXLINE( 348)									bool _hx_tmp2;
HXDLIN( 348)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 348)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 348)										_hx_tmp2 = false;
            									}
HXDLIN( 348)									if (_hx_tmp2) {
HXLINE( 348)										_this->listen_x(_x1);
            									}
            								}
            							}
HXDLIN( 348)							{
HXLINE( 348)								_this->y = _y1;
HXDLIN( 348)								if (!(_this->_construct)) {
HXLINE( 348)									bool _hx_tmp3;
HXDLIN( 348)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 348)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 348)										_hx_tmp3 = false;
            									}
HXDLIN( 348)									if (_hx_tmp3) {
HXLINE( 348)										_this->listen_y(_y1);
            									}
            								}
            							}
HXDLIN( 348)							{
HXLINE( 348)								_this->z = _z1;
HXDLIN( 348)								if (!(_this->_construct)) {
HXLINE( 348)									bool _hx_tmp4;
HXDLIN( 348)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 348)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 348)										_hx_tmp4 = false;
            									}
HXDLIN( 348)									if (_hx_tmp4) {
HXLINE( 348)										_this->listen_z(_z1);
            									}
            								}
            							}
HXDLIN( 348)							_this->ignore_listeners = prev;
HXDLIN( 348)							bool _hx_tmp5;
HXDLIN( 348)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 348)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 348)								_hx_tmp5 = false;
            							}
HXDLIN( 348)							if (_hx_tmp5) {
HXLINE( 348)								_this->listen_x(_this->x);
            							}
HXDLIN( 348)							bool _hx_tmp6;
HXDLIN( 348)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 348)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 348)								_hx_tmp6 = false;
            							}
HXDLIN( 348)							if (_hx_tmp6) {
HXLINE( 348)								_this->listen_y(_this->y);
            							}
HXDLIN( 348)							bool _hx_tmp7;
HXDLIN( 348)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 348)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 348)								_hx_tmp7 = false;
            							}
HXDLIN( 348)							if (_hx_tmp7) {
HXLINE( 348)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 348)					bool _hx_tmp8;
HXDLIN( 348)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 348)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 348)						_hx_tmp8 = false;
            					}
HXDLIN( 348)					if (_hx_tmp8) {
HXLINE( 348)						this->listen_x(this->x);
            					}
            				}
            			}
HXLINE( 349)			{
HXLINE( 349)				this->y = -(_qb->y);
HXDLIN( 349)				if (!(this->_construct)) {
HXLINE( 349)					bool _hx_tmp9;
HXDLIN( 349)					bool _hx_tmp10;
HXDLIN( 349)					if (hx::IsNotNull( this->euler )) {
HXLINE( 349)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 349)						_hx_tmp10 = true;
            					}
HXDLIN( 349)					if (!(_hx_tmp10)) {
HXLINE( 349)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 349)						_hx_tmp9 = true;
            					}
HXDLIN( 349)					if (!(_hx_tmp9)) {
HXLINE( 349)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 349)						int order1 = (int)0;
HXDLIN( 349)						Float sqx1 = (this->x * this->x);
HXDLIN( 349)						Float sqy1 = (this->y * this->y);
HXDLIN( 349)						Float sqz1 = (this->z * this->z);
HXDLIN( 349)						Float sqw1 = (this->w * this->w);
HXDLIN( 349)						Float _x12 = _this1->x;
HXDLIN( 349)						Float _y12 = _this1->y;
HXDLIN( 349)						Float _z12 = _this1->z;
HXDLIN( 349)						if ((order1 == (int)0)) {
HXLINE( 349)							Float _x13 = (this->x * this->w);
HXDLIN( 349)							Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN( 349)							_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 349)							Float value12 = (this->x * this->z);
HXDLIN( 349)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 349)							Float _y13;
HXDLIN( 349)							if ((value13 < (int)-1)) {
HXLINE( 349)								_y13 = (int)-1;
            							}
            							else {
HXLINE( 349)								if ((value13 > (int)1)) {
HXLINE( 349)									_y13 = (int)1;
            								}
            								else {
HXLINE( 349)									_y13 = value13;
            								}
            							}
HXDLIN( 349)							_y12 = ::Math_obj::asin(_y13);
HXDLIN( 349)							Float _z13 = (this->z * this->w);
HXDLIN( 349)							Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 349)							_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 349)							if ((order1 == (int)1)) {
HXLINE( 349)								Float value14 = (this->x * this->w);
HXDLIN( 349)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 349)								Float _x15;
HXDLIN( 349)								if ((value15 < (int)-1)) {
HXLINE( 349)									_x15 = (int)-1;
            								}
            								else {
HXLINE( 349)									if ((value15 > (int)1)) {
HXLINE( 349)										_x15 = (int)1;
            									}
            									else {
HXLINE( 349)										_x15 = value15;
            									}
            								}
HXDLIN( 349)								_x12 = ::Math_obj::asin(_x15);
HXDLIN( 349)								Float _y14 = (this->x * this->z);
HXDLIN( 349)								Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 349)								_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 349)								Float _z15 = (this->x * this->y);
HXDLIN( 349)								Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 349)								_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 349)								if ((order1 == (int)2)) {
HXLINE( 349)									Float value16 = (this->x * this->w);
HXDLIN( 349)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 349)									Float _x16;
HXDLIN( 349)									if ((value17 < (int)-1)) {
HXLINE( 349)										_x16 = (int)-1;
            									}
            									else {
HXLINE( 349)										if ((value17 > (int)1)) {
HXLINE( 349)											_x16 = (int)1;
            										}
            										else {
HXLINE( 349)											_x16 = value17;
            										}
            									}
HXDLIN( 349)									_x12 = ::Math_obj::asin(_x16);
HXDLIN( 349)									Float _y16 = (this->y * this->w);
HXDLIN( 349)									Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 349)									_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 349)									Float _z17 = (this->z * this->w);
HXDLIN( 349)									Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 349)									_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 349)									if ((order1 == (int)3)) {
HXLINE( 349)										Float _x17 = (this->x * this->w);
HXDLIN( 349)										Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN( 349)										_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 349)										Float value18 = (this->y * this->w);
HXDLIN( 349)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 349)										Float _y18;
HXDLIN( 349)										if ((value19 < (int)-1)) {
HXLINE( 349)											_y18 = (int)-1;
            										}
            										else {
HXLINE( 349)											if ((value19 > (int)1)) {
HXLINE( 349)												_y18 = (int)1;
            											}
            											else {
HXLINE( 349)												_y18 = value19;
            											}
            										}
HXDLIN( 349)										_y12 = ::Math_obj::asin(_y18);
HXDLIN( 349)										Float _z19 = (this->x * this->y);
HXDLIN( 349)										Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 349)										_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 349)										if ((order1 == (int)4)) {
HXLINE( 349)											Float _x19 = (this->x * this->w);
HXDLIN( 349)											Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN( 349)											_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 349)											Float _y19 = (this->y * this->w);
HXDLIN( 349)											Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 349)											_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 349)											Float value20 = (this->x * this->y);
HXDLIN( 349)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 349)											Float _z21;
HXDLIN( 349)											if ((value21 < (int)-1)) {
HXLINE( 349)												_z21 = (int)-1;
            											}
            											else {
HXLINE( 349)												if ((value21 > (int)1)) {
HXLINE( 349)													_z21 = (int)1;
            												}
            												else {
HXLINE( 349)													_z21 = value21;
            												}
            											}
HXDLIN( 349)											_z12 = ::Math_obj::asin(_z21);
            										}
            										else {
HXLINE( 349)											if ((order1 == (int)5)) {
HXLINE( 349)												Float _x21 = (this->x * this->w);
HXDLIN( 349)												Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN( 349)												_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 349)												Float _y21 = (this->x * this->z);
HXDLIN( 349)												Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 349)												_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 349)												Float value22 = (this->z * this->w);
HXDLIN( 349)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 349)												Float _z22;
HXDLIN( 349)												if ((value23 < (int)-1)) {
HXLINE( 349)													_z22 = (int)-1;
            												}
            												else {
HXLINE( 349)													if ((value23 > (int)1)) {
HXLINE( 349)														_z22 = (int)1;
            													}
            													else {
HXLINE( 349)														_z22 = value23;
            													}
            												}
HXDLIN( 349)												_z12 = ::Math_obj::asin(_z22);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 349)						{
HXLINE( 349)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 349)							_this1->ignore_listeners = true;
HXDLIN( 349)							{
HXLINE( 349)								_this1->x = _x12;
HXDLIN( 349)								if (!(_this1->_construct)) {
HXLINE( 349)									bool _hx_tmp11;
HXDLIN( 349)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 349)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 349)										_hx_tmp11 = false;
            									}
HXDLIN( 349)									if (_hx_tmp11) {
HXLINE( 349)										_this1->listen_x(_x12);
            									}
            								}
            							}
HXDLIN( 349)							{
HXLINE( 349)								_this1->y = _y12;
HXDLIN( 349)								if (!(_this1->_construct)) {
HXLINE( 349)									bool _hx_tmp12;
HXDLIN( 349)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 349)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 349)										_hx_tmp12 = false;
            									}
HXDLIN( 349)									if (_hx_tmp12) {
HXLINE( 349)										_this1->listen_y(_y12);
            									}
            								}
            							}
HXDLIN( 349)							{
HXLINE( 349)								_this1->z = _z12;
HXDLIN( 349)								if (!(_this1->_construct)) {
HXLINE( 349)									bool _hx_tmp13;
HXDLIN( 349)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 349)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 349)										_hx_tmp13 = false;
            									}
HXDLIN( 349)									if (_hx_tmp13) {
HXLINE( 349)										_this1->listen_z(_z12);
            									}
            								}
            							}
HXDLIN( 349)							_this1->ignore_listeners = prev1;
HXDLIN( 349)							bool _hx_tmp14;
HXDLIN( 349)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 349)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 349)								_hx_tmp14 = false;
            							}
HXDLIN( 349)							if (_hx_tmp14) {
HXLINE( 349)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 349)							bool _hx_tmp15;
HXDLIN( 349)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 349)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 349)								_hx_tmp15 = false;
            							}
HXDLIN( 349)							if (_hx_tmp15) {
HXLINE( 349)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 349)							bool _hx_tmp16;
HXDLIN( 349)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 349)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 349)								_hx_tmp16 = false;
            							}
HXDLIN( 349)							if (_hx_tmp16) {
HXLINE( 349)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 349)					bool _hx_tmp17;
HXDLIN( 349)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 349)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 349)						_hx_tmp17 = false;
            					}
HXDLIN( 349)					if (_hx_tmp17) {
HXLINE( 349)						this->listen_y(this->y);
            					}
            				}
            			}
HXLINE( 350)			{
HXLINE( 350)				this->z = -(_qb->z);
HXDLIN( 350)				if (!(this->_construct)) {
HXLINE( 350)					bool _hx_tmp18;
HXDLIN( 350)					bool _hx_tmp19;
HXDLIN( 350)					if (hx::IsNotNull( this->euler )) {
HXLINE( 350)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 350)						_hx_tmp19 = true;
            					}
HXDLIN( 350)					if (!(_hx_tmp19)) {
HXLINE( 350)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 350)						_hx_tmp18 = true;
            					}
HXDLIN( 350)					if (!(_hx_tmp18)) {
HXLINE( 350)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 350)						int order2 = (int)0;
HXDLIN( 350)						Float sqx2 = (this->x * this->x);
HXDLIN( 350)						Float sqy2 = (this->y * this->y);
HXDLIN( 350)						Float sqz2 = (this->z * this->z);
HXDLIN( 350)						Float sqw2 = (this->w * this->w);
HXDLIN( 350)						Float _x23 = _this2->x;
HXDLIN( 350)						Float _y23 = _this2->y;
HXDLIN( 350)						Float _z23 = _this2->z;
HXDLIN( 350)						if ((order2 == (int)0)) {
HXLINE( 350)							Float _x24 = (this->x * this->w);
HXDLIN( 350)							Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN( 350)							_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 350)							Float value24 = (this->x * this->z);
HXDLIN( 350)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 350)							Float _y24;
HXDLIN( 350)							if ((value25 < (int)-1)) {
HXLINE( 350)								_y24 = (int)-1;
            							}
            							else {
HXLINE( 350)								if ((value25 > (int)1)) {
HXLINE( 350)									_y24 = (int)1;
            								}
            								else {
HXLINE( 350)									_y24 = value25;
            								}
            							}
HXDLIN( 350)							_y23 = ::Math_obj::asin(_y24);
HXDLIN( 350)							Float _z24 = (this->z * this->w);
HXDLIN( 350)							Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 350)							_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 350)							if ((order2 == (int)1)) {
HXLINE( 350)								Float value26 = (this->x * this->w);
HXDLIN( 350)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 350)								Float _x26;
HXDLIN( 350)								if ((value27 < (int)-1)) {
HXLINE( 350)									_x26 = (int)-1;
            								}
            								else {
HXLINE( 350)									if ((value27 > (int)1)) {
HXLINE( 350)										_x26 = (int)1;
            									}
            									else {
HXLINE( 350)										_x26 = value27;
            									}
            								}
HXDLIN( 350)								_x23 = ::Math_obj::asin(_x26);
HXDLIN( 350)								Float _y25 = (this->x * this->z);
HXDLIN( 350)								Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 350)								_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 350)								Float _z26 = (this->x * this->y);
HXDLIN( 350)								Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 350)								_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 350)								if ((order2 == (int)2)) {
HXLINE( 350)									Float value28 = (this->x * this->w);
HXDLIN( 350)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 350)									Float _x27;
HXDLIN( 350)									if ((value29 < (int)-1)) {
HXLINE( 350)										_x27 = (int)-1;
            									}
            									else {
HXLINE( 350)										if ((value29 > (int)1)) {
HXLINE( 350)											_x27 = (int)1;
            										}
            										else {
HXLINE( 350)											_x27 = value29;
            										}
            									}
HXDLIN( 350)									_x23 = ::Math_obj::asin(_x27);
HXDLIN( 350)									Float _y27 = (this->y * this->w);
HXDLIN( 350)									Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 350)									_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 350)									Float _z28 = (this->z * this->w);
HXDLIN( 350)									Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 350)									_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 350)									if ((order2 == (int)3)) {
HXLINE( 350)										Float _x28 = (this->x * this->w);
HXDLIN( 350)										Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN( 350)										_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 350)										Float value30 = (this->y * this->w);
HXDLIN( 350)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 350)										Float _y29;
HXDLIN( 350)										if ((value31 < (int)-1)) {
HXLINE( 350)											_y29 = (int)-1;
            										}
            										else {
HXLINE( 350)											if ((value31 > (int)1)) {
HXLINE( 350)												_y29 = (int)1;
            											}
            											else {
HXLINE( 350)												_y29 = value31;
            											}
            										}
HXDLIN( 350)										_y23 = ::Math_obj::asin(_y29);
HXDLIN( 350)										Float _z30 = (this->x * this->y);
HXDLIN( 350)										Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 350)										_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 350)										if ((order2 == (int)4)) {
HXLINE( 350)											Float _x30 = (this->x * this->w);
HXDLIN( 350)											Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN( 350)											_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 350)											Float _y30 = (this->y * this->w);
HXDLIN( 350)											Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 350)											_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 350)											Float value32 = (this->x * this->y);
HXDLIN( 350)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 350)											Float _z32;
HXDLIN( 350)											if ((value33 < (int)-1)) {
HXLINE( 350)												_z32 = (int)-1;
            											}
            											else {
HXLINE( 350)												if ((value33 > (int)1)) {
HXLINE( 350)													_z32 = (int)1;
            												}
            												else {
HXLINE( 350)													_z32 = value33;
            												}
            											}
HXDLIN( 350)											_z23 = ::Math_obj::asin(_z32);
            										}
            										else {
HXLINE( 350)											if ((order2 == (int)5)) {
HXLINE( 350)												Float _x32 = (this->x * this->w);
HXDLIN( 350)												Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN( 350)												_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 350)												Float _y32 = (this->x * this->z);
HXDLIN( 350)												Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 350)												_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 350)												Float value34 = (this->z * this->w);
HXDLIN( 350)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 350)												Float _z33;
HXDLIN( 350)												if ((value35 < (int)-1)) {
HXLINE( 350)													_z33 = (int)-1;
            												}
            												else {
HXLINE( 350)													if ((value35 > (int)1)) {
HXLINE( 350)														_z33 = (int)1;
            													}
            													else {
HXLINE( 350)														_z33 = value35;
            													}
            												}
HXDLIN( 350)												_z23 = ::Math_obj::asin(_z33);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 350)						{
HXLINE( 350)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 350)							_this2->ignore_listeners = true;
HXDLIN( 350)							{
HXLINE( 350)								_this2->x = _x23;
HXDLIN( 350)								if (!(_this2->_construct)) {
HXLINE( 350)									bool _hx_tmp20;
HXDLIN( 350)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 350)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 350)										_hx_tmp20 = false;
            									}
HXDLIN( 350)									if (_hx_tmp20) {
HXLINE( 350)										_this2->listen_x(_x23);
            									}
            								}
            							}
HXDLIN( 350)							{
HXLINE( 350)								_this2->y = _y23;
HXDLIN( 350)								if (!(_this2->_construct)) {
HXLINE( 350)									bool _hx_tmp21;
HXDLIN( 350)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 350)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 350)										_hx_tmp21 = false;
            									}
HXDLIN( 350)									if (_hx_tmp21) {
HXLINE( 350)										_this2->listen_y(_y23);
            									}
            								}
            							}
HXDLIN( 350)							{
HXLINE( 350)								_this2->z = _z23;
HXDLIN( 350)								if (!(_this2->_construct)) {
HXLINE( 350)									bool _hx_tmp22;
HXDLIN( 350)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 350)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 350)										_hx_tmp22 = false;
            									}
HXDLIN( 350)									if (_hx_tmp22) {
HXLINE( 350)										_this2->listen_z(_z23);
            									}
            								}
            							}
HXDLIN( 350)							_this2->ignore_listeners = prev2;
HXDLIN( 350)							bool _hx_tmp23;
HXDLIN( 350)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 350)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 350)								_hx_tmp23 = false;
            							}
HXDLIN( 350)							if (_hx_tmp23) {
HXLINE( 350)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 350)							bool _hx_tmp24;
HXDLIN( 350)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 350)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 350)								_hx_tmp24 = false;
            							}
HXDLIN( 350)							if (_hx_tmp24) {
HXLINE( 350)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 350)							bool _hx_tmp25;
HXDLIN( 350)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 350)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 350)								_hx_tmp25 = false;
            							}
HXDLIN( 350)							if (_hx_tmp25) {
HXLINE( 350)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 350)					bool _hx_tmp26;
HXDLIN( 350)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 350)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 350)						_hx_tmp26 = false;
            					}
HXDLIN( 350)					if (_hx_tmp26) {
HXLINE( 350)						this->listen_z(this->z);
            					}
            				}
            			}
HXLINE( 351)			{
HXLINE( 351)				this->w = -(_qb->w);
HXDLIN( 351)				if (!(this->_construct)) {
HXLINE( 351)					bool _hx_tmp27;
HXDLIN( 351)					bool _hx_tmp28;
HXDLIN( 351)					if (hx::IsNotNull( this->euler )) {
HXLINE( 351)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE( 351)						_hx_tmp28 = true;
            					}
HXDLIN( 351)					if (!(_hx_tmp28)) {
HXLINE( 351)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE( 351)						_hx_tmp27 = true;
            					}
HXDLIN( 351)					if (!(_hx_tmp27)) {
HXLINE( 351)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 351)						int order3 = (int)0;
HXDLIN( 351)						Float sqx3 = (this->x * this->x);
HXDLIN( 351)						Float sqy3 = (this->y * this->y);
HXDLIN( 351)						Float sqz3 = (this->z * this->z);
HXDLIN( 351)						Float sqw3 = (this->w * this->w);
HXDLIN( 351)						Float _x34 = _this3->x;
HXDLIN( 351)						Float _y34 = _this3->y;
HXDLIN( 351)						Float _z34 = _this3->z;
HXDLIN( 351)						if ((order3 == (int)0)) {
HXLINE( 351)							Float _x35 = (this->x * this->w);
HXDLIN( 351)							Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN( 351)							_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 351)							Float value36 = (this->x * this->z);
HXDLIN( 351)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 351)							Float _y35;
HXDLIN( 351)							if ((value37 < (int)-1)) {
HXLINE( 351)								_y35 = (int)-1;
            							}
            							else {
HXLINE( 351)								if ((value37 > (int)1)) {
HXLINE( 351)									_y35 = (int)1;
            								}
            								else {
HXLINE( 351)									_y35 = value37;
            								}
            							}
HXDLIN( 351)							_y34 = ::Math_obj::asin(_y35);
HXDLIN( 351)							Float _z35 = (this->z * this->w);
HXDLIN( 351)							Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 351)							_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 351)							if ((order3 == (int)1)) {
HXLINE( 351)								Float value38 = (this->x * this->w);
HXDLIN( 351)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 351)								Float _x37;
HXDLIN( 351)								if ((value39 < (int)-1)) {
HXLINE( 351)									_x37 = (int)-1;
            								}
            								else {
HXLINE( 351)									if ((value39 > (int)1)) {
HXLINE( 351)										_x37 = (int)1;
            									}
            									else {
HXLINE( 351)										_x37 = value39;
            									}
            								}
HXDLIN( 351)								_x34 = ::Math_obj::asin(_x37);
HXDLIN( 351)								Float _y36 = (this->x * this->z);
HXDLIN( 351)								Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 351)								_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 351)								Float _z37 = (this->x * this->y);
HXDLIN( 351)								Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 351)								_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 351)								if ((order3 == (int)2)) {
HXLINE( 351)									Float value40 = (this->x * this->w);
HXDLIN( 351)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 351)									Float _x38;
HXDLIN( 351)									if ((value41 < (int)-1)) {
HXLINE( 351)										_x38 = (int)-1;
            									}
            									else {
HXLINE( 351)										if ((value41 > (int)1)) {
HXLINE( 351)											_x38 = (int)1;
            										}
            										else {
HXLINE( 351)											_x38 = value41;
            										}
            									}
HXDLIN( 351)									_x34 = ::Math_obj::asin(_x38);
HXDLIN( 351)									Float _y38 = (this->y * this->w);
HXDLIN( 351)									Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 351)									_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 351)									Float _z39 = (this->z * this->w);
HXDLIN( 351)									Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 351)									_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 351)									if ((order3 == (int)3)) {
HXLINE( 351)										Float _x39 = (this->x * this->w);
HXDLIN( 351)										Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN( 351)										_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 351)										Float value42 = (this->y * this->w);
HXDLIN( 351)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 351)										Float _y40;
HXDLIN( 351)										if ((value43 < (int)-1)) {
HXLINE( 351)											_y40 = (int)-1;
            										}
            										else {
HXLINE( 351)											if ((value43 > (int)1)) {
HXLINE( 351)												_y40 = (int)1;
            											}
            											else {
HXLINE( 351)												_y40 = value43;
            											}
            										}
HXDLIN( 351)										_y34 = ::Math_obj::asin(_y40);
HXDLIN( 351)										Float _z41 = (this->x * this->y);
HXDLIN( 351)										Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 351)										_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 351)										if ((order3 == (int)4)) {
HXLINE( 351)											Float _x41 = (this->x * this->w);
HXDLIN( 351)											Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN( 351)											_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 351)											Float _y41 = (this->y * this->w);
HXDLIN( 351)											Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 351)											_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 351)											Float value44 = (this->x * this->y);
HXDLIN( 351)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 351)											Float _z43;
HXDLIN( 351)											if ((value45 < (int)-1)) {
HXLINE( 351)												_z43 = (int)-1;
            											}
            											else {
HXLINE( 351)												if ((value45 > (int)1)) {
HXLINE( 351)													_z43 = (int)1;
            												}
            												else {
HXLINE( 351)													_z43 = value45;
            												}
            											}
HXDLIN( 351)											_z34 = ::Math_obj::asin(_z43);
            										}
            										else {
HXLINE( 351)											if ((order3 == (int)5)) {
HXLINE( 351)												Float _x43 = (this->x * this->w);
HXDLIN( 351)												Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN( 351)												_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 351)												Float _y43 = (this->x * this->z);
HXDLIN( 351)												Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 351)												_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 351)												Float value46 = (this->z * this->w);
HXDLIN( 351)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 351)												Float _z44;
HXDLIN( 351)												if ((value47 < (int)-1)) {
HXLINE( 351)													_z44 = (int)-1;
            												}
            												else {
HXLINE( 351)													if ((value47 > (int)1)) {
HXLINE( 351)														_z44 = (int)1;
            													}
            													else {
HXLINE( 351)														_z44 = value47;
            													}
            												}
HXDLIN( 351)												_z34 = ::Math_obj::asin(_z44);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 351)						{
HXLINE( 351)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 351)							_this3->ignore_listeners = true;
HXDLIN( 351)							{
HXLINE( 351)								_this3->x = _x34;
HXDLIN( 351)								if (!(_this3->_construct)) {
HXLINE( 351)									bool _hx_tmp29;
HXDLIN( 351)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 351)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 351)										_hx_tmp29 = false;
            									}
HXDLIN( 351)									if (_hx_tmp29) {
HXLINE( 351)										_this3->listen_x(_x34);
            									}
            								}
            							}
HXDLIN( 351)							{
HXLINE( 351)								_this3->y = _y34;
HXDLIN( 351)								if (!(_this3->_construct)) {
HXLINE( 351)									bool _hx_tmp30;
HXDLIN( 351)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 351)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 351)										_hx_tmp30 = false;
            									}
HXDLIN( 351)									if (_hx_tmp30) {
HXLINE( 351)										_this3->listen_y(_y34);
            									}
            								}
            							}
HXDLIN( 351)							{
HXLINE( 351)								_this3->z = _z34;
HXDLIN( 351)								if (!(_this3->_construct)) {
HXLINE( 351)									bool _hx_tmp31;
HXDLIN( 351)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 351)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 351)										_hx_tmp31 = false;
            									}
HXDLIN( 351)									if (_hx_tmp31) {
HXLINE( 351)										_this3->listen_z(_z34);
            									}
            								}
            							}
HXDLIN( 351)							_this3->ignore_listeners = prev3;
HXDLIN( 351)							bool _hx_tmp32;
HXDLIN( 351)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 351)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 351)								_hx_tmp32 = false;
            							}
HXDLIN( 351)							if (_hx_tmp32) {
HXLINE( 351)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 351)							bool _hx_tmp33;
HXDLIN( 351)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 351)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 351)								_hx_tmp33 = false;
            							}
HXDLIN( 351)							if (_hx_tmp33) {
HXLINE( 351)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 351)							bool _hx_tmp34;
HXDLIN( 351)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 351)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 351)								_hx_tmp34 = false;
            							}
HXDLIN( 351)							if (_hx_tmp34) {
HXLINE( 351)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 351)					bool _hx_tmp35;
HXDLIN( 351)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 351)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 351)						_hx_tmp35 = false;
            					}
HXDLIN( 351)					if (_hx_tmp35) {
HXLINE( 351)						this->listen_w(this->w);
            					}
            				}
            			}
HXLINE( 353)			cosHalfTheta3 = -(cosHalfTheta3);
            		}
            		else {
HXLINE( 357)			this->copy(_qb);
            		}
HXLINE( 361)		if ((cosHalfTheta3 >= ((Float)1.0))) {
HXLINE( 363)			{
HXLINE( 363)				this->ignore_euler = true;
HXDLIN( 363)				{
HXLINE( 363)					this->x = _x;
HXDLIN( 363)					if (!(this->_construct)) {
HXLINE( 363)						bool _hx_tmp36;
HXDLIN( 363)						bool _hx_tmp37;
HXDLIN( 363)						if (hx::IsNotNull( this->euler )) {
HXLINE( 363)							_hx_tmp37 = this->ignore_euler;
            						}
            						else {
HXLINE( 363)							_hx_tmp37 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp37)) {
HXLINE( 363)							_hx_tmp36 = this->_construct;
            						}
            						else {
HXLINE( 363)							_hx_tmp36 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp36)) {
HXLINE( 363)							 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 363)							int order4 = (int)0;
HXDLIN( 363)							Float sqx4 = (this->x * this->x);
HXDLIN( 363)							Float sqy4 = (this->y * this->y);
HXDLIN( 363)							Float sqz4 = (this->z * this->z);
HXDLIN( 363)							Float sqw4 = (this->w * this->w);
HXDLIN( 363)							Float _x45 = _this4->x;
HXDLIN( 363)							Float _y45 = _this4->y;
HXDLIN( 363)							Float _z45 = _this4->z;
HXDLIN( 363)							if ((order4 == (int)0)) {
HXLINE( 363)								Float _x46 = (this->x * this->w);
HXDLIN( 363)								Float _x47 = ((int)2 * (_x46 - (this->y * this->z)));
HXDLIN( 363)								_x45 = ::Math_obj::atan2(_x47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 363)								Float value48 = (this->x * this->z);
HXDLIN( 363)								Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 363)								Float _y46;
HXDLIN( 363)								if ((value49 < (int)-1)) {
HXLINE( 363)									_y46 = (int)-1;
            								}
            								else {
HXLINE( 363)									if ((value49 > (int)1)) {
HXLINE( 363)										_y46 = (int)1;
            									}
            									else {
HXLINE( 363)										_y46 = value49;
            									}
            								}
HXDLIN( 363)								_y45 = ::Math_obj::asin(_y46);
HXDLIN( 363)								Float _z46 = (this->z * this->w);
HXDLIN( 363)								Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN( 363)								_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 363)								if ((order4 == (int)1)) {
HXLINE( 363)									Float value50 = (this->x * this->w);
HXDLIN( 363)									Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 363)									Float _x48;
HXDLIN( 363)									if ((value51 < (int)-1)) {
HXLINE( 363)										_x48 = (int)-1;
            									}
            									else {
HXLINE( 363)										if ((value51 > (int)1)) {
HXLINE( 363)											_x48 = (int)1;
            										}
            										else {
HXLINE( 363)											_x48 = value51;
            										}
            									}
HXDLIN( 363)									_x45 = ::Math_obj::asin(_x48);
HXDLIN( 363)									Float _y47 = (this->x * this->z);
HXDLIN( 363)									Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN( 363)									_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 363)									Float _z48 = (this->x * this->y);
HXDLIN( 363)									Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN( 363)									_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            								}
            								else {
HXLINE( 363)									if ((order4 == (int)2)) {
HXLINE( 363)										Float value52 = (this->x * this->w);
HXDLIN( 363)										Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 363)										Float _x49;
HXDLIN( 363)										if ((value53 < (int)-1)) {
HXLINE( 363)											_x49 = (int)-1;
            										}
            										else {
HXLINE( 363)											if ((value53 > (int)1)) {
HXLINE( 363)												_x49 = (int)1;
            											}
            											else {
HXLINE( 363)												_x49 = value53;
            											}
            										}
HXDLIN( 363)										_x45 = ::Math_obj::asin(_x49);
HXDLIN( 363)										Float _y49 = (this->y * this->w);
HXDLIN( 363)										Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN( 363)										_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 363)										Float _z50 = (this->z * this->w);
HXDLIN( 363)										Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN( 363)										_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            									}
            									else {
HXLINE( 363)										if ((order4 == (int)3)) {
HXLINE( 363)											Float _x50 = (this->x * this->w);
HXDLIN( 363)											Float _x51 = ((int)2 * (_x50 + (this->z * this->y)));
HXDLIN( 363)											_x45 = ::Math_obj::atan2(_x51,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 363)											Float value54 = (this->y * this->w);
HXDLIN( 363)											Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 363)											Float _y51;
HXDLIN( 363)											if ((value55 < (int)-1)) {
HXLINE( 363)												_y51 = (int)-1;
            											}
            											else {
HXLINE( 363)												if ((value55 > (int)1)) {
HXLINE( 363)													_y51 = (int)1;
            												}
            												else {
HXLINE( 363)													_y51 = value55;
            												}
            											}
HXDLIN( 363)											_y45 = ::Math_obj::asin(_y51);
HXDLIN( 363)											Float _z52 = (this->x * this->y);
HXDLIN( 363)											Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN( 363)											_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            										}
            										else {
HXLINE( 363)											if ((order4 == (int)4)) {
HXLINE( 363)												Float _x52 = (this->x * this->w);
HXDLIN( 363)												Float _x53 = ((int)2 * (_x52 - (this->z * this->y)));
HXDLIN( 363)												_x45 = ::Math_obj::atan2(_x53,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 363)												Float _y52 = (this->y * this->w);
HXDLIN( 363)												Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN( 363)												_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 363)												Float value56 = (this->x * this->y);
HXDLIN( 363)												Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 363)												Float _z54;
HXDLIN( 363)												if ((value57 < (int)-1)) {
HXLINE( 363)													_z54 = (int)-1;
            												}
            												else {
HXLINE( 363)													if ((value57 > (int)1)) {
HXLINE( 363)														_z54 = (int)1;
            													}
            													else {
HXLINE( 363)														_z54 = value57;
            													}
            												}
HXDLIN( 363)												_z45 = ::Math_obj::asin(_z54);
            											}
            											else {
HXLINE( 363)												if ((order4 == (int)5)) {
HXLINE( 363)													Float _x54 = (this->x * this->w);
HXDLIN( 363)													Float _x55 = ((int)2 * (_x54 + (this->y * this->z)));
HXDLIN( 363)													_x45 = ::Math_obj::atan2(_x55,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 363)													Float _y54 = (this->x * this->z);
HXDLIN( 363)													Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN( 363)													_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 363)													Float value58 = (this->z * this->w);
HXDLIN( 363)													Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 363)													Float _z55;
HXDLIN( 363)													if ((value59 < (int)-1)) {
HXLINE( 363)														_z55 = (int)-1;
            													}
            													else {
HXLINE( 363)														if ((value59 > (int)1)) {
HXLINE( 363)															_z55 = (int)1;
            														}
            														else {
HXLINE( 363)															_z55 = value59;
            														}
            													}
HXDLIN( 363)													_z45 = ::Math_obj::asin(_z55);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 363)							{
HXLINE( 363)								bool prev4 = _this4->ignore_listeners;
HXDLIN( 363)								_this4->ignore_listeners = true;
HXDLIN( 363)								{
HXLINE( 363)									_this4->x = _x45;
HXDLIN( 363)									if (!(_this4->_construct)) {
HXLINE( 363)										bool _hx_tmp38;
HXDLIN( 363)										if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 363)											_hx_tmp38 = !(_this4->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp38 = false;
            										}
HXDLIN( 363)										if (_hx_tmp38) {
HXLINE( 363)											_this4->listen_x(_x45);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this4->y = _y45;
HXDLIN( 363)									if (!(_this4->_construct)) {
HXLINE( 363)										bool _hx_tmp39;
HXDLIN( 363)										if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 363)											_hx_tmp39 = !(_this4->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp39 = false;
            										}
HXDLIN( 363)										if (_hx_tmp39) {
HXLINE( 363)											_this4->listen_y(_y45);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this4->z = _z45;
HXDLIN( 363)									if (!(_this4->_construct)) {
HXLINE( 363)										bool _hx_tmp40;
HXDLIN( 363)										if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 363)											_hx_tmp40 = !(_this4->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp40 = false;
            										}
HXDLIN( 363)										if (_hx_tmp40) {
HXLINE( 363)											_this4->listen_z(_z45);
            										}
            									}
            								}
HXDLIN( 363)								_this4->ignore_listeners = prev4;
HXDLIN( 363)								bool _hx_tmp41;
HXDLIN( 363)								if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 363)									_hx_tmp41 = !(_this4->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp41 = false;
            								}
HXDLIN( 363)								if (_hx_tmp41) {
HXLINE( 363)									_this4->listen_x(_this4->x);
            								}
HXDLIN( 363)								bool _hx_tmp42;
HXDLIN( 363)								if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 363)									_hx_tmp42 = !(_this4->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp42 = false;
            								}
HXDLIN( 363)								if (_hx_tmp42) {
HXLINE( 363)									_this4->listen_y(_this4->y);
            								}
HXDLIN( 363)								bool _hx_tmp43;
HXDLIN( 363)								if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 363)									_hx_tmp43 = !(_this4->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp43 = false;
            								}
HXDLIN( 363)								if (_hx_tmp43) {
HXLINE( 363)									_this4->listen_z(_this4->z);
            								}
            							}
            						}
HXDLIN( 363)						bool _hx_tmp44;
HXDLIN( 363)						if (hx::IsNotNull( this->listen_x )) {
HXLINE( 363)							_hx_tmp44 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp44 = false;
            						}
HXDLIN( 363)						if (_hx_tmp44) {
HXLINE( 363)							this->listen_x(this->x);
            						}
            					}
            				}
HXDLIN( 363)				{
HXLINE( 363)					this->y = _y;
HXDLIN( 363)					if (!(this->_construct)) {
HXLINE( 363)						bool _hx_tmp45;
HXDLIN( 363)						bool _hx_tmp46;
HXDLIN( 363)						if (hx::IsNotNull( this->euler )) {
HXLINE( 363)							_hx_tmp46 = this->ignore_euler;
            						}
            						else {
HXLINE( 363)							_hx_tmp46 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp46)) {
HXLINE( 363)							_hx_tmp45 = this->_construct;
            						}
            						else {
HXLINE( 363)							_hx_tmp45 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp45)) {
HXLINE( 363)							 ::phoenix::Vector _this5 = this->euler;
HXDLIN( 363)							int order5 = (int)0;
HXDLIN( 363)							Float sqx5 = (this->x * this->x);
HXDLIN( 363)							Float sqy5 = (this->y * this->y);
HXDLIN( 363)							Float sqz5 = (this->z * this->z);
HXDLIN( 363)							Float sqw5 = (this->w * this->w);
HXDLIN( 363)							Float _x56 = _this5->x;
HXDLIN( 363)							Float _y56 = _this5->y;
HXDLIN( 363)							Float _z56 = _this5->z;
HXDLIN( 363)							if ((order5 == (int)0)) {
HXLINE( 363)								Float _x57 = (this->x * this->w);
HXDLIN( 363)								Float _x58 = ((int)2 * (_x57 - (this->y * this->z)));
HXDLIN( 363)								_x56 = ::Math_obj::atan2(_x58,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 363)								Float value60 = (this->x * this->z);
HXDLIN( 363)								Float value61 = ((int)2 * (value60 + (this->y * this->w)));
HXDLIN( 363)								Float _y57;
HXDLIN( 363)								if ((value61 < (int)-1)) {
HXLINE( 363)									_y57 = (int)-1;
            								}
            								else {
HXLINE( 363)									if ((value61 > (int)1)) {
HXLINE( 363)										_y57 = (int)1;
            									}
            									else {
HXLINE( 363)										_y57 = value61;
            									}
            								}
HXDLIN( 363)								_y56 = ::Math_obj::asin(_y57);
HXDLIN( 363)								Float _z57 = (this->z * this->w);
HXDLIN( 363)								Float _z58 = ((int)2 * (_z57 - (this->x * this->y)));
HXDLIN( 363)								_z56 = ::Math_obj::atan2(_z58,(((sqw5 + sqx5) - sqy5) - sqz5));
            							}
            							else {
HXLINE( 363)								if ((order5 == (int)1)) {
HXLINE( 363)									Float value62 = (this->x * this->w);
HXDLIN( 363)									Float value63 = ((int)2 * (value62 - (this->y * this->z)));
HXDLIN( 363)									Float _x59;
HXDLIN( 363)									if ((value63 < (int)-1)) {
HXLINE( 363)										_x59 = (int)-1;
            									}
            									else {
HXLINE( 363)										if ((value63 > (int)1)) {
HXLINE( 363)											_x59 = (int)1;
            										}
            										else {
HXLINE( 363)											_x59 = value63;
            										}
            									}
HXDLIN( 363)									_x56 = ::Math_obj::asin(_x59);
HXDLIN( 363)									Float _y58 = (this->x * this->z);
HXDLIN( 363)									Float _y59 = ((int)2 * (_y58 + (this->y * this->w)));
HXDLIN( 363)									_y56 = ::Math_obj::atan2(_y59,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 363)									Float _z59 = (this->x * this->y);
HXDLIN( 363)									Float _z60 = ((int)2 * (_z59 + (this->z * this->w)));
HXDLIN( 363)									_z56 = ::Math_obj::atan2(_z60,(((sqw5 - sqx5) + sqy5) - sqz5));
            								}
            								else {
HXLINE( 363)									if ((order5 == (int)2)) {
HXLINE( 363)										Float value64 = (this->x * this->w);
HXDLIN( 363)										Float value65 = ((int)2 * (value64 + (this->y * this->z)));
HXDLIN( 363)										Float _x60;
HXDLIN( 363)										if ((value65 < (int)-1)) {
HXLINE( 363)											_x60 = (int)-1;
            										}
            										else {
HXLINE( 363)											if ((value65 > (int)1)) {
HXLINE( 363)												_x60 = (int)1;
            											}
            											else {
HXLINE( 363)												_x60 = value65;
            											}
            										}
HXDLIN( 363)										_x56 = ::Math_obj::asin(_x60);
HXDLIN( 363)										Float _y60 = (this->y * this->w);
HXDLIN( 363)										Float _y61 = ((int)2 * (_y60 - (this->z * this->x)));
HXDLIN( 363)										_y56 = ::Math_obj::atan2(_y61,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 363)										Float _z61 = (this->z * this->w);
HXDLIN( 363)										Float _z62 = ((int)2 * (_z61 - (this->x * this->y)));
HXDLIN( 363)										_z56 = ::Math_obj::atan2(_z62,(((sqw5 - sqx5) + sqy5) - sqz5));
            									}
            									else {
HXLINE( 363)										if ((order5 == (int)3)) {
HXLINE( 363)											Float _x61 = (this->x * this->w);
HXDLIN( 363)											Float _x62 = ((int)2 * (_x61 + (this->z * this->y)));
HXDLIN( 363)											_x56 = ::Math_obj::atan2(_x62,(((sqw5 - sqx5) - sqy5) + sqz5));
HXDLIN( 363)											Float value66 = (this->y * this->w);
HXDLIN( 363)											Float value67 = ((int)2 * (value66 - (this->x * this->z)));
HXDLIN( 363)											Float _y62;
HXDLIN( 363)											if ((value67 < (int)-1)) {
HXLINE( 363)												_y62 = (int)-1;
            											}
            											else {
HXLINE( 363)												if ((value67 > (int)1)) {
HXLINE( 363)													_y62 = (int)1;
            												}
            												else {
HXLINE( 363)													_y62 = value67;
            												}
            											}
HXDLIN( 363)											_y56 = ::Math_obj::asin(_y62);
HXDLIN( 363)											Float _z63 = (this->x * this->y);
HXDLIN( 363)											Float _z64 = ((int)2 * (_z63 + (this->z * this->w)));
HXDLIN( 363)											_z56 = ::Math_obj::atan2(_z64,(((sqw5 + sqx5) - sqy5) - sqz5));
            										}
            										else {
HXLINE( 363)											if ((order5 == (int)4)) {
HXLINE( 363)												Float _x63 = (this->x * this->w);
HXDLIN( 363)												Float _x64 = ((int)2 * (_x63 - (this->z * this->y)));
HXDLIN( 363)												_x56 = ::Math_obj::atan2(_x64,(((sqw5 - sqx5) + sqy5) - sqz5));
HXDLIN( 363)												Float _y63 = (this->y * this->w);
HXDLIN( 363)												Float _y64 = ((int)2 * (_y63 - (this->x * this->z)));
HXDLIN( 363)												_y56 = ::Math_obj::atan2(_y64,(((sqw5 + sqx5) - sqy5) - sqz5));
HXDLIN( 363)												Float value68 = (this->x * this->y);
HXDLIN( 363)												Float value69 = ((int)2 * (value68 + (this->z * this->w)));
HXDLIN( 363)												Float _z65;
HXDLIN( 363)												if ((value69 < (int)-1)) {
HXLINE( 363)													_z65 = (int)-1;
            												}
            												else {
HXLINE( 363)													if ((value69 > (int)1)) {
HXLINE( 363)														_z65 = (int)1;
            													}
            													else {
HXLINE( 363)														_z65 = value69;
            													}
            												}
HXDLIN( 363)												_z56 = ::Math_obj::asin(_z65);
            											}
            											else {
HXLINE( 363)												if ((order5 == (int)5)) {
HXLINE( 363)													Float _x65 = (this->x * this->w);
HXDLIN( 363)													Float _x66 = ((int)2 * (_x65 + (this->y * this->z)));
HXDLIN( 363)													_x56 = ::Math_obj::atan2(_x66,(((sqw5 - sqx5) + sqy5) - sqz5));
HXDLIN( 363)													Float _y65 = (this->x * this->z);
HXDLIN( 363)													Float _y66 = ((int)2 * (_y65 + (this->y * this->w)));
HXDLIN( 363)													_y56 = ::Math_obj::atan2(_y66,(((sqw5 + sqx5) - sqy5) - sqz5));
HXDLIN( 363)													Float value70 = (this->z * this->w);
HXDLIN( 363)													Float value71 = ((int)2 * (value70 - (this->x * this->y)));
HXDLIN( 363)													Float _z66;
HXDLIN( 363)													if ((value71 < (int)-1)) {
HXLINE( 363)														_z66 = (int)-1;
            													}
            													else {
HXLINE( 363)														if ((value71 > (int)1)) {
HXLINE( 363)															_z66 = (int)1;
            														}
            														else {
HXLINE( 363)															_z66 = value71;
            														}
            													}
HXDLIN( 363)													_z56 = ::Math_obj::asin(_z66);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 363)							{
HXLINE( 363)								bool prev5 = _this5->ignore_listeners;
HXDLIN( 363)								_this5->ignore_listeners = true;
HXDLIN( 363)								{
HXLINE( 363)									_this5->x = _x56;
HXDLIN( 363)									if (!(_this5->_construct)) {
HXLINE( 363)										bool _hx_tmp47;
HXDLIN( 363)										if (hx::IsNotNull( _this5->listen_x )) {
HXLINE( 363)											_hx_tmp47 = !(_this5->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp47 = false;
            										}
HXDLIN( 363)										if (_hx_tmp47) {
HXLINE( 363)											_this5->listen_x(_x56);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this5->y = _y56;
HXDLIN( 363)									if (!(_this5->_construct)) {
HXLINE( 363)										bool _hx_tmp48;
HXDLIN( 363)										if (hx::IsNotNull( _this5->listen_y )) {
HXLINE( 363)											_hx_tmp48 = !(_this5->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp48 = false;
            										}
HXDLIN( 363)										if (_hx_tmp48) {
HXLINE( 363)											_this5->listen_y(_y56);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this5->z = _z56;
HXDLIN( 363)									if (!(_this5->_construct)) {
HXLINE( 363)										bool _hx_tmp49;
HXDLIN( 363)										if (hx::IsNotNull( _this5->listen_z )) {
HXLINE( 363)											_hx_tmp49 = !(_this5->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp49 = false;
            										}
HXDLIN( 363)										if (_hx_tmp49) {
HXLINE( 363)											_this5->listen_z(_z56);
            										}
            									}
            								}
HXDLIN( 363)								_this5->ignore_listeners = prev5;
HXDLIN( 363)								bool _hx_tmp50;
HXDLIN( 363)								if (hx::IsNotNull( _this5->listen_x )) {
HXLINE( 363)									_hx_tmp50 = !(_this5->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp50 = false;
            								}
HXDLIN( 363)								if (_hx_tmp50) {
HXLINE( 363)									_this5->listen_x(_this5->x);
            								}
HXDLIN( 363)								bool _hx_tmp51;
HXDLIN( 363)								if (hx::IsNotNull( _this5->listen_y )) {
HXLINE( 363)									_hx_tmp51 = !(_this5->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp51 = false;
            								}
HXDLIN( 363)								if (_hx_tmp51) {
HXLINE( 363)									_this5->listen_y(_this5->y);
            								}
HXDLIN( 363)								bool _hx_tmp52;
HXDLIN( 363)								if (hx::IsNotNull( _this5->listen_z )) {
HXLINE( 363)									_hx_tmp52 = !(_this5->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp52 = false;
            								}
HXDLIN( 363)								if (_hx_tmp52) {
HXLINE( 363)									_this5->listen_z(_this5->z);
            								}
            							}
            						}
HXDLIN( 363)						bool _hx_tmp53;
HXDLIN( 363)						if (hx::IsNotNull( this->listen_y )) {
HXLINE( 363)							_hx_tmp53 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp53 = false;
            						}
HXDLIN( 363)						if (_hx_tmp53) {
HXLINE( 363)							this->listen_y(this->y);
            						}
            					}
            				}
HXDLIN( 363)				{
HXLINE( 363)					this->z = _z;
HXDLIN( 363)					if (!(this->_construct)) {
HXLINE( 363)						bool _hx_tmp54;
HXDLIN( 363)						bool _hx_tmp55;
HXDLIN( 363)						if (hx::IsNotNull( this->euler )) {
HXLINE( 363)							_hx_tmp55 = this->ignore_euler;
            						}
            						else {
HXLINE( 363)							_hx_tmp55 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp55)) {
HXLINE( 363)							_hx_tmp54 = this->_construct;
            						}
            						else {
HXLINE( 363)							_hx_tmp54 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp54)) {
HXLINE( 363)							 ::phoenix::Vector _this6 = this->euler;
HXDLIN( 363)							int order6 = (int)0;
HXDLIN( 363)							Float sqx6 = (this->x * this->x);
HXDLIN( 363)							Float sqy6 = (this->y * this->y);
HXDLIN( 363)							Float sqz6 = (this->z * this->z);
HXDLIN( 363)							Float sqw6 = (this->w * this->w);
HXDLIN( 363)							Float _x67 = _this6->x;
HXDLIN( 363)							Float _y67 = _this6->y;
HXDLIN( 363)							Float _z67 = _this6->z;
HXDLIN( 363)							if ((order6 == (int)0)) {
HXLINE( 363)								Float _x68 = (this->x * this->w);
HXDLIN( 363)								Float _x69 = ((int)2 * (_x68 - (this->y * this->z)));
HXDLIN( 363)								_x67 = ::Math_obj::atan2(_x69,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 363)								Float value72 = (this->x * this->z);
HXDLIN( 363)								Float value73 = ((int)2 * (value72 + (this->y * this->w)));
HXDLIN( 363)								Float _y68;
HXDLIN( 363)								if ((value73 < (int)-1)) {
HXLINE( 363)									_y68 = (int)-1;
            								}
            								else {
HXLINE( 363)									if ((value73 > (int)1)) {
HXLINE( 363)										_y68 = (int)1;
            									}
            									else {
HXLINE( 363)										_y68 = value73;
            									}
            								}
HXDLIN( 363)								_y67 = ::Math_obj::asin(_y68);
HXDLIN( 363)								Float _z68 = (this->z * this->w);
HXDLIN( 363)								Float _z69 = ((int)2 * (_z68 - (this->x * this->y)));
HXDLIN( 363)								_z67 = ::Math_obj::atan2(_z69,(((sqw6 + sqx6) - sqy6) - sqz6));
            							}
            							else {
HXLINE( 363)								if ((order6 == (int)1)) {
HXLINE( 363)									Float value74 = (this->x * this->w);
HXDLIN( 363)									Float value75 = ((int)2 * (value74 - (this->y * this->z)));
HXDLIN( 363)									Float _x70;
HXDLIN( 363)									if ((value75 < (int)-1)) {
HXLINE( 363)										_x70 = (int)-1;
            									}
            									else {
HXLINE( 363)										if ((value75 > (int)1)) {
HXLINE( 363)											_x70 = (int)1;
            										}
            										else {
HXLINE( 363)											_x70 = value75;
            										}
            									}
HXDLIN( 363)									_x67 = ::Math_obj::asin(_x70);
HXDLIN( 363)									Float _y69 = (this->x * this->z);
HXDLIN( 363)									Float _y70 = ((int)2 * (_y69 + (this->y * this->w)));
HXDLIN( 363)									_y67 = ::Math_obj::atan2(_y70,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 363)									Float _z70 = (this->x * this->y);
HXDLIN( 363)									Float _z71 = ((int)2 * (_z70 + (this->z * this->w)));
HXDLIN( 363)									_z67 = ::Math_obj::atan2(_z71,(((sqw6 - sqx6) + sqy6) - sqz6));
            								}
            								else {
HXLINE( 363)									if ((order6 == (int)2)) {
HXLINE( 363)										Float value76 = (this->x * this->w);
HXDLIN( 363)										Float value77 = ((int)2 * (value76 + (this->y * this->z)));
HXDLIN( 363)										Float _x71;
HXDLIN( 363)										if ((value77 < (int)-1)) {
HXLINE( 363)											_x71 = (int)-1;
            										}
            										else {
HXLINE( 363)											if ((value77 > (int)1)) {
HXLINE( 363)												_x71 = (int)1;
            											}
            											else {
HXLINE( 363)												_x71 = value77;
            											}
            										}
HXDLIN( 363)										_x67 = ::Math_obj::asin(_x71);
HXDLIN( 363)										Float _y71 = (this->y * this->w);
HXDLIN( 363)										Float _y72 = ((int)2 * (_y71 - (this->z * this->x)));
HXDLIN( 363)										_y67 = ::Math_obj::atan2(_y72,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 363)										Float _z72 = (this->z * this->w);
HXDLIN( 363)										Float _z73 = ((int)2 * (_z72 - (this->x * this->y)));
HXDLIN( 363)										_z67 = ::Math_obj::atan2(_z73,(((sqw6 - sqx6) + sqy6) - sqz6));
            									}
            									else {
HXLINE( 363)										if ((order6 == (int)3)) {
HXLINE( 363)											Float _x72 = (this->x * this->w);
HXDLIN( 363)											Float _x73 = ((int)2 * (_x72 + (this->z * this->y)));
HXDLIN( 363)											_x67 = ::Math_obj::atan2(_x73,(((sqw6 - sqx6) - sqy6) + sqz6));
HXDLIN( 363)											Float value78 = (this->y * this->w);
HXDLIN( 363)											Float value79 = ((int)2 * (value78 - (this->x * this->z)));
HXDLIN( 363)											Float _y73;
HXDLIN( 363)											if ((value79 < (int)-1)) {
HXLINE( 363)												_y73 = (int)-1;
            											}
            											else {
HXLINE( 363)												if ((value79 > (int)1)) {
HXLINE( 363)													_y73 = (int)1;
            												}
            												else {
HXLINE( 363)													_y73 = value79;
            												}
            											}
HXDLIN( 363)											_y67 = ::Math_obj::asin(_y73);
HXDLIN( 363)											Float _z74 = (this->x * this->y);
HXDLIN( 363)											Float _z75 = ((int)2 * (_z74 + (this->z * this->w)));
HXDLIN( 363)											_z67 = ::Math_obj::atan2(_z75,(((sqw6 + sqx6) - sqy6) - sqz6));
            										}
            										else {
HXLINE( 363)											if ((order6 == (int)4)) {
HXLINE( 363)												Float _x74 = (this->x * this->w);
HXDLIN( 363)												Float _x75 = ((int)2 * (_x74 - (this->z * this->y)));
HXDLIN( 363)												_x67 = ::Math_obj::atan2(_x75,(((sqw6 - sqx6) + sqy6) - sqz6));
HXDLIN( 363)												Float _y74 = (this->y * this->w);
HXDLIN( 363)												Float _y75 = ((int)2 * (_y74 - (this->x * this->z)));
HXDLIN( 363)												_y67 = ::Math_obj::atan2(_y75,(((sqw6 + sqx6) - sqy6) - sqz6));
HXDLIN( 363)												Float value80 = (this->x * this->y);
HXDLIN( 363)												Float value81 = ((int)2 * (value80 + (this->z * this->w)));
HXDLIN( 363)												Float _z76;
HXDLIN( 363)												if ((value81 < (int)-1)) {
HXLINE( 363)													_z76 = (int)-1;
            												}
            												else {
HXLINE( 363)													if ((value81 > (int)1)) {
HXLINE( 363)														_z76 = (int)1;
            													}
            													else {
HXLINE( 363)														_z76 = value81;
            													}
            												}
HXDLIN( 363)												_z67 = ::Math_obj::asin(_z76);
            											}
            											else {
HXLINE( 363)												if ((order6 == (int)5)) {
HXLINE( 363)													Float _x76 = (this->x * this->w);
HXDLIN( 363)													Float _x77 = ((int)2 * (_x76 + (this->y * this->z)));
HXDLIN( 363)													_x67 = ::Math_obj::atan2(_x77,(((sqw6 - sqx6) + sqy6) - sqz6));
HXDLIN( 363)													Float _y76 = (this->x * this->z);
HXDLIN( 363)													Float _y77 = ((int)2 * (_y76 + (this->y * this->w)));
HXDLIN( 363)													_y67 = ::Math_obj::atan2(_y77,(((sqw6 + sqx6) - sqy6) - sqz6));
HXDLIN( 363)													Float value82 = (this->z * this->w);
HXDLIN( 363)													Float value83 = ((int)2 * (value82 - (this->x * this->y)));
HXDLIN( 363)													Float _z77;
HXDLIN( 363)													if ((value83 < (int)-1)) {
HXLINE( 363)														_z77 = (int)-1;
            													}
            													else {
HXLINE( 363)														if ((value83 > (int)1)) {
HXLINE( 363)															_z77 = (int)1;
            														}
            														else {
HXLINE( 363)															_z77 = value83;
            														}
            													}
HXDLIN( 363)													_z67 = ::Math_obj::asin(_z77);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 363)							{
HXLINE( 363)								bool prev6 = _this6->ignore_listeners;
HXDLIN( 363)								_this6->ignore_listeners = true;
HXDLIN( 363)								{
HXLINE( 363)									_this6->x = _x67;
HXDLIN( 363)									if (!(_this6->_construct)) {
HXLINE( 363)										bool _hx_tmp56;
HXDLIN( 363)										if (hx::IsNotNull( _this6->listen_x )) {
HXLINE( 363)											_hx_tmp56 = !(_this6->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp56 = false;
            										}
HXDLIN( 363)										if (_hx_tmp56) {
HXLINE( 363)											_this6->listen_x(_x67);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this6->y = _y67;
HXDLIN( 363)									if (!(_this6->_construct)) {
HXLINE( 363)										bool _hx_tmp57;
HXDLIN( 363)										if (hx::IsNotNull( _this6->listen_y )) {
HXLINE( 363)											_hx_tmp57 = !(_this6->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp57 = false;
            										}
HXDLIN( 363)										if (_hx_tmp57) {
HXLINE( 363)											_this6->listen_y(_y67);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this6->z = _z67;
HXDLIN( 363)									if (!(_this6->_construct)) {
HXLINE( 363)										bool _hx_tmp58;
HXDLIN( 363)										if (hx::IsNotNull( _this6->listen_z )) {
HXLINE( 363)											_hx_tmp58 = !(_this6->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp58 = false;
            										}
HXDLIN( 363)										if (_hx_tmp58) {
HXLINE( 363)											_this6->listen_z(_z67);
            										}
            									}
            								}
HXDLIN( 363)								_this6->ignore_listeners = prev6;
HXDLIN( 363)								bool _hx_tmp59;
HXDLIN( 363)								if (hx::IsNotNull( _this6->listen_x )) {
HXLINE( 363)									_hx_tmp59 = !(_this6->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp59 = false;
            								}
HXDLIN( 363)								if (_hx_tmp59) {
HXLINE( 363)									_this6->listen_x(_this6->x);
            								}
HXDLIN( 363)								bool _hx_tmp60;
HXDLIN( 363)								if (hx::IsNotNull( _this6->listen_y )) {
HXLINE( 363)									_hx_tmp60 = !(_this6->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp60 = false;
            								}
HXDLIN( 363)								if (_hx_tmp60) {
HXLINE( 363)									_this6->listen_y(_this6->y);
            								}
HXDLIN( 363)								bool _hx_tmp61;
HXDLIN( 363)								if (hx::IsNotNull( _this6->listen_z )) {
HXLINE( 363)									_hx_tmp61 = !(_this6->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp61 = false;
            								}
HXDLIN( 363)								if (_hx_tmp61) {
HXLINE( 363)									_this6->listen_z(_this6->z);
            								}
            							}
            						}
HXDLIN( 363)						bool _hx_tmp62;
HXDLIN( 363)						if (hx::IsNotNull( this->listen_z )) {
HXLINE( 363)							_hx_tmp62 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp62 = false;
            						}
HXDLIN( 363)						if (_hx_tmp62) {
HXLINE( 363)							this->listen_z(this->z);
            						}
            					}
            				}
HXDLIN( 363)				{
HXLINE( 363)					this->w = _w;
HXDLIN( 363)					if (!(this->_construct)) {
HXLINE( 363)						bool _hx_tmp63;
HXDLIN( 363)						bool _hx_tmp64;
HXDLIN( 363)						if (hx::IsNotNull( this->euler )) {
HXLINE( 363)							_hx_tmp64 = this->ignore_euler;
            						}
            						else {
HXLINE( 363)							_hx_tmp64 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp64)) {
HXLINE( 363)							_hx_tmp63 = this->_construct;
            						}
            						else {
HXLINE( 363)							_hx_tmp63 = true;
            						}
HXDLIN( 363)						if (!(_hx_tmp63)) {
HXLINE( 363)							 ::phoenix::Vector _this7 = this->euler;
HXDLIN( 363)							int order7 = (int)0;
HXDLIN( 363)							Float sqx7 = (this->x * this->x);
HXDLIN( 363)							Float sqy7 = (this->y * this->y);
HXDLIN( 363)							Float sqz7 = (this->z * this->z);
HXDLIN( 363)							Float sqw7 = (this->w * this->w);
HXDLIN( 363)							Float _x78 = _this7->x;
HXDLIN( 363)							Float _y78 = _this7->y;
HXDLIN( 363)							Float _z78 = _this7->z;
HXDLIN( 363)							if ((order7 == (int)0)) {
HXLINE( 363)								Float _x79 = (this->x * this->w);
HXDLIN( 363)								Float _x80 = ((int)2 * (_x79 - (this->y * this->z)));
HXDLIN( 363)								_x78 = ::Math_obj::atan2(_x80,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 363)								Float value84 = (this->x * this->z);
HXDLIN( 363)								Float value85 = ((int)2 * (value84 + (this->y * this->w)));
HXDLIN( 363)								Float _y79;
HXDLIN( 363)								if ((value85 < (int)-1)) {
HXLINE( 363)									_y79 = (int)-1;
            								}
            								else {
HXLINE( 363)									if ((value85 > (int)1)) {
HXLINE( 363)										_y79 = (int)1;
            									}
            									else {
HXLINE( 363)										_y79 = value85;
            									}
            								}
HXDLIN( 363)								_y78 = ::Math_obj::asin(_y79);
HXDLIN( 363)								Float _z79 = (this->z * this->w);
HXDLIN( 363)								Float _z80 = ((int)2 * (_z79 - (this->x * this->y)));
HXDLIN( 363)								_z78 = ::Math_obj::atan2(_z80,(((sqw7 + sqx7) - sqy7) - sqz7));
            							}
            							else {
HXLINE( 363)								if ((order7 == (int)1)) {
HXLINE( 363)									Float value86 = (this->x * this->w);
HXDLIN( 363)									Float value87 = ((int)2 * (value86 - (this->y * this->z)));
HXDLIN( 363)									Float _x81;
HXDLIN( 363)									if ((value87 < (int)-1)) {
HXLINE( 363)										_x81 = (int)-1;
            									}
            									else {
HXLINE( 363)										if ((value87 > (int)1)) {
HXLINE( 363)											_x81 = (int)1;
            										}
            										else {
HXLINE( 363)											_x81 = value87;
            										}
            									}
HXDLIN( 363)									_x78 = ::Math_obj::asin(_x81);
HXDLIN( 363)									Float _y80 = (this->x * this->z);
HXDLIN( 363)									Float _y81 = ((int)2 * (_y80 + (this->y * this->w)));
HXDLIN( 363)									_y78 = ::Math_obj::atan2(_y81,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 363)									Float _z81 = (this->x * this->y);
HXDLIN( 363)									Float _z82 = ((int)2 * (_z81 + (this->z * this->w)));
HXDLIN( 363)									_z78 = ::Math_obj::atan2(_z82,(((sqw7 - sqx7) + sqy7) - sqz7));
            								}
            								else {
HXLINE( 363)									if ((order7 == (int)2)) {
HXLINE( 363)										Float value88 = (this->x * this->w);
HXDLIN( 363)										Float value89 = ((int)2 * (value88 + (this->y * this->z)));
HXDLIN( 363)										Float _x82;
HXDLIN( 363)										if ((value89 < (int)-1)) {
HXLINE( 363)											_x82 = (int)-1;
            										}
            										else {
HXLINE( 363)											if ((value89 > (int)1)) {
HXLINE( 363)												_x82 = (int)1;
            											}
            											else {
HXLINE( 363)												_x82 = value89;
            											}
            										}
HXDLIN( 363)										_x78 = ::Math_obj::asin(_x82);
HXDLIN( 363)										Float _y82 = (this->y * this->w);
HXDLIN( 363)										Float _y83 = ((int)2 * (_y82 - (this->z * this->x)));
HXDLIN( 363)										_y78 = ::Math_obj::atan2(_y83,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 363)										Float _z83 = (this->z * this->w);
HXDLIN( 363)										Float _z84 = ((int)2 * (_z83 - (this->x * this->y)));
HXDLIN( 363)										_z78 = ::Math_obj::atan2(_z84,(((sqw7 - sqx7) + sqy7) - sqz7));
            									}
            									else {
HXLINE( 363)										if ((order7 == (int)3)) {
HXLINE( 363)											Float _x83 = (this->x * this->w);
HXDLIN( 363)											Float _x84 = ((int)2 * (_x83 + (this->z * this->y)));
HXDLIN( 363)											_x78 = ::Math_obj::atan2(_x84,(((sqw7 - sqx7) - sqy7) + sqz7));
HXDLIN( 363)											Float value90 = (this->y * this->w);
HXDLIN( 363)											Float value91 = ((int)2 * (value90 - (this->x * this->z)));
HXDLIN( 363)											Float _y84;
HXDLIN( 363)											if ((value91 < (int)-1)) {
HXLINE( 363)												_y84 = (int)-1;
            											}
            											else {
HXLINE( 363)												if ((value91 > (int)1)) {
HXLINE( 363)													_y84 = (int)1;
            												}
            												else {
HXLINE( 363)													_y84 = value91;
            												}
            											}
HXDLIN( 363)											_y78 = ::Math_obj::asin(_y84);
HXDLIN( 363)											Float _z85 = (this->x * this->y);
HXDLIN( 363)											Float _z86 = ((int)2 * (_z85 + (this->z * this->w)));
HXDLIN( 363)											_z78 = ::Math_obj::atan2(_z86,(((sqw7 + sqx7) - sqy7) - sqz7));
            										}
            										else {
HXLINE( 363)											if ((order7 == (int)4)) {
HXLINE( 363)												Float _x85 = (this->x * this->w);
HXDLIN( 363)												Float _x86 = ((int)2 * (_x85 - (this->z * this->y)));
HXDLIN( 363)												_x78 = ::Math_obj::atan2(_x86,(((sqw7 - sqx7) + sqy7) - sqz7));
HXDLIN( 363)												Float _y85 = (this->y * this->w);
HXDLIN( 363)												Float _y86 = ((int)2 * (_y85 - (this->x * this->z)));
HXDLIN( 363)												_y78 = ::Math_obj::atan2(_y86,(((sqw7 + sqx7) - sqy7) - sqz7));
HXDLIN( 363)												Float value92 = (this->x * this->y);
HXDLIN( 363)												Float value93 = ((int)2 * (value92 + (this->z * this->w)));
HXDLIN( 363)												Float _z87;
HXDLIN( 363)												if ((value93 < (int)-1)) {
HXLINE( 363)													_z87 = (int)-1;
            												}
            												else {
HXLINE( 363)													if ((value93 > (int)1)) {
HXLINE( 363)														_z87 = (int)1;
            													}
            													else {
HXLINE( 363)														_z87 = value93;
            													}
            												}
HXDLIN( 363)												_z78 = ::Math_obj::asin(_z87);
            											}
            											else {
HXLINE( 363)												if ((order7 == (int)5)) {
HXLINE( 363)													Float _x87 = (this->x * this->w);
HXDLIN( 363)													Float _x88 = ((int)2 * (_x87 + (this->y * this->z)));
HXDLIN( 363)													_x78 = ::Math_obj::atan2(_x88,(((sqw7 - sqx7) + sqy7) - sqz7));
HXDLIN( 363)													Float _y87 = (this->x * this->z);
HXDLIN( 363)													Float _y88 = ((int)2 * (_y87 + (this->y * this->w)));
HXDLIN( 363)													_y78 = ::Math_obj::atan2(_y88,(((sqw7 + sqx7) - sqy7) - sqz7));
HXDLIN( 363)													Float value94 = (this->z * this->w);
HXDLIN( 363)													Float value95 = ((int)2 * (value94 - (this->x * this->y)));
HXDLIN( 363)													Float _z88;
HXDLIN( 363)													if ((value95 < (int)-1)) {
HXLINE( 363)														_z88 = (int)-1;
            													}
            													else {
HXLINE( 363)														if ((value95 > (int)1)) {
HXLINE( 363)															_z88 = (int)1;
            														}
            														else {
HXLINE( 363)															_z88 = value95;
            														}
            													}
HXDLIN( 363)													_z78 = ::Math_obj::asin(_z88);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 363)							{
HXLINE( 363)								bool prev7 = _this7->ignore_listeners;
HXDLIN( 363)								_this7->ignore_listeners = true;
HXDLIN( 363)								{
HXLINE( 363)									_this7->x = _x78;
HXDLIN( 363)									if (!(_this7->_construct)) {
HXLINE( 363)										bool _hx_tmp65;
HXDLIN( 363)										if (hx::IsNotNull( _this7->listen_x )) {
HXLINE( 363)											_hx_tmp65 = !(_this7->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp65 = false;
            										}
HXDLIN( 363)										if (_hx_tmp65) {
HXLINE( 363)											_this7->listen_x(_x78);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this7->y = _y78;
HXDLIN( 363)									if (!(_this7->_construct)) {
HXLINE( 363)										bool _hx_tmp66;
HXDLIN( 363)										if (hx::IsNotNull( _this7->listen_y )) {
HXLINE( 363)											_hx_tmp66 = !(_this7->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp66 = false;
            										}
HXDLIN( 363)										if (_hx_tmp66) {
HXLINE( 363)											_this7->listen_y(_y78);
            										}
            									}
            								}
HXDLIN( 363)								{
HXLINE( 363)									_this7->z = _z78;
HXDLIN( 363)									if (!(_this7->_construct)) {
HXLINE( 363)										bool _hx_tmp67;
HXDLIN( 363)										if (hx::IsNotNull( _this7->listen_z )) {
HXLINE( 363)											_hx_tmp67 = !(_this7->ignore_listeners);
            										}
            										else {
HXLINE( 363)											_hx_tmp67 = false;
            										}
HXDLIN( 363)										if (_hx_tmp67) {
HXLINE( 363)											_this7->listen_z(_z78);
            										}
            									}
            								}
HXDLIN( 363)								_this7->ignore_listeners = prev7;
HXDLIN( 363)								bool _hx_tmp68;
HXDLIN( 363)								if (hx::IsNotNull( _this7->listen_x )) {
HXLINE( 363)									_hx_tmp68 = !(_this7->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp68 = false;
            								}
HXDLIN( 363)								if (_hx_tmp68) {
HXLINE( 363)									_this7->listen_x(_this7->x);
            								}
HXDLIN( 363)								bool _hx_tmp69;
HXDLIN( 363)								if (hx::IsNotNull( _this7->listen_y )) {
HXLINE( 363)									_hx_tmp69 = !(_this7->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp69 = false;
            								}
HXDLIN( 363)								if (_hx_tmp69) {
HXLINE( 363)									_this7->listen_y(_this7->y);
            								}
HXDLIN( 363)								bool _hx_tmp70;
HXDLIN( 363)								if (hx::IsNotNull( _this7->listen_z )) {
HXLINE( 363)									_hx_tmp70 = !(_this7->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp70 = false;
            								}
HXDLIN( 363)								if (_hx_tmp70) {
HXLINE( 363)									_this7->listen_z(_this7->z);
            								}
            							}
            						}
HXDLIN( 363)						bool _hx_tmp71;
HXDLIN( 363)						if (hx::IsNotNull( this->listen_w )) {
HXLINE( 363)							_hx_tmp71 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp71 = false;
            						}
HXDLIN( 363)						if (_hx_tmp71) {
HXLINE( 363)							this->listen_w(this->w);
            						}
            					}
            				}
HXDLIN( 363)				this->ignore_euler = false;
HXDLIN( 363)				bool _hx_tmp72;
HXDLIN( 363)				bool _hx_tmp73;
HXDLIN( 363)				if (hx::IsNotNull( this->euler )) {
HXLINE( 363)					_hx_tmp73 = this->ignore_euler;
            				}
            				else {
HXLINE( 363)					_hx_tmp73 = true;
            				}
HXDLIN( 363)				if (!(_hx_tmp73)) {
HXLINE( 363)					_hx_tmp72 = this->_construct;
            				}
            				else {
HXLINE( 363)					_hx_tmp72 = true;
            				}
HXDLIN( 363)				if (!(_hx_tmp72)) {
HXLINE( 363)					 ::phoenix::Vector _this8 = this->euler;
HXDLIN( 363)					int order8 = (int)0;
HXDLIN( 363)					Float sqx8 = (this->x * this->x);
HXDLIN( 363)					Float sqy8 = (this->y * this->y);
HXDLIN( 363)					Float sqz8 = (this->z * this->z);
HXDLIN( 363)					Float sqw8 = (this->w * this->w);
HXDLIN( 363)					Float _x89 = _this8->x;
HXDLIN( 363)					Float _y89 = _this8->y;
HXDLIN( 363)					Float _z89 = _this8->z;
HXDLIN( 363)					if ((order8 == (int)0)) {
HXLINE( 363)						Float _x90 = (this->x * this->w);
HXDLIN( 363)						Float _x91 = ((int)2 * (_x90 - (this->y * this->z)));
HXDLIN( 363)						_x89 = ::Math_obj::atan2(_x91,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 363)						Float value96 = (this->x * this->z);
HXDLIN( 363)						Float value97 = ((int)2 * (value96 + (this->y * this->w)));
HXDLIN( 363)						Float _y90;
HXDLIN( 363)						if ((value97 < (int)-1)) {
HXLINE( 363)							_y90 = (int)-1;
            						}
            						else {
HXLINE( 363)							if ((value97 > (int)1)) {
HXLINE( 363)								_y90 = (int)1;
            							}
            							else {
HXLINE( 363)								_y90 = value97;
            							}
            						}
HXDLIN( 363)						_y89 = ::Math_obj::asin(_y90);
HXDLIN( 363)						Float _z90 = (this->z * this->w);
HXDLIN( 363)						Float _z91 = ((int)2 * (_z90 - (this->x * this->y)));
HXDLIN( 363)						_z89 = ::Math_obj::atan2(_z91,(((sqw8 + sqx8) - sqy8) - sqz8));
            					}
            					else {
HXLINE( 363)						if ((order8 == (int)1)) {
HXLINE( 363)							Float value98 = (this->x * this->w);
HXDLIN( 363)							Float value99 = ((int)2 * (value98 - (this->y * this->z)));
HXDLIN( 363)							Float _x92;
HXDLIN( 363)							if ((value99 < (int)-1)) {
HXLINE( 363)								_x92 = (int)-1;
            							}
            							else {
HXLINE( 363)								if ((value99 > (int)1)) {
HXLINE( 363)									_x92 = (int)1;
            								}
            								else {
HXLINE( 363)									_x92 = value99;
            								}
            							}
HXDLIN( 363)							_x89 = ::Math_obj::asin(_x92);
HXDLIN( 363)							Float _y91 = (this->x * this->z);
HXDLIN( 363)							Float _y92 = ((int)2 * (_y91 + (this->y * this->w)));
HXDLIN( 363)							_y89 = ::Math_obj::atan2(_y92,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 363)							Float _z92 = (this->x * this->y);
HXDLIN( 363)							Float _z93 = ((int)2 * (_z92 + (this->z * this->w)));
HXDLIN( 363)							_z89 = ::Math_obj::atan2(_z93,(((sqw8 - sqx8) + sqy8) - sqz8));
            						}
            						else {
HXLINE( 363)							if ((order8 == (int)2)) {
HXLINE( 363)								Float value100 = (this->x * this->w);
HXDLIN( 363)								Float value101 = ((int)2 * (value100 + (this->y * this->z)));
HXDLIN( 363)								Float _x93;
HXDLIN( 363)								if ((value101 < (int)-1)) {
HXLINE( 363)									_x93 = (int)-1;
            								}
            								else {
HXLINE( 363)									if ((value101 > (int)1)) {
HXLINE( 363)										_x93 = (int)1;
            									}
            									else {
HXLINE( 363)										_x93 = value101;
            									}
            								}
HXDLIN( 363)								_x89 = ::Math_obj::asin(_x93);
HXDLIN( 363)								Float _y93 = (this->y * this->w);
HXDLIN( 363)								Float _y94 = ((int)2 * (_y93 - (this->z * this->x)));
HXDLIN( 363)								_y89 = ::Math_obj::atan2(_y94,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 363)								Float _z94 = (this->z * this->w);
HXDLIN( 363)								Float _z95 = ((int)2 * (_z94 - (this->x * this->y)));
HXDLIN( 363)								_z89 = ::Math_obj::atan2(_z95,(((sqw8 - sqx8) + sqy8) - sqz8));
            							}
            							else {
HXLINE( 363)								if ((order8 == (int)3)) {
HXLINE( 363)									Float _x94 = (this->x * this->w);
HXDLIN( 363)									Float _x95 = ((int)2 * (_x94 + (this->z * this->y)));
HXDLIN( 363)									_x89 = ::Math_obj::atan2(_x95,(((sqw8 - sqx8) - sqy8) + sqz8));
HXDLIN( 363)									Float value102 = (this->y * this->w);
HXDLIN( 363)									Float value103 = ((int)2 * (value102 - (this->x * this->z)));
HXDLIN( 363)									Float _y95;
HXDLIN( 363)									if ((value103 < (int)-1)) {
HXLINE( 363)										_y95 = (int)-1;
            									}
            									else {
HXLINE( 363)										if ((value103 > (int)1)) {
HXLINE( 363)											_y95 = (int)1;
            										}
            										else {
HXLINE( 363)											_y95 = value103;
            										}
            									}
HXDLIN( 363)									_y89 = ::Math_obj::asin(_y95);
HXDLIN( 363)									Float _z96 = (this->x * this->y);
HXDLIN( 363)									Float _z97 = ((int)2 * (_z96 + (this->z * this->w)));
HXDLIN( 363)									_z89 = ::Math_obj::atan2(_z97,(((sqw8 + sqx8) - sqy8) - sqz8));
            								}
            								else {
HXLINE( 363)									if ((order8 == (int)4)) {
HXLINE( 363)										Float _x96 = (this->x * this->w);
HXDLIN( 363)										Float _x97 = ((int)2 * (_x96 - (this->z * this->y)));
HXDLIN( 363)										_x89 = ::Math_obj::atan2(_x97,(((sqw8 - sqx8) + sqy8) - sqz8));
HXDLIN( 363)										Float _y96 = (this->y * this->w);
HXDLIN( 363)										Float _y97 = ((int)2 * (_y96 - (this->x * this->z)));
HXDLIN( 363)										_y89 = ::Math_obj::atan2(_y97,(((sqw8 + sqx8) - sqy8) - sqz8));
HXDLIN( 363)										Float value104 = (this->x * this->y);
HXDLIN( 363)										Float value105 = ((int)2 * (value104 + (this->z * this->w)));
HXDLIN( 363)										Float _z98;
HXDLIN( 363)										if ((value105 < (int)-1)) {
HXLINE( 363)											_z98 = (int)-1;
            										}
            										else {
HXLINE( 363)											if ((value105 > (int)1)) {
HXLINE( 363)												_z98 = (int)1;
            											}
            											else {
HXLINE( 363)												_z98 = value105;
            											}
            										}
HXDLIN( 363)										_z89 = ::Math_obj::asin(_z98);
            									}
            									else {
HXLINE( 363)										if ((order8 == (int)5)) {
HXLINE( 363)											Float _x98 = (this->x * this->w);
HXDLIN( 363)											Float _x99 = ((int)2 * (_x98 + (this->y * this->z)));
HXDLIN( 363)											_x89 = ::Math_obj::atan2(_x99,(((sqw8 - sqx8) + sqy8) - sqz8));
HXDLIN( 363)											Float _y98 = (this->x * this->z);
HXDLIN( 363)											Float _y99 = ((int)2 * (_y98 + (this->y * this->w)));
HXDLIN( 363)											_y89 = ::Math_obj::atan2(_y99,(((sqw8 + sqx8) - sqy8) - sqz8));
HXDLIN( 363)											Float value106 = (this->z * this->w);
HXDLIN( 363)											Float value107 = ((int)2 * (value106 - (this->x * this->y)));
HXDLIN( 363)											Float _z99;
HXDLIN( 363)											if ((value107 < (int)-1)) {
HXLINE( 363)												_z99 = (int)-1;
            											}
            											else {
HXLINE( 363)												if ((value107 > (int)1)) {
HXLINE( 363)													_z99 = (int)1;
            												}
            												else {
HXLINE( 363)													_z99 = value107;
            												}
            											}
HXDLIN( 363)											_z89 = ::Math_obj::asin(_z99);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 363)					{
HXLINE( 363)						bool prev8 = _this8->ignore_listeners;
HXDLIN( 363)						_this8->ignore_listeners = true;
HXDLIN( 363)						{
HXLINE( 363)							_this8->x = _x89;
HXDLIN( 363)							if (!(_this8->_construct)) {
HXLINE( 363)								bool _hx_tmp74;
HXDLIN( 363)								if (hx::IsNotNull( _this8->listen_x )) {
HXLINE( 363)									_hx_tmp74 = !(_this8->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp74 = false;
            								}
HXDLIN( 363)								if (_hx_tmp74) {
HXLINE( 363)									_this8->listen_x(_x89);
            								}
            							}
            						}
HXDLIN( 363)						{
HXLINE( 363)							_this8->y = _y89;
HXDLIN( 363)							if (!(_this8->_construct)) {
HXLINE( 363)								bool _hx_tmp75;
HXDLIN( 363)								if (hx::IsNotNull( _this8->listen_y )) {
HXLINE( 363)									_hx_tmp75 = !(_this8->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp75 = false;
            								}
HXDLIN( 363)								if (_hx_tmp75) {
HXLINE( 363)									_this8->listen_y(_y89);
            								}
            							}
            						}
HXDLIN( 363)						{
HXLINE( 363)							_this8->z = _z89;
HXDLIN( 363)							if (!(_this8->_construct)) {
HXLINE( 363)								bool _hx_tmp76;
HXDLIN( 363)								if (hx::IsNotNull( _this8->listen_z )) {
HXLINE( 363)									_hx_tmp76 = !(_this8->ignore_listeners);
            								}
            								else {
HXLINE( 363)									_hx_tmp76 = false;
            								}
HXDLIN( 363)								if (_hx_tmp76) {
HXLINE( 363)									_this8->listen_z(_z89);
            								}
            							}
            						}
HXDLIN( 363)						_this8->ignore_listeners = prev8;
HXDLIN( 363)						bool _hx_tmp77;
HXDLIN( 363)						if (hx::IsNotNull( _this8->listen_x )) {
HXLINE( 363)							_hx_tmp77 = !(_this8->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp77 = false;
            						}
HXDLIN( 363)						if (_hx_tmp77) {
HXLINE( 363)							_this8->listen_x(_this8->x);
            						}
HXDLIN( 363)						bool _hx_tmp78;
HXDLIN( 363)						if (hx::IsNotNull( _this8->listen_y )) {
HXLINE( 363)							_hx_tmp78 = !(_this8->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp78 = false;
            						}
HXDLIN( 363)						if (_hx_tmp78) {
HXLINE( 363)							_this8->listen_y(_this8->y);
            						}
HXDLIN( 363)						bool _hx_tmp79;
HXDLIN( 363)						if (hx::IsNotNull( _this8->listen_z )) {
HXLINE( 363)							_hx_tmp79 = !(_this8->ignore_listeners);
            						}
            						else {
HXLINE( 363)							_hx_tmp79 = false;
            						}
HXDLIN( 363)						if (_hx_tmp79) {
HXLINE( 363)							_this8->listen_z(_this8->z);
            						}
            					}
            				}
HXDLIN( 363)				bool _hx_tmp80;
HXDLIN( 363)				if (hx::IsNotNull( this->listen_x )) {
HXLINE( 363)					_hx_tmp80 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 363)					_hx_tmp80 = false;
            				}
HXDLIN( 363)				if (_hx_tmp80) {
HXLINE( 363)					this->listen_x(this->x);
            				}
HXDLIN( 363)				bool _hx_tmp81;
HXDLIN( 363)				if (hx::IsNotNull( this->listen_y )) {
HXLINE( 363)					_hx_tmp81 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 363)					_hx_tmp81 = false;
            				}
HXDLIN( 363)				if (_hx_tmp81) {
HXLINE( 363)					this->listen_y(this->y);
            				}
HXDLIN( 363)				bool _hx_tmp82;
HXDLIN( 363)				if (hx::IsNotNull( this->listen_z )) {
HXLINE( 363)					_hx_tmp82 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 363)					_hx_tmp82 = false;
            				}
HXDLIN( 363)				if (_hx_tmp82) {
HXLINE( 363)					this->listen_z(this->z);
            				}
HXDLIN( 363)				bool _hx_tmp83;
HXDLIN( 363)				if (hx::IsNotNull( this->listen_w )) {
HXLINE( 363)					_hx_tmp83 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 363)					_hx_tmp83 = false;
            				}
HXDLIN( 363)				if (_hx_tmp83) {
HXLINE( 363)					this->listen_w(this->w);
            				}
            			}
HXLINE( 365)			return hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 369)		Float halfTheta = ::Math_obj::acos(cosHalfTheta3);
HXLINE( 370)		Float sinHalfTheta = ::Math_obj::sqrt((((Float)1.0) - (cosHalfTheta3 * cosHalfTheta3)));
HXLINE( 372)		if ((::Math_obj::abs(sinHalfTheta) < ((Float)0.001))) {
HXLINE( 374)			{
HXLINE( 374)				Float _y100 = (((Float)0.5) * (_y + this->y));
HXDLIN( 374)				Float _z100 = (((Float)0.5) * (_z + this->z));
HXDLIN( 374)				Float _w1 = (((Float)0.5) * (_w + this->w));
HXDLIN( 374)				this->ignore_euler = true;
HXDLIN( 374)				{
HXLINE( 374)					this->x = (((Float)0.5) * (_x + this->x));
HXDLIN( 374)					if (!(this->_construct)) {
HXLINE( 374)						bool _hx_tmp84;
HXDLIN( 374)						bool _hx_tmp85;
HXDLIN( 374)						if (hx::IsNotNull( this->euler )) {
HXLINE( 374)							_hx_tmp85 = this->ignore_euler;
            						}
            						else {
HXLINE( 374)							_hx_tmp85 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp85)) {
HXLINE( 374)							_hx_tmp84 = this->_construct;
            						}
            						else {
HXLINE( 374)							_hx_tmp84 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp84)) {
HXLINE( 374)							 ::phoenix::Vector _this9 = this->euler;
HXDLIN( 374)							int order9 = (int)0;
HXDLIN( 374)							Float sqx9 = (this->x * this->x);
HXDLIN( 374)							Float sqy9 = (this->y * this->y);
HXDLIN( 374)							Float sqz9 = (this->z * this->z);
HXDLIN( 374)							Float sqw9 = (this->w * this->w);
HXDLIN( 374)							Float _x100 = _this9->x;
HXDLIN( 374)							Float _y101 = _this9->y;
HXDLIN( 374)							Float _z101 = _this9->z;
HXDLIN( 374)							if ((order9 == (int)0)) {
HXLINE( 374)								Float _x101 = (this->x * this->w);
HXDLIN( 374)								Float _x102 = ((int)2 * (_x101 - (this->y * this->z)));
HXDLIN( 374)								_x100 = ::Math_obj::atan2(_x102,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 374)								Float value108 = (this->x * this->z);
HXDLIN( 374)								Float value109 = ((int)2 * (value108 + (this->y * this->w)));
HXDLIN( 374)								Float _y102;
HXDLIN( 374)								if ((value109 < (int)-1)) {
HXLINE( 374)									_y102 = (int)-1;
            								}
            								else {
HXLINE( 374)									if ((value109 > (int)1)) {
HXLINE( 374)										_y102 = (int)1;
            									}
            									else {
HXLINE( 374)										_y102 = value109;
            									}
            								}
HXDLIN( 374)								_y101 = ::Math_obj::asin(_y102);
HXDLIN( 374)								Float _z102 = (this->z * this->w);
HXDLIN( 374)								Float _z103 = ((int)2 * (_z102 - (this->x * this->y)));
HXDLIN( 374)								_z101 = ::Math_obj::atan2(_z103,(((sqw9 + sqx9) - sqy9) - sqz9));
            							}
            							else {
HXLINE( 374)								if ((order9 == (int)1)) {
HXLINE( 374)									Float value110 = (this->x * this->w);
HXDLIN( 374)									Float value111 = ((int)2 * (value110 - (this->y * this->z)));
HXDLIN( 374)									Float _x103;
HXDLIN( 374)									if ((value111 < (int)-1)) {
HXLINE( 374)										_x103 = (int)-1;
            									}
            									else {
HXLINE( 374)										if ((value111 > (int)1)) {
HXLINE( 374)											_x103 = (int)1;
            										}
            										else {
HXLINE( 374)											_x103 = value111;
            										}
            									}
HXDLIN( 374)									_x100 = ::Math_obj::asin(_x103);
HXDLIN( 374)									Float _y103 = (this->x * this->z);
HXDLIN( 374)									Float _y104 = ((int)2 * (_y103 + (this->y * this->w)));
HXDLIN( 374)									_y101 = ::Math_obj::atan2(_y104,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 374)									Float _z104 = (this->x * this->y);
HXDLIN( 374)									Float _z105 = ((int)2 * (_z104 + (this->z * this->w)));
HXDLIN( 374)									_z101 = ::Math_obj::atan2(_z105,(((sqw9 - sqx9) + sqy9) - sqz9));
            								}
            								else {
HXLINE( 374)									if ((order9 == (int)2)) {
HXLINE( 374)										Float value112 = (this->x * this->w);
HXDLIN( 374)										Float value113 = ((int)2 * (value112 + (this->y * this->z)));
HXDLIN( 374)										Float _x104;
HXDLIN( 374)										if ((value113 < (int)-1)) {
HXLINE( 374)											_x104 = (int)-1;
            										}
            										else {
HXLINE( 374)											if ((value113 > (int)1)) {
HXLINE( 374)												_x104 = (int)1;
            											}
            											else {
HXLINE( 374)												_x104 = value113;
            											}
            										}
HXDLIN( 374)										_x100 = ::Math_obj::asin(_x104);
HXDLIN( 374)										Float _y105 = (this->y * this->w);
HXDLIN( 374)										Float _y106 = ((int)2 * (_y105 - (this->z * this->x)));
HXDLIN( 374)										_y101 = ::Math_obj::atan2(_y106,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 374)										Float _z106 = (this->z * this->w);
HXDLIN( 374)										Float _z107 = ((int)2 * (_z106 - (this->x * this->y)));
HXDLIN( 374)										_z101 = ::Math_obj::atan2(_z107,(((sqw9 - sqx9) + sqy9) - sqz9));
            									}
            									else {
HXLINE( 374)										if ((order9 == (int)3)) {
HXLINE( 374)											Float _x105 = (this->x * this->w);
HXDLIN( 374)											Float _x106 = ((int)2 * (_x105 + (this->z * this->y)));
HXDLIN( 374)											_x100 = ::Math_obj::atan2(_x106,(((sqw9 - sqx9) - sqy9) + sqz9));
HXDLIN( 374)											Float value114 = (this->y * this->w);
HXDLIN( 374)											Float value115 = ((int)2 * (value114 - (this->x * this->z)));
HXDLIN( 374)											Float _y107;
HXDLIN( 374)											if ((value115 < (int)-1)) {
HXLINE( 374)												_y107 = (int)-1;
            											}
            											else {
HXLINE( 374)												if ((value115 > (int)1)) {
HXLINE( 374)													_y107 = (int)1;
            												}
            												else {
HXLINE( 374)													_y107 = value115;
            												}
            											}
HXDLIN( 374)											_y101 = ::Math_obj::asin(_y107);
HXDLIN( 374)											Float _z108 = (this->x * this->y);
HXDLIN( 374)											Float _z109 = ((int)2 * (_z108 + (this->z * this->w)));
HXDLIN( 374)											_z101 = ::Math_obj::atan2(_z109,(((sqw9 + sqx9) - sqy9) - sqz9));
            										}
            										else {
HXLINE( 374)											if ((order9 == (int)4)) {
HXLINE( 374)												Float _x107 = (this->x * this->w);
HXDLIN( 374)												Float _x108 = ((int)2 * (_x107 - (this->z * this->y)));
HXDLIN( 374)												_x100 = ::Math_obj::atan2(_x108,(((sqw9 - sqx9) + sqy9) - sqz9));
HXDLIN( 374)												Float _y108 = (this->y * this->w);
HXDLIN( 374)												Float _y109 = ((int)2 * (_y108 - (this->x * this->z)));
HXDLIN( 374)												_y101 = ::Math_obj::atan2(_y109,(((sqw9 + sqx9) - sqy9) - sqz9));
HXDLIN( 374)												Float value116 = (this->x * this->y);
HXDLIN( 374)												Float value117 = ((int)2 * (value116 + (this->z * this->w)));
HXDLIN( 374)												Float _z110;
HXDLIN( 374)												if ((value117 < (int)-1)) {
HXLINE( 374)													_z110 = (int)-1;
            												}
            												else {
HXLINE( 374)													if ((value117 > (int)1)) {
HXLINE( 374)														_z110 = (int)1;
            													}
            													else {
HXLINE( 374)														_z110 = value117;
            													}
            												}
HXDLIN( 374)												_z101 = ::Math_obj::asin(_z110);
            											}
            											else {
HXLINE( 374)												if ((order9 == (int)5)) {
HXLINE( 374)													Float _x109 = (this->x * this->w);
HXDLIN( 374)													Float _x110 = ((int)2 * (_x109 + (this->y * this->z)));
HXDLIN( 374)													_x100 = ::Math_obj::atan2(_x110,(((sqw9 - sqx9) + sqy9) - sqz9));
HXDLIN( 374)													Float _y110 = (this->x * this->z);
HXDLIN( 374)													Float _y111 = ((int)2 * (_y110 + (this->y * this->w)));
HXDLIN( 374)													_y101 = ::Math_obj::atan2(_y111,(((sqw9 + sqx9) - sqy9) - sqz9));
HXDLIN( 374)													Float value118 = (this->z * this->w);
HXDLIN( 374)													Float value119 = ((int)2 * (value118 - (this->x * this->y)));
HXDLIN( 374)													Float _z111;
HXDLIN( 374)													if ((value119 < (int)-1)) {
HXLINE( 374)														_z111 = (int)-1;
            													}
            													else {
HXLINE( 374)														if ((value119 > (int)1)) {
HXLINE( 374)															_z111 = (int)1;
            														}
            														else {
HXLINE( 374)															_z111 = value119;
            														}
            													}
HXDLIN( 374)													_z101 = ::Math_obj::asin(_z111);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 374)							{
HXLINE( 374)								bool prev9 = _this9->ignore_listeners;
HXDLIN( 374)								_this9->ignore_listeners = true;
HXDLIN( 374)								{
HXLINE( 374)									_this9->x = _x100;
HXDLIN( 374)									if (!(_this9->_construct)) {
HXLINE( 374)										bool _hx_tmp86;
HXDLIN( 374)										if (hx::IsNotNull( _this9->listen_x )) {
HXLINE( 374)											_hx_tmp86 = !(_this9->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp86 = false;
            										}
HXDLIN( 374)										if (_hx_tmp86) {
HXLINE( 374)											_this9->listen_x(_x100);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this9->y = _y101;
HXDLIN( 374)									if (!(_this9->_construct)) {
HXLINE( 374)										bool _hx_tmp87;
HXDLIN( 374)										if (hx::IsNotNull( _this9->listen_y )) {
HXLINE( 374)											_hx_tmp87 = !(_this9->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp87 = false;
            										}
HXDLIN( 374)										if (_hx_tmp87) {
HXLINE( 374)											_this9->listen_y(_y101);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this9->z = _z101;
HXDLIN( 374)									if (!(_this9->_construct)) {
HXLINE( 374)										bool _hx_tmp88;
HXDLIN( 374)										if (hx::IsNotNull( _this9->listen_z )) {
HXLINE( 374)											_hx_tmp88 = !(_this9->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp88 = false;
            										}
HXDLIN( 374)										if (_hx_tmp88) {
HXLINE( 374)											_this9->listen_z(_z101);
            										}
            									}
            								}
HXDLIN( 374)								_this9->ignore_listeners = prev9;
HXDLIN( 374)								bool _hx_tmp89;
HXDLIN( 374)								if (hx::IsNotNull( _this9->listen_x )) {
HXLINE( 374)									_hx_tmp89 = !(_this9->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp89 = false;
            								}
HXDLIN( 374)								if (_hx_tmp89) {
HXLINE( 374)									_this9->listen_x(_this9->x);
            								}
HXDLIN( 374)								bool _hx_tmp90;
HXDLIN( 374)								if (hx::IsNotNull( _this9->listen_y )) {
HXLINE( 374)									_hx_tmp90 = !(_this9->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp90 = false;
            								}
HXDLIN( 374)								if (_hx_tmp90) {
HXLINE( 374)									_this9->listen_y(_this9->y);
            								}
HXDLIN( 374)								bool _hx_tmp91;
HXDLIN( 374)								if (hx::IsNotNull( _this9->listen_z )) {
HXLINE( 374)									_hx_tmp91 = !(_this9->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp91 = false;
            								}
HXDLIN( 374)								if (_hx_tmp91) {
HXLINE( 374)									_this9->listen_z(_this9->z);
            								}
            							}
            						}
HXDLIN( 374)						bool _hx_tmp92;
HXDLIN( 374)						if (hx::IsNotNull( this->listen_x )) {
HXLINE( 374)							_hx_tmp92 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp92 = false;
            						}
HXDLIN( 374)						if (_hx_tmp92) {
HXLINE( 374)							this->listen_x(this->x);
            						}
            					}
            				}
HXDLIN( 374)				{
HXLINE( 374)					this->y = _y100;
HXDLIN( 374)					if (!(this->_construct)) {
HXLINE( 374)						bool _hx_tmp93;
HXDLIN( 374)						bool _hx_tmp94;
HXDLIN( 374)						if (hx::IsNotNull( this->euler )) {
HXLINE( 374)							_hx_tmp94 = this->ignore_euler;
            						}
            						else {
HXLINE( 374)							_hx_tmp94 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp94)) {
HXLINE( 374)							_hx_tmp93 = this->_construct;
            						}
            						else {
HXLINE( 374)							_hx_tmp93 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp93)) {
HXLINE( 374)							 ::phoenix::Vector _this10 = this->euler;
HXDLIN( 374)							int order10 = (int)0;
HXDLIN( 374)							Float sqx10 = (this->x * this->x);
HXDLIN( 374)							Float sqy10 = (this->y * this->y);
HXDLIN( 374)							Float sqz10 = (this->z * this->z);
HXDLIN( 374)							Float sqw10 = (this->w * this->w);
HXDLIN( 374)							Float _x111 = _this10->x;
HXDLIN( 374)							Float _y112 = _this10->y;
HXDLIN( 374)							Float _z112 = _this10->z;
HXDLIN( 374)							if ((order10 == (int)0)) {
HXLINE( 374)								Float _x112 = (this->x * this->w);
HXDLIN( 374)								Float _x113 = ((int)2 * (_x112 - (this->y * this->z)));
HXDLIN( 374)								_x111 = ::Math_obj::atan2(_x113,(((sqw10 - sqx10) - sqy10) + sqz10));
HXDLIN( 374)								Float value120 = (this->x * this->z);
HXDLIN( 374)								Float value121 = ((int)2 * (value120 + (this->y * this->w)));
HXDLIN( 374)								Float _y113;
HXDLIN( 374)								if ((value121 < (int)-1)) {
HXLINE( 374)									_y113 = (int)-1;
            								}
            								else {
HXLINE( 374)									if ((value121 > (int)1)) {
HXLINE( 374)										_y113 = (int)1;
            									}
            									else {
HXLINE( 374)										_y113 = value121;
            									}
            								}
HXDLIN( 374)								_y112 = ::Math_obj::asin(_y113);
HXDLIN( 374)								Float _z113 = (this->z * this->w);
HXDLIN( 374)								Float _z114 = ((int)2 * (_z113 - (this->x * this->y)));
HXDLIN( 374)								_z112 = ::Math_obj::atan2(_z114,(((sqw10 + sqx10) - sqy10) - sqz10));
            							}
            							else {
HXLINE( 374)								if ((order10 == (int)1)) {
HXLINE( 374)									Float value122 = (this->x * this->w);
HXDLIN( 374)									Float value123 = ((int)2 * (value122 - (this->y * this->z)));
HXDLIN( 374)									Float _x114;
HXDLIN( 374)									if ((value123 < (int)-1)) {
HXLINE( 374)										_x114 = (int)-1;
            									}
            									else {
HXLINE( 374)										if ((value123 > (int)1)) {
HXLINE( 374)											_x114 = (int)1;
            										}
            										else {
HXLINE( 374)											_x114 = value123;
            										}
            									}
HXDLIN( 374)									_x111 = ::Math_obj::asin(_x114);
HXDLIN( 374)									Float _y114 = (this->x * this->z);
HXDLIN( 374)									Float _y115 = ((int)2 * (_y114 + (this->y * this->w)));
HXDLIN( 374)									_y112 = ::Math_obj::atan2(_y115,(((sqw10 - sqx10) - sqy10) + sqz10));
HXDLIN( 374)									Float _z115 = (this->x * this->y);
HXDLIN( 374)									Float _z116 = ((int)2 * (_z115 + (this->z * this->w)));
HXDLIN( 374)									_z112 = ::Math_obj::atan2(_z116,(((sqw10 - sqx10) + sqy10) - sqz10));
            								}
            								else {
HXLINE( 374)									if ((order10 == (int)2)) {
HXLINE( 374)										Float value124 = (this->x * this->w);
HXDLIN( 374)										Float value125 = ((int)2 * (value124 + (this->y * this->z)));
HXDLIN( 374)										Float _x115;
HXDLIN( 374)										if ((value125 < (int)-1)) {
HXLINE( 374)											_x115 = (int)-1;
            										}
            										else {
HXLINE( 374)											if ((value125 > (int)1)) {
HXLINE( 374)												_x115 = (int)1;
            											}
            											else {
HXLINE( 374)												_x115 = value125;
            											}
            										}
HXDLIN( 374)										_x111 = ::Math_obj::asin(_x115);
HXDLIN( 374)										Float _y116 = (this->y * this->w);
HXDLIN( 374)										Float _y117 = ((int)2 * (_y116 - (this->z * this->x)));
HXDLIN( 374)										_y112 = ::Math_obj::atan2(_y117,(((sqw10 - sqx10) - sqy10) + sqz10));
HXDLIN( 374)										Float _z117 = (this->z * this->w);
HXDLIN( 374)										Float _z118 = ((int)2 * (_z117 - (this->x * this->y)));
HXDLIN( 374)										_z112 = ::Math_obj::atan2(_z118,(((sqw10 - sqx10) + sqy10) - sqz10));
            									}
            									else {
HXLINE( 374)										if ((order10 == (int)3)) {
HXLINE( 374)											Float _x116 = (this->x * this->w);
HXDLIN( 374)											Float _x117 = ((int)2 * (_x116 + (this->z * this->y)));
HXDLIN( 374)											_x111 = ::Math_obj::atan2(_x117,(((sqw10 - sqx10) - sqy10) + sqz10));
HXDLIN( 374)											Float value126 = (this->y * this->w);
HXDLIN( 374)											Float value127 = ((int)2 * (value126 - (this->x * this->z)));
HXDLIN( 374)											Float _y118;
HXDLIN( 374)											if ((value127 < (int)-1)) {
HXLINE( 374)												_y118 = (int)-1;
            											}
            											else {
HXLINE( 374)												if ((value127 > (int)1)) {
HXLINE( 374)													_y118 = (int)1;
            												}
            												else {
HXLINE( 374)													_y118 = value127;
            												}
            											}
HXDLIN( 374)											_y112 = ::Math_obj::asin(_y118);
HXDLIN( 374)											Float _z119 = (this->x * this->y);
HXDLIN( 374)											Float _z120 = ((int)2 * (_z119 + (this->z * this->w)));
HXDLIN( 374)											_z112 = ::Math_obj::atan2(_z120,(((sqw10 + sqx10) - sqy10) - sqz10));
            										}
            										else {
HXLINE( 374)											if ((order10 == (int)4)) {
HXLINE( 374)												Float _x118 = (this->x * this->w);
HXDLIN( 374)												Float _x119 = ((int)2 * (_x118 - (this->z * this->y)));
HXDLIN( 374)												_x111 = ::Math_obj::atan2(_x119,(((sqw10 - sqx10) + sqy10) - sqz10));
HXDLIN( 374)												Float _y119 = (this->y * this->w);
HXDLIN( 374)												Float _y120 = ((int)2 * (_y119 - (this->x * this->z)));
HXDLIN( 374)												_y112 = ::Math_obj::atan2(_y120,(((sqw10 + sqx10) - sqy10) - sqz10));
HXDLIN( 374)												Float value128 = (this->x * this->y);
HXDLIN( 374)												Float value129 = ((int)2 * (value128 + (this->z * this->w)));
HXDLIN( 374)												Float _z121;
HXDLIN( 374)												if ((value129 < (int)-1)) {
HXLINE( 374)													_z121 = (int)-1;
            												}
            												else {
HXLINE( 374)													if ((value129 > (int)1)) {
HXLINE( 374)														_z121 = (int)1;
            													}
            													else {
HXLINE( 374)														_z121 = value129;
            													}
            												}
HXDLIN( 374)												_z112 = ::Math_obj::asin(_z121);
            											}
            											else {
HXLINE( 374)												if ((order10 == (int)5)) {
HXLINE( 374)													Float _x120 = (this->x * this->w);
HXDLIN( 374)													Float _x121 = ((int)2 * (_x120 + (this->y * this->z)));
HXDLIN( 374)													_x111 = ::Math_obj::atan2(_x121,(((sqw10 - sqx10) + sqy10) - sqz10));
HXDLIN( 374)													Float _y121 = (this->x * this->z);
HXDLIN( 374)													Float _y122 = ((int)2 * (_y121 + (this->y * this->w)));
HXDLIN( 374)													_y112 = ::Math_obj::atan2(_y122,(((sqw10 + sqx10) - sqy10) - sqz10));
HXDLIN( 374)													Float value130 = (this->z * this->w);
HXDLIN( 374)													Float value131 = ((int)2 * (value130 - (this->x * this->y)));
HXDLIN( 374)													Float _z122;
HXDLIN( 374)													if ((value131 < (int)-1)) {
HXLINE( 374)														_z122 = (int)-1;
            													}
            													else {
HXLINE( 374)														if ((value131 > (int)1)) {
HXLINE( 374)															_z122 = (int)1;
            														}
            														else {
HXLINE( 374)															_z122 = value131;
            														}
            													}
HXDLIN( 374)													_z112 = ::Math_obj::asin(_z122);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 374)							{
HXLINE( 374)								bool prev10 = _this10->ignore_listeners;
HXDLIN( 374)								_this10->ignore_listeners = true;
HXDLIN( 374)								{
HXLINE( 374)									_this10->x = _x111;
HXDLIN( 374)									if (!(_this10->_construct)) {
HXLINE( 374)										bool _hx_tmp95;
HXDLIN( 374)										if (hx::IsNotNull( _this10->listen_x )) {
HXLINE( 374)											_hx_tmp95 = !(_this10->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp95 = false;
            										}
HXDLIN( 374)										if (_hx_tmp95) {
HXLINE( 374)											_this10->listen_x(_x111);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this10->y = _y112;
HXDLIN( 374)									if (!(_this10->_construct)) {
HXLINE( 374)										bool _hx_tmp96;
HXDLIN( 374)										if (hx::IsNotNull( _this10->listen_y )) {
HXLINE( 374)											_hx_tmp96 = !(_this10->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp96 = false;
            										}
HXDLIN( 374)										if (_hx_tmp96) {
HXLINE( 374)											_this10->listen_y(_y112);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this10->z = _z112;
HXDLIN( 374)									if (!(_this10->_construct)) {
HXLINE( 374)										bool _hx_tmp97;
HXDLIN( 374)										if (hx::IsNotNull( _this10->listen_z )) {
HXLINE( 374)											_hx_tmp97 = !(_this10->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp97 = false;
            										}
HXDLIN( 374)										if (_hx_tmp97) {
HXLINE( 374)											_this10->listen_z(_z112);
            										}
            									}
            								}
HXDLIN( 374)								_this10->ignore_listeners = prev10;
HXDLIN( 374)								bool _hx_tmp98;
HXDLIN( 374)								if (hx::IsNotNull( _this10->listen_x )) {
HXLINE( 374)									_hx_tmp98 = !(_this10->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp98 = false;
            								}
HXDLIN( 374)								if (_hx_tmp98) {
HXLINE( 374)									_this10->listen_x(_this10->x);
            								}
HXDLIN( 374)								bool _hx_tmp99;
HXDLIN( 374)								if (hx::IsNotNull( _this10->listen_y )) {
HXLINE( 374)									_hx_tmp99 = !(_this10->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp99 = false;
            								}
HXDLIN( 374)								if (_hx_tmp99) {
HXLINE( 374)									_this10->listen_y(_this10->y);
            								}
HXDLIN( 374)								bool _hx_tmp100;
HXDLIN( 374)								if (hx::IsNotNull( _this10->listen_z )) {
HXLINE( 374)									_hx_tmp100 = !(_this10->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp100 = false;
            								}
HXDLIN( 374)								if (_hx_tmp100) {
HXLINE( 374)									_this10->listen_z(_this10->z);
            								}
            							}
            						}
HXDLIN( 374)						bool _hx_tmp101;
HXDLIN( 374)						if (hx::IsNotNull( this->listen_y )) {
HXLINE( 374)							_hx_tmp101 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp101 = false;
            						}
HXDLIN( 374)						if (_hx_tmp101) {
HXLINE( 374)							this->listen_y(this->y);
            						}
            					}
            				}
HXDLIN( 374)				{
HXLINE( 374)					this->z = _z100;
HXDLIN( 374)					if (!(this->_construct)) {
HXLINE( 374)						bool _hx_tmp102;
HXDLIN( 374)						bool _hx_tmp103;
HXDLIN( 374)						if (hx::IsNotNull( this->euler )) {
HXLINE( 374)							_hx_tmp103 = this->ignore_euler;
            						}
            						else {
HXLINE( 374)							_hx_tmp103 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp103)) {
HXLINE( 374)							_hx_tmp102 = this->_construct;
            						}
            						else {
HXLINE( 374)							_hx_tmp102 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp102)) {
HXLINE( 374)							 ::phoenix::Vector _this11 = this->euler;
HXDLIN( 374)							int order11 = (int)0;
HXDLIN( 374)							Float sqx11 = (this->x * this->x);
HXDLIN( 374)							Float sqy11 = (this->y * this->y);
HXDLIN( 374)							Float sqz11 = (this->z * this->z);
HXDLIN( 374)							Float sqw11 = (this->w * this->w);
HXDLIN( 374)							Float _x122 = _this11->x;
HXDLIN( 374)							Float _y123 = _this11->y;
HXDLIN( 374)							Float _z123 = _this11->z;
HXDLIN( 374)							if ((order11 == (int)0)) {
HXLINE( 374)								Float _x123 = (this->x * this->w);
HXDLIN( 374)								Float _x124 = ((int)2 * (_x123 - (this->y * this->z)));
HXDLIN( 374)								_x122 = ::Math_obj::atan2(_x124,(((sqw11 - sqx11) - sqy11) + sqz11));
HXDLIN( 374)								Float value132 = (this->x * this->z);
HXDLIN( 374)								Float value133 = ((int)2 * (value132 + (this->y * this->w)));
HXDLIN( 374)								Float _y124;
HXDLIN( 374)								if ((value133 < (int)-1)) {
HXLINE( 374)									_y124 = (int)-1;
            								}
            								else {
HXLINE( 374)									if ((value133 > (int)1)) {
HXLINE( 374)										_y124 = (int)1;
            									}
            									else {
HXLINE( 374)										_y124 = value133;
            									}
            								}
HXDLIN( 374)								_y123 = ::Math_obj::asin(_y124);
HXDLIN( 374)								Float _z124 = (this->z * this->w);
HXDLIN( 374)								Float _z125 = ((int)2 * (_z124 - (this->x * this->y)));
HXDLIN( 374)								_z123 = ::Math_obj::atan2(_z125,(((sqw11 + sqx11) - sqy11) - sqz11));
            							}
            							else {
HXLINE( 374)								if ((order11 == (int)1)) {
HXLINE( 374)									Float value134 = (this->x * this->w);
HXDLIN( 374)									Float value135 = ((int)2 * (value134 - (this->y * this->z)));
HXDLIN( 374)									Float _x125;
HXDLIN( 374)									if ((value135 < (int)-1)) {
HXLINE( 374)										_x125 = (int)-1;
            									}
            									else {
HXLINE( 374)										if ((value135 > (int)1)) {
HXLINE( 374)											_x125 = (int)1;
            										}
            										else {
HXLINE( 374)											_x125 = value135;
            										}
            									}
HXDLIN( 374)									_x122 = ::Math_obj::asin(_x125);
HXDLIN( 374)									Float _y125 = (this->x * this->z);
HXDLIN( 374)									Float _y126 = ((int)2 * (_y125 + (this->y * this->w)));
HXDLIN( 374)									_y123 = ::Math_obj::atan2(_y126,(((sqw11 - sqx11) - sqy11) + sqz11));
HXDLIN( 374)									Float _z126 = (this->x * this->y);
HXDLIN( 374)									Float _z127 = ((int)2 * (_z126 + (this->z * this->w)));
HXDLIN( 374)									_z123 = ::Math_obj::atan2(_z127,(((sqw11 - sqx11) + sqy11) - sqz11));
            								}
            								else {
HXLINE( 374)									if ((order11 == (int)2)) {
HXLINE( 374)										Float value136 = (this->x * this->w);
HXDLIN( 374)										Float value137 = ((int)2 * (value136 + (this->y * this->z)));
HXDLIN( 374)										Float _x126;
HXDLIN( 374)										if ((value137 < (int)-1)) {
HXLINE( 374)											_x126 = (int)-1;
            										}
            										else {
HXLINE( 374)											if ((value137 > (int)1)) {
HXLINE( 374)												_x126 = (int)1;
            											}
            											else {
HXLINE( 374)												_x126 = value137;
            											}
            										}
HXDLIN( 374)										_x122 = ::Math_obj::asin(_x126);
HXDLIN( 374)										Float _y127 = (this->y * this->w);
HXDLIN( 374)										Float _y128 = ((int)2 * (_y127 - (this->z * this->x)));
HXDLIN( 374)										_y123 = ::Math_obj::atan2(_y128,(((sqw11 - sqx11) - sqy11) + sqz11));
HXDLIN( 374)										Float _z128 = (this->z * this->w);
HXDLIN( 374)										Float _z129 = ((int)2 * (_z128 - (this->x * this->y)));
HXDLIN( 374)										_z123 = ::Math_obj::atan2(_z129,(((sqw11 - sqx11) + sqy11) - sqz11));
            									}
            									else {
HXLINE( 374)										if ((order11 == (int)3)) {
HXLINE( 374)											Float _x127 = (this->x * this->w);
HXDLIN( 374)											Float _x128 = ((int)2 * (_x127 + (this->z * this->y)));
HXDLIN( 374)											_x122 = ::Math_obj::atan2(_x128,(((sqw11 - sqx11) - sqy11) + sqz11));
HXDLIN( 374)											Float value138 = (this->y * this->w);
HXDLIN( 374)											Float value139 = ((int)2 * (value138 - (this->x * this->z)));
HXDLIN( 374)											Float _y129;
HXDLIN( 374)											if ((value139 < (int)-1)) {
HXLINE( 374)												_y129 = (int)-1;
            											}
            											else {
HXLINE( 374)												if ((value139 > (int)1)) {
HXLINE( 374)													_y129 = (int)1;
            												}
            												else {
HXLINE( 374)													_y129 = value139;
            												}
            											}
HXDLIN( 374)											_y123 = ::Math_obj::asin(_y129);
HXDLIN( 374)											Float _z130 = (this->x * this->y);
HXDLIN( 374)											Float _z131 = ((int)2 * (_z130 + (this->z * this->w)));
HXDLIN( 374)											_z123 = ::Math_obj::atan2(_z131,(((sqw11 + sqx11) - sqy11) - sqz11));
            										}
            										else {
HXLINE( 374)											if ((order11 == (int)4)) {
HXLINE( 374)												Float _x129 = (this->x * this->w);
HXDLIN( 374)												Float _x130 = ((int)2 * (_x129 - (this->z * this->y)));
HXDLIN( 374)												_x122 = ::Math_obj::atan2(_x130,(((sqw11 - sqx11) + sqy11) - sqz11));
HXDLIN( 374)												Float _y130 = (this->y * this->w);
HXDLIN( 374)												Float _y131 = ((int)2 * (_y130 - (this->x * this->z)));
HXDLIN( 374)												_y123 = ::Math_obj::atan2(_y131,(((sqw11 + sqx11) - sqy11) - sqz11));
HXDLIN( 374)												Float value140 = (this->x * this->y);
HXDLIN( 374)												Float value141 = ((int)2 * (value140 + (this->z * this->w)));
HXDLIN( 374)												Float _z132;
HXDLIN( 374)												if ((value141 < (int)-1)) {
HXLINE( 374)													_z132 = (int)-1;
            												}
            												else {
HXLINE( 374)													if ((value141 > (int)1)) {
HXLINE( 374)														_z132 = (int)1;
            													}
            													else {
HXLINE( 374)														_z132 = value141;
            													}
            												}
HXDLIN( 374)												_z123 = ::Math_obj::asin(_z132);
            											}
            											else {
HXLINE( 374)												if ((order11 == (int)5)) {
HXLINE( 374)													Float _x131 = (this->x * this->w);
HXDLIN( 374)													Float _x132 = ((int)2 * (_x131 + (this->y * this->z)));
HXDLIN( 374)													_x122 = ::Math_obj::atan2(_x132,(((sqw11 - sqx11) + sqy11) - sqz11));
HXDLIN( 374)													Float _y132 = (this->x * this->z);
HXDLIN( 374)													Float _y133 = ((int)2 * (_y132 + (this->y * this->w)));
HXDLIN( 374)													_y123 = ::Math_obj::atan2(_y133,(((sqw11 + sqx11) - sqy11) - sqz11));
HXDLIN( 374)													Float value142 = (this->z * this->w);
HXDLIN( 374)													Float value143 = ((int)2 * (value142 - (this->x * this->y)));
HXDLIN( 374)													Float _z133;
HXDLIN( 374)													if ((value143 < (int)-1)) {
HXLINE( 374)														_z133 = (int)-1;
            													}
            													else {
HXLINE( 374)														if ((value143 > (int)1)) {
HXLINE( 374)															_z133 = (int)1;
            														}
            														else {
HXLINE( 374)															_z133 = value143;
            														}
            													}
HXDLIN( 374)													_z123 = ::Math_obj::asin(_z133);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 374)							{
HXLINE( 374)								bool prev11 = _this11->ignore_listeners;
HXDLIN( 374)								_this11->ignore_listeners = true;
HXDLIN( 374)								{
HXLINE( 374)									_this11->x = _x122;
HXDLIN( 374)									if (!(_this11->_construct)) {
HXLINE( 374)										bool _hx_tmp104;
HXDLIN( 374)										if (hx::IsNotNull( _this11->listen_x )) {
HXLINE( 374)											_hx_tmp104 = !(_this11->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp104 = false;
            										}
HXDLIN( 374)										if (_hx_tmp104) {
HXLINE( 374)											_this11->listen_x(_x122);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this11->y = _y123;
HXDLIN( 374)									if (!(_this11->_construct)) {
HXLINE( 374)										bool _hx_tmp105;
HXDLIN( 374)										if (hx::IsNotNull( _this11->listen_y )) {
HXLINE( 374)											_hx_tmp105 = !(_this11->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp105 = false;
            										}
HXDLIN( 374)										if (_hx_tmp105) {
HXLINE( 374)											_this11->listen_y(_y123);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this11->z = _z123;
HXDLIN( 374)									if (!(_this11->_construct)) {
HXLINE( 374)										bool _hx_tmp106;
HXDLIN( 374)										if (hx::IsNotNull( _this11->listen_z )) {
HXLINE( 374)											_hx_tmp106 = !(_this11->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp106 = false;
            										}
HXDLIN( 374)										if (_hx_tmp106) {
HXLINE( 374)											_this11->listen_z(_z123);
            										}
            									}
            								}
HXDLIN( 374)								_this11->ignore_listeners = prev11;
HXDLIN( 374)								bool _hx_tmp107;
HXDLIN( 374)								if (hx::IsNotNull( _this11->listen_x )) {
HXLINE( 374)									_hx_tmp107 = !(_this11->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp107 = false;
            								}
HXDLIN( 374)								if (_hx_tmp107) {
HXLINE( 374)									_this11->listen_x(_this11->x);
            								}
HXDLIN( 374)								bool _hx_tmp108;
HXDLIN( 374)								if (hx::IsNotNull( _this11->listen_y )) {
HXLINE( 374)									_hx_tmp108 = !(_this11->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp108 = false;
            								}
HXDLIN( 374)								if (_hx_tmp108) {
HXLINE( 374)									_this11->listen_y(_this11->y);
            								}
HXDLIN( 374)								bool _hx_tmp109;
HXDLIN( 374)								if (hx::IsNotNull( _this11->listen_z )) {
HXLINE( 374)									_hx_tmp109 = !(_this11->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp109 = false;
            								}
HXDLIN( 374)								if (_hx_tmp109) {
HXLINE( 374)									_this11->listen_z(_this11->z);
            								}
            							}
            						}
HXDLIN( 374)						bool _hx_tmp110;
HXDLIN( 374)						if (hx::IsNotNull( this->listen_z )) {
HXLINE( 374)							_hx_tmp110 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp110 = false;
            						}
HXDLIN( 374)						if (_hx_tmp110) {
HXLINE( 374)							this->listen_z(this->z);
            						}
            					}
            				}
HXDLIN( 374)				{
HXLINE( 374)					this->w = _w1;
HXDLIN( 374)					if (!(this->_construct)) {
HXLINE( 374)						bool _hx_tmp111;
HXDLIN( 374)						bool _hx_tmp112;
HXDLIN( 374)						if (hx::IsNotNull( this->euler )) {
HXLINE( 374)							_hx_tmp112 = this->ignore_euler;
            						}
            						else {
HXLINE( 374)							_hx_tmp112 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp112)) {
HXLINE( 374)							_hx_tmp111 = this->_construct;
            						}
            						else {
HXLINE( 374)							_hx_tmp111 = true;
            						}
HXDLIN( 374)						if (!(_hx_tmp111)) {
HXLINE( 374)							 ::phoenix::Vector _this12 = this->euler;
HXDLIN( 374)							int order12 = (int)0;
HXDLIN( 374)							Float sqx12 = (this->x * this->x);
HXDLIN( 374)							Float sqy12 = (this->y * this->y);
HXDLIN( 374)							Float sqz12 = (this->z * this->z);
HXDLIN( 374)							Float sqw12 = (this->w * this->w);
HXDLIN( 374)							Float _x133 = _this12->x;
HXDLIN( 374)							Float _y134 = _this12->y;
HXDLIN( 374)							Float _z134 = _this12->z;
HXDLIN( 374)							if ((order12 == (int)0)) {
HXLINE( 374)								Float _x134 = (this->x * this->w);
HXDLIN( 374)								Float _x135 = ((int)2 * (_x134 - (this->y * this->z)));
HXDLIN( 374)								_x133 = ::Math_obj::atan2(_x135,(((sqw12 - sqx12) - sqy12) + sqz12));
HXDLIN( 374)								Float value144 = (this->x * this->z);
HXDLIN( 374)								Float value145 = ((int)2 * (value144 + (this->y * this->w)));
HXDLIN( 374)								Float _y135;
HXDLIN( 374)								if ((value145 < (int)-1)) {
HXLINE( 374)									_y135 = (int)-1;
            								}
            								else {
HXLINE( 374)									if ((value145 > (int)1)) {
HXLINE( 374)										_y135 = (int)1;
            									}
            									else {
HXLINE( 374)										_y135 = value145;
            									}
            								}
HXDLIN( 374)								_y134 = ::Math_obj::asin(_y135);
HXDLIN( 374)								Float _z135 = (this->z * this->w);
HXDLIN( 374)								Float _z136 = ((int)2 * (_z135 - (this->x * this->y)));
HXDLIN( 374)								_z134 = ::Math_obj::atan2(_z136,(((sqw12 + sqx12) - sqy12) - sqz12));
            							}
            							else {
HXLINE( 374)								if ((order12 == (int)1)) {
HXLINE( 374)									Float value146 = (this->x * this->w);
HXDLIN( 374)									Float value147 = ((int)2 * (value146 - (this->y * this->z)));
HXDLIN( 374)									Float _x136;
HXDLIN( 374)									if ((value147 < (int)-1)) {
HXLINE( 374)										_x136 = (int)-1;
            									}
            									else {
HXLINE( 374)										if ((value147 > (int)1)) {
HXLINE( 374)											_x136 = (int)1;
            										}
            										else {
HXLINE( 374)											_x136 = value147;
            										}
            									}
HXDLIN( 374)									_x133 = ::Math_obj::asin(_x136);
HXDLIN( 374)									Float _y136 = (this->x * this->z);
HXDLIN( 374)									Float _y137 = ((int)2 * (_y136 + (this->y * this->w)));
HXDLIN( 374)									_y134 = ::Math_obj::atan2(_y137,(((sqw12 - sqx12) - sqy12) + sqz12));
HXDLIN( 374)									Float _z137 = (this->x * this->y);
HXDLIN( 374)									Float _z138 = ((int)2 * (_z137 + (this->z * this->w)));
HXDLIN( 374)									_z134 = ::Math_obj::atan2(_z138,(((sqw12 - sqx12) + sqy12) - sqz12));
            								}
            								else {
HXLINE( 374)									if ((order12 == (int)2)) {
HXLINE( 374)										Float value148 = (this->x * this->w);
HXDLIN( 374)										Float value149 = ((int)2 * (value148 + (this->y * this->z)));
HXDLIN( 374)										Float _x137;
HXDLIN( 374)										if ((value149 < (int)-1)) {
HXLINE( 374)											_x137 = (int)-1;
            										}
            										else {
HXLINE( 374)											if ((value149 > (int)1)) {
HXLINE( 374)												_x137 = (int)1;
            											}
            											else {
HXLINE( 374)												_x137 = value149;
            											}
            										}
HXDLIN( 374)										_x133 = ::Math_obj::asin(_x137);
HXDLIN( 374)										Float _y138 = (this->y * this->w);
HXDLIN( 374)										Float _y139 = ((int)2 * (_y138 - (this->z * this->x)));
HXDLIN( 374)										_y134 = ::Math_obj::atan2(_y139,(((sqw12 - sqx12) - sqy12) + sqz12));
HXDLIN( 374)										Float _z139 = (this->z * this->w);
HXDLIN( 374)										Float _z140 = ((int)2 * (_z139 - (this->x * this->y)));
HXDLIN( 374)										_z134 = ::Math_obj::atan2(_z140,(((sqw12 - sqx12) + sqy12) - sqz12));
            									}
            									else {
HXLINE( 374)										if ((order12 == (int)3)) {
HXLINE( 374)											Float _x138 = (this->x * this->w);
HXDLIN( 374)											Float _x139 = ((int)2 * (_x138 + (this->z * this->y)));
HXDLIN( 374)											_x133 = ::Math_obj::atan2(_x139,(((sqw12 - sqx12) - sqy12) + sqz12));
HXDLIN( 374)											Float value150 = (this->y * this->w);
HXDLIN( 374)											Float value151 = ((int)2 * (value150 - (this->x * this->z)));
HXDLIN( 374)											Float _y140;
HXDLIN( 374)											if ((value151 < (int)-1)) {
HXLINE( 374)												_y140 = (int)-1;
            											}
            											else {
HXLINE( 374)												if ((value151 > (int)1)) {
HXLINE( 374)													_y140 = (int)1;
            												}
            												else {
HXLINE( 374)													_y140 = value151;
            												}
            											}
HXDLIN( 374)											_y134 = ::Math_obj::asin(_y140);
HXDLIN( 374)											Float _z141 = (this->x * this->y);
HXDLIN( 374)											Float _z142 = ((int)2 * (_z141 + (this->z * this->w)));
HXDLIN( 374)											_z134 = ::Math_obj::atan2(_z142,(((sqw12 + sqx12) - sqy12) - sqz12));
            										}
            										else {
HXLINE( 374)											if ((order12 == (int)4)) {
HXLINE( 374)												Float _x140 = (this->x * this->w);
HXDLIN( 374)												Float _x141 = ((int)2 * (_x140 - (this->z * this->y)));
HXDLIN( 374)												_x133 = ::Math_obj::atan2(_x141,(((sqw12 - sqx12) + sqy12) - sqz12));
HXDLIN( 374)												Float _y141 = (this->y * this->w);
HXDLIN( 374)												Float _y142 = ((int)2 * (_y141 - (this->x * this->z)));
HXDLIN( 374)												_y134 = ::Math_obj::atan2(_y142,(((sqw12 + sqx12) - sqy12) - sqz12));
HXDLIN( 374)												Float value152 = (this->x * this->y);
HXDLIN( 374)												Float value153 = ((int)2 * (value152 + (this->z * this->w)));
HXDLIN( 374)												Float _z143;
HXDLIN( 374)												if ((value153 < (int)-1)) {
HXLINE( 374)													_z143 = (int)-1;
            												}
            												else {
HXLINE( 374)													if ((value153 > (int)1)) {
HXLINE( 374)														_z143 = (int)1;
            													}
            													else {
HXLINE( 374)														_z143 = value153;
            													}
            												}
HXDLIN( 374)												_z134 = ::Math_obj::asin(_z143);
            											}
            											else {
HXLINE( 374)												if ((order12 == (int)5)) {
HXLINE( 374)													Float _x142 = (this->x * this->w);
HXDLIN( 374)													Float _x143 = ((int)2 * (_x142 + (this->y * this->z)));
HXDLIN( 374)													_x133 = ::Math_obj::atan2(_x143,(((sqw12 - sqx12) + sqy12) - sqz12));
HXDLIN( 374)													Float _y143 = (this->x * this->z);
HXDLIN( 374)													Float _y144 = ((int)2 * (_y143 + (this->y * this->w)));
HXDLIN( 374)													_y134 = ::Math_obj::atan2(_y144,(((sqw12 + sqx12) - sqy12) - sqz12));
HXDLIN( 374)													Float value154 = (this->z * this->w);
HXDLIN( 374)													Float value155 = ((int)2 * (value154 - (this->x * this->y)));
HXDLIN( 374)													Float _z144;
HXDLIN( 374)													if ((value155 < (int)-1)) {
HXLINE( 374)														_z144 = (int)-1;
            													}
            													else {
HXLINE( 374)														if ((value155 > (int)1)) {
HXLINE( 374)															_z144 = (int)1;
            														}
            														else {
HXLINE( 374)															_z144 = value155;
            														}
            													}
HXDLIN( 374)													_z134 = ::Math_obj::asin(_z144);
            												}
            											}
            										}
            									}
            								}
            							}
HXDLIN( 374)							{
HXLINE( 374)								bool prev12 = _this12->ignore_listeners;
HXDLIN( 374)								_this12->ignore_listeners = true;
HXDLIN( 374)								{
HXLINE( 374)									_this12->x = _x133;
HXDLIN( 374)									if (!(_this12->_construct)) {
HXLINE( 374)										bool _hx_tmp113;
HXDLIN( 374)										if (hx::IsNotNull( _this12->listen_x )) {
HXLINE( 374)											_hx_tmp113 = !(_this12->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp113 = false;
            										}
HXDLIN( 374)										if (_hx_tmp113) {
HXLINE( 374)											_this12->listen_x(_x133);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this12->y = _y134;
HXDLIN( 374)									if (!(_this12->_construct)) {
HXLINE( 374)										bool _hx_tmp114;
HXDLIN( 374)										if (hx::IsNotNull( _this12->listen_y )) {
HXLINE( 374)											_hx_tmp114 = !(_this12->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp114 = false;
            										}
HXDLIN( 374)										if (_hx_tmp114) {
HXLINE( 374)											_this12->listen_y(_y134);
            										}
            									}
            								}
HXDLIN( 374)								{
HXLINE( 374)									_this12->z = _z134;
HXDLIN( 374)									if (!(_this12->_construct)) {
HXLINE( 374)										bool _hx_tmp115;
HXDLIN( 374)										if (hx::IsNotNull( _this12->listen_z )) {
HXLINE( 374)											_hx_tmp115 = !(_this12->ignore_listeners);
            										}
            										else {
HXLINE( 374)											_hx_tmp115 = false;
            										}
HXDLIN( 374)										if (_hx_tmp115) {
HXLINE( 374)											_this12->listen_z(_z134);
            										}
            									}
            								}
HXDLIN( 374)								_this12->ignore_listeners = prev12;
HXDLIN( 374)								bool _hx_tmp116;
HXDLIN( 374)								if (hx::IsNotNull( _this12->listen_x )) {
HXLINE( 374)									_hx_tmp116 = !(_this12->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp116 = false;
            								}
HXDLIN( 374)								if (_hx_tmp116) {
HXLINE( 374)									_this12->listen_x(_this12->x);
            								}
HXDLIN( 374)								bool _hx_tmp117;
HXDLIN( 374)								if (hx::IsNotNull( _this12->listen_y )) {
HXLINE( 374)									_hx_tmp117 = !(_this12->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp117 = false;
            								}
HXDLIN( 374)								if (_hx_tmp117) {
HXLINE( 374)									_this12->listen_y(_this12->y);
            								}
HXDLIN( 374)								bool _hx_tmp118;
HXDLIN( 374)								if (hx::IsNotNull( _this12->listen_z )) {
HXLINE( 374)									_hx_tmp118 = !(_this12->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp118 = false;
            								}
HXDLIN( 374)								if (_hx_tmp118) {
HXLINE( 374)									_this12->listen_z(_this12->z);
            								}
            							}
            						}
HXDLIN( 374)						bool _hx_tmp119;
HXDLIN( 374)						if (hx::IsNotNull( this->listen_w )) {
HXLINE( 374)							_hx_tmp119 = !(this->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp119 = false;
            						}
HXDLIN( 374)						if (_hx_tmp119) {
HXLINE( 374)							this->listen_w(this->w);
            						}
            					}
            				}
HXDLIN( 374)				this->ignore_euler = false;
HXDLIN( 374)				bool _hx_tmp120;
HXDLIN( 374)				bool _hx_tmp121;
HXDLIN( 374)				if (hx::IsNotNull( this->euler )) {
HXLINE( 374)					_hx_tmp121 = this->ignore_euler;
            				}
            				else {
HXLINE( 374)					_hx_tmp121 = true;
            				}
HXDLIN( 374)				if (!(_hx_tmp121)) {
HXLINE( 374)					_hx_tmp120 = this->_construct;
            				}
            				else {
HXLINE( 374)					_hx_tmp120 = true;
            				}
HXDLIN( 374)				if (!(_hx_tmp120)) {
HXLINE( 374)					 ::phoenix::Vector _this13 = this->euler;
HXDLIN( 374)					int order13 = (int)0;
HXDLIN( 374)					Float sqx13 = (this->x * this->x);
HXDLIN( 374)					Float sqy13 = (this->y * this->y);
HXDLIN( 374)					Float sqz13 = (this->z * this->z);
HXDLIN( 374)					Float sqw13 = (this->w * this->w);
HXDLIN( 374)					Float _x144 = _this13->x;
HXDLIN( 374)					Float _y145 = _this13->y;
HXDLIN( 374)					Float _z145 = _this13->z;
HXDLIN( 374)					if ((order13 == (int)0)) {
HXLINE( 374)						Float _x145 = (this->x * this->w);
HXDLIN( 374)						Float _x146 = ((int)2 * (_x145 - (this->y * this->z)));
HXDLIN( 374)						_x144 = ::Math_obj::atan2(_x146,(((sqw13 - sqx13) - sqy13) + sqz13));
HXDLIN( 374)						Float value156 = (this->x * this->z);
HXDLIN( 374)						Float value157 = ((int)2 * (value156 + (this->y * this->w)));
HXDLIN( 374)						Float _y146;
HXDLIN( 374)						if ((value157 < (int)-1)) {
HXLINE( 374)							_y146 = (int)-1;
            						}
            						else {
HXLINE( 374)							if ((value157 > (int)1)) {
HXLINE( 374)								_y146 = (int)1;
            							}
            							else {
HXLINE( 374)								_y146 = value157;
            							}
            						}
HXDLIN( 374)						_y145 = ::Math_obj::asin(_y146);
HXDLIN( 374)						Float _z146 = (this->z * this->w);
HXDLIN( 374)						Float _z147 = ((int)2 * (_z146 - (this->x * this->y)));
HXDLIN( 374)						_z145 = ::Math_obj::atan2(_z147,(((sqw13 + sqx13) - sqy13) - sqz13));
            					}
            					else {
HXLINE( 374)						if ((order13 == (int)1)) {
HXLINE( 374)							Float value158 = (this->x * this->w);
HXDLIN( 374)							Float value159 = ((int)2 * (value158 - (this->y * this->z)));
HXDLIN( 374)							Float _x147;
HXDLIN( 374)							if ((value159 < (int)-1)) {
HXLINE( 374)								_x147 = (int)-1;
            							}
            							else {
HXLINE( 374)								if ((value159 > (int)1)) {
HXLINE( 374)									_x147 = (int)1;
            								}
            								else {
HXLINE( 374)									_x147 = value159;
            								}
            							}
HXDLIN( 374)							_x144 = ::Math_obj::asin(_x147);
HXDLIN( 374)							Float _y147 = (this->x * this->z);
HXDLIN( 374)							Float _y148 = ((int)2 * (_y147 + (this->y * this->w)));
HXDLIN( 374)							_y145 = ::Math_obj::atan2(_y148,(((sqw13 - sqx13) - sqy13) + sqz13));
HXDLIN( 374)							Float _z148 = (this->x * this->y);
HXDLIN( 374)							Float _z149 = ((int)2 * (_z148 + (this->z * this->w)));
HXDLIN( 374)							_z145 = ::Math_obj::atan2(_z149,(((sqw13 - sqx13) + sqy13) - sqz13));
            						}
            						else {
HXLINE( 374)							if ((order13 == (int)2)) {
HXLINE( 374)								Float value160 = (this->x * this->w);
HXDLIN( 374)								Float value161 = ((int)2 * (value160 + (this->y * this->z)));
HXDLIN( 374)								Float _x148;
HXDLIN( 374)								if ((value161 < (int)-1)) {
HXLINE( 374)									_x148 = (int)-1;
            								}
            								else {
HXLINE( 374)									if ((value161 > (int)1)) {
HXLINE( 374)										_x148 = (int)1;
            									}
            									else {
HXLINE( 374)										_x148 = value161;
            									}
            								}
HXDLIN( 374)								_x144 = ::Math_obj::asin(_x148);
HXDLIN( 374)								Float _y149 = (this->y * this->w);
HXDLIN( 374)								Float _y150 = ((int)2 * (_y149 - (this->z * this->x)));
HXDLIN( 374)								_y145 = ::Math_obj::atan2(_y150,(((sqw13 - sqx13) - sqy13) + sqz13));
HXDLIN( 374)								Float _z150 = (this->z * this->w);
HXDLIN( 374)								Float _z151 = ((int)2 * (_z150 - (this->x * this->y)));
HXDLIN( 374)								_z145 = ::Math_obj::atan2(_z151,(((sqw13 - sqx13) + sqy13) - sqz13));
            							}
            							else {
HXLINE( 374)								if ((order13 == (int)3)) {
HXLINE( 374)									Float _x149 = (this->x * this->w);
HXDLIN( 374)									Float _x150 = ((int)2 * (_x149 + (this->z * this->y)));
HXDLIN( 374)									_x144 = ::Math_obj::atan2(_x150,(((sqw13 - sqx13) - sqy13) + sqz13));
HXDLIN( 374)									Float value162 = (this->y * this->w);
HXDLIN( 374)									Float value163 = ((int)2 * (value162 - (this->x * this->z)));
HXDLIN( 374)									Float _y151;
HXDLIN( 374)									if ((value163 < (int)-1)) {
HXLINE( 374)										_y151 = (int)-1;
            									}
            									else {
HXLINE( 374)										if ((value163 > (int)1)) {
HXLINE( 374)											_y151 = (int)1;
            										}
            										else {
HXLINE( 374)											_y151 = value163;
            										}
            									}
HXDLIN( 374)									_y145 = ::Math_obj::asin(_y151);
HXDLIN( 374)									Float _z152 = (this->x * this->y);
HXDLIN( 374)									Float _z153 = ((int)2 * (_z152 + (this->z * this->w)));
HXDLIN( 374)									_z145 = ::Math_obj::atan2(_z153,(((sqw13 + sqx13) - sqy13) - sqz13));
            								}
            								else {
HXLINE( 374)									if ((order13 == (int)4)) {
HXLINE( 374)										Float _x151 = (this->x * this->w);
HXDLIN( 374)										Float _x152 = ((int)2 * (_x151 - (this->z * this->y)));
HXDLIN( 374)										_x144 = ::Math_obj::atan2(_x152,(((sqw13 - sqx13) + sqy13) - sqz13));
HXDLIN( 374)										Float _y152 = (this->y * this->w);
HXDLIN( 374)										Float _y153 = ((int)2 * (_y152 - (this->x * this->z)));
HXDLIN( 374)										_y145 = ::Math_obj::atan2(_y153,(((sqw13 + sqx13) - sqy13) - sqz13));
HXDLIN( 374)										Float value164 = (this->x * this->y);
HXDLIN( 374)										Float value165 = ((int)2 * (value164 + (this->z * this->w)));
HXDLIN( 374)										Float _z154;
HXDLIN( 374)										if ((value165 < (int)-1)) {
HXLINE( 374)											_z154 = (int)-1;
            										}
            										else {
HXLINE( 374)											if ((value165 > (int)1)) {
HXLINE( 374)												_z154 = (int)1;
            											}
            											else {
HXLINE( 374)												_z154 = value165;
            											}
            										}
HXDLIN( 374)										_z145 = ::Math_obj::asin(_z154);
            									}
            									else {
HXLINE( 374)										if ((order13 == (int)5)) {
HXLINE( 374)											Float _x153 = (this->x * this->w);
HXDLIN( 374)											Float _x154 = ((int)2 * (_x153 + (this->y * this->z)));
HXDLIN( 374)											_x144 = ::Math_obj::atan2(_x154,(((sqw13 - sqx13) + sqy13) - sqz13));
HXDLIN( 374)											Float _y154 = (this->x * this->z);
HXDLIN( 374)											Float _y155 = ((int)2 * (_y154 + (this->y * this->w)));
HXDLIN( 374)											_y145 = ::Math_obj::atan2(_y155,(((sqw13 + sqx13) - sqy13) - sqz13));
HXDLIN( 374)											Float value166 = (this->z * this->w);
HXDLIN( 374)											Float value167 = ((int)2 * (value166 - (this->x * this->y)));
HXDLIN( 374)											Float _z155;
HXDLIN( 374)											if ((value167 < (int)-1)) {
HXLINE( 374)												_z155 = (int)-1;
            											}
            											else {
HXLINE( 374)												if ((value167 > (int)1)) {
HXLINE( 374)													_z155 = (int)1;
            												}
            												else {
HXLINE( 374)													_z155 = value167;
            												}
            											}
HXDLIN( 374)											_z145 = ::Math_obj::asin(_z155);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 374)					{
HXLINE( 374)						bool prev13 = _this13->ignore_listeners;
HXDLIN( 374)						_this13->ignore_listeners = true;
HXDLIN( 374)						{
HXLINE( 374)							_this13->x = _x144;
HXDLIN( 374)							if (!(_this13->_construct)) {
HXLINE( 374)								bool _hx_tmp122;
HXDLIN( 374)								if (hx::IsNotNull( _this13->listen_x )) {
HXLINE( 374)									_hx_tmp122 = !(_this13->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp122 = false;
            								}
HXDLIN( 374)								if (_hx_tmp122) {
HXLINE( 374)									_this13->listen_x(_x144);
            								}
            							}
            						}
HXDLIN( 374)						{
HXLINE( 374)							_this13->y = _y145;
HXDLIN( 374)							if (!(_this13->_construct)) {
HXLINE( 374)								bool _hx_tmp123;
HXDLIN( 374)								if (hx::IsNotNull( _this13->listen_y )) {
HXLINE( 374)									_hx_tmp123 = !(_this13->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp123 = false;
            								}
HXDLIN( 374)								if (_hx_tmp123) {
HXLINE( 374)									_this13->listen_y(_y145);
            								}
            							}
            						}
HXDLIN( 374)						{
HXLINE( 374)							_this13->z = _z145;
HXDLIN( 374)							if (!(_this13->_construct)) {
HXLINE( 374)								bool _hx_tmp124;
HXDLIN( 374)								if (hx::IsNotNull( _this13->listen_z )) {
HXLINE( 374)									_hx_tmp124 = !(_this13->ignore_listeners);
            								}
            								else {
HXLINE( 374)									_hx_tmp124 = false;
            								}
HXDLIN( 374)								if (_hx_tmp124) {
HXLINE( 374)									_this13->listen_z(_z145);
            								}
            							}
            						}
HXDLIN( 374)						_this13->ignore_listeners = prev13;
HXDLIN( 374)						bool _hx_tmp125;
HXDLIN( 374)						if (hx::IsNotNull( _this13->listen_x )) {
HXLINE( 374)							_hx_tmp125 = !(_this13->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp125 = false;
            						}
HXDLIN( 374)						if (_hx_tmp125) {
HXLINE( 374)							_this13->listen_x(_this13->x);
            						}
HXDLIN( 374)						bool _hx_tmp126;
HXDLIN( 374)						if (hx::IsNotNull( _this13->listen_y )) {
HXLINE( 374)							_hx_tmp126 = !(_this13->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp126 = false;
            						}
HXDLIN( 374)						if (_hx_tmp126) {
HXLINE( 374)							_this13->listen_y(_this13->y);
            						}
HXDLIN( 374)						bool _hx_tmp127;
HXDLIN( 374)						if (hx::IsNotNull( _this13->listen_z )) {
HXLINE( 374)							_hx_tmp127 = !(_this13->ignore_listeners);
            						}
            						else {
HXLINE( 374)							_hx_tmp127 = false;
            						}
HXDLIN( 374)						if (_hx_tmp127) {
HXLINE( 374)							_this13->listen_z(_this13->z);
            						}
            					}
            				}
HXDLIN( 374)				bool _hx_tmp128;
HXDLIN( 374)				if (hx::IsNotNull( this->listen_x )) {
HXLINE( 374)					_hx_tmp128 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 374)					_hx_tmp128 = false;
            				}
HXDLIN( 374)				if (_hx_tmp128) {
HXLINE( 374)					this->listen_x(this->x);
            				}
HXDLIN( 374)				bool _hx_tmp129;
HXDLIN( 374)				if (hx::IsNotNull( this->listen_y )) {
HXLINE( 374)					_hx_tmp129 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 374)					_hx_tmp129 = false;
            				}
HXDLIN( 374)				if (_hx_tmp129) {
HXLINE( 374)					this->listen_y(this->y);
            				}
HXDLIN( 374)				bool _hx_tmp130;
HXDLIN( 374)				if (hx::IsNotNull( this->listen_z )) {
HXLINE( 374)					_hx_tmp130 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 374)					_hx_tmp130 = false;
            				}
HXDLIN( 374)				if (_hx_tmp130) {
HXLINE( 374)					this->listen_z(this->z);
            				}
HXDLIN( 374)				bool _hx_tmp131;
HXDLIN( 374)				if (hx::IsNotNull( this->listen_w )) {
HXLINE( 374)					_hx_tmp131 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 374)					_hx_tmp131 = false;
            				}
HXDLIN( 374)				if (_hx_tmp131) {
HXLINE( 374)					this->listen_w(this->w);
            				}
            			}
HXLINE( 379)			return hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 383)		Float ratioA = ((Float)::Math_obj::sin((((int)1 - _t) * halfTheta)) / (Float)sinHalfTheta);
HXDLIN( 383)		Float ratioB = ((Float)::Math_obj::sin((_t * halfTheta)) / (Float)sinHalfTheta);
HXLINE( 386)		{
HXLINE( 386)			Float _y156 = ((_y * ratioA) + (this->y * ratioB));
HXDLIN( 386)			Float _z156 = ((_z * ratioA) + (this->z * ratioB));
HXDLIN( 386)			Float _w2 = ((_w * ratioA) + (this->w * ratioB));
HXDLIN( 386)			this->ignore_euler = true;
HXDLIN( 386)			{
HXLINE( 386)				this->x = ((_x * ratioA) + (this->x * ratioB));
HXDLIN( 386)				if (!(this->_construct)) {
HXLINE( 386)					bool _hx_tmp132;
HXDLIN( 386)					bool _hx_tmp133;
HXDLIN( 386)					if (hx::IsNotNull( this->euler )) {
HXLINE( 386)						_hx_tmp133 = this->ignore_euler;
            					}
            					else {
HXLINE( 386)						_hx_tmp133 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp133)) {
HXLINE( 386)						_hx_tmp132 = this->_construct;
            					}
            					else {
HXLINE( 386)						_hx_tmp132 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp132)) {
HXLINE( 386)						 ::phoenix::Vector _this14 = this->euler;
HXDLIN( 386)						int order14 = (int)0;
HXDLIN( 386)						Float sqx14 = (this->x * this->x);
HXDLIN( 386)						Float sqy14 = (this->y * this->y);
HXDLIN( 386)						Float sqz14 = (this->z * this->z);
HXDLIN( 386)						Float sqw14 = (this->w * this->w);
HXDLIN( 386)						Float _x155 = _this14->x;
HXDLIN( 386)						Float _y157 = _this14->y;
HXDLIN( 386)						Float _z157 = _this14->z;
HXDLIN( 386)						if ((order14 == (int)0)) {
HXLINE( 386)							Float _x156 = (this->x * this->w);
HXDLIN( 386)							Float _x157 = ((int)2 * (_x156 - (this->y * this->z)));
HXDLIN( 386)							_x155 = ::Math_obj::atan2(_x157,(((sqw14 - sqx14) - sqy14) + sqz14));
HXDLIN( 386)							Float value168 = (this->x * this->z);
HXDLIN( 386)							Float value169 = ((int)2 * (value168 + (this->y * this->w)));
HXDLIN( 386)							Float _y158;
HXDLIN( 386)							if ((value169 < (int)-1)) {
HXLINE( 386)								_y158 = (int)-1;
            							}
            							else {
HXLINE( 386)								if ((value169 > (int)1)) {
HXLINE( 386)									_y158 = (int)1;
            								}
            								else {
HXLINE( 386)									_y158 = value169;
            								}
            							}
HXDLIN( 386)							_y157 = ::Math_obj::asin(_y158);
HXDLIN( 386)							Float _z158 = (this->z * this->w);
HXDLIN( 386)							Float _z159 = ((int)2 * (_z158 - (this->x * this->y)));
HXDLIN( 386)							_z157 = ::Math_obj::atan2(_z159,(((sqw14 + sqx14) - sqy14) - sqz14));
            						}
            						else {
HXLINE( 386)							if ((order14 == (int)1)) {
HXLINE( 386)								Float value170 = (this->x * this->w);
HXDLIN( 386)								Float value171 = ((int)2 * (value170 - (this->y * this->z)));
HXDLIN( 386)								Float _x158;
HXDLIN( 386)								if ((value171 < (int)-1)) {
HXLINE( 386)									_x158 = (int)-1;
            								}
            								else {
HXLINE( 386)									if ((value171 > (int)1)) {
HXLINE( 386)										_x158 = (int)1;
            									}
            									else {
HXLINE( 386)										_x158 = value171;
            									}
            								}
HXDLIN( 386)								_x155 = ::Math_obj::asin(_x158);
HXDLIN( 386)								Float _y159 = (this->x * this->z);
HXDLIN( 386)								Float _y160 = ((int)2 * (_y159 + (this->y * this->w)));
HXDLIN( 386)								_y157 = ::Math_obj::atan2(_y160,(((sqw14 - sqx14) - sqy14) + sqz14));
HXDLIN( 386)								Float _z160 = (this->x * this->y);
HXDLIN( 386)								Float _z161 = ((int)2 * (_z160 + (this->z * this->w)));
HXDLIN( 386)								_z157 = ::Math_obj::atan2(_z161,(((sqw14 - sqx14) + sqy14) - sqz14));
            							}
            							else {
HXLINE( 386)								if ((order14 == (int)2)) {
HXLINE( 386)									Float value172 = (this->x * this->w);
HXDLIN( 386)									Float value173 = ((int)2 * (value172 + (this->y * this->z)));
HXDLIN( 386)									Float _x159;
HXDLIN( 386)									if ((value173 < (int)-1)) {
HXLINE( 386)										_x159 = (int)-1;
            									}
            									else {
HXLINE( 386)										if ((value173 > (int)1)) {
HXLINE( 386)											_x159 = (int)1;
            										}
            										else {
HXLINE( 386)											_x159 = value173;
            										}
            									}
HXDLIN( 386)									_x155 = ::Math_obj::asin(_x159);
HXDLIN( 386)									Float _y161 = (this->y * this->w);
HXDLIN( 386)									Float _y162 = ((int)2 * (_y161 - (this->z * this->x)));
HXDLIN( 386)									_y157 = ::Math_obj::atan2(_y162,(((sqw14 - sqx14) - sqy14) + sqz14));
HXDLIN( 386)									Float _z162 = (this->z * this->w);
HXDLIN( 386)									Float _z163 = ((int)2 * (_z162 - (this->x * this->y)));
HXDLIN( 386)									_z157 = ::Math_obj::atan2(_z163,(((sqw14 - sqx14) + sqy14) - sqz14));
            								}
            								else {
HXLINE( 386)									if ((order14 == (int)3)) {
HXLINE( 386)										Float _x160 = (this->x * this->w);
HXDLIN( 386)										Float _x161 = ((int)2 * (_x160 + (this->z * this->y)));
HXDLIN( 386)										_x155 = ::Math_obj::atan2(_x161,(((sqw14 - sqx14) - sqy14) + sqz14));
HXDLIN( 386)										Float value174 = (this->y * this->w);
HXDLIN( 386)										Float value175 = ((int)2 * (value174 - (this->x * this->z)));
HXDLIN( 386)										Float _y163;
HXDLIN( 386)										if ((value175 < (int)-1)) {
HXLINE( 386)											_y163 = (int)-1;
            										}
            										else {
HXLINE( 386)											if ((value175 > (int)1)) {
HXLINE( 386)												_y163 = (int)1;
            											}
            											else {
HXLINE( 386)												_y163 = value175;
            											}
            										}
HXDLIN( 386)										_y157 = ::Math_obj::asin(_y163);
HXDLIN( 386)										Float _z164 = (this->x * this->y);
HXDLIN( 386)										Float _z165 = ((int)2 * (_z164 + (this->z * this->w)));
HXDLIN( 386)										_z157 = ::Math_obj::atan2(_z165,(((sqw14 + sqx14) - sqy14) - sqz14));
            									}
            									else {
HXLINE( 386)										if ((order14 == (int)4)) {
HXLINE( 386)											Float _x162 = (this->x * this->w);
HXDLIN( 386)											Float _x163 = ((int)2 * (_x162 - (this->z * this->y)));
HXDLIN( 386)											_x155 = ::Math_obj::atan2(_x163,(((sqw14 - sqx14) + sqy14) - sqz14));
HXDLIN( 386)											Float _y164 = (this->y * this->w);
HXDLIN( 386)											Float _y165 = ((int)2 * (_y164 - (this->x * this->z)));
HXDLIN( 386)											_y157 = ::Math_obj::atan2(_y165,(((sqw14 + sqx14) - sqy14) - sqz14));
HXDLIN( 386)											Float value176 = (this->x * this->y);
HXDLIN( 386)											Float value177 = ((int)2 * (value176 + (this->z * this->w)));
HXDLIN( 386)											Float _z166;
HXDLIN( 386)											if ((value177 < (int)-1)) {
HXLINE( 386)												_z166 = (int)-1;
            											}
            											else {
HXLINE( 386)												if ((value177 > (int)1)) {
HXLINE( 386)													_z166 = (int)1;
            												}
            												else {
HXLINE( 386)													_z166 = value177;
            												}
            											}
HXDLIN( 386)											_z157 = ::Math_obj::asin(_z166);
            										}
            										else {
HXLINE( 386)											if ((order14 == (int)5)) {
HXLINE( 386)												Float _x164 = (this->x * this->w);
HXDLIN( 386)												Float _x165 = ((int)2 * (_x164 + (this->y * this->z)));
HXDLIN( 386)												_x155 = ::Math_obj::atan2(_x165,(((sqw14 - sqx14) + sqy14) - sqz14));
HXDLIN( 386)												Float _y166 = (this->x * this->z);
HXDLIN( 386)												Float _y167 = ((int)2 * (_y166 + (this->y * this->w)));
HXDLIN( 386)												_y157 = ::Math_obj::atan2(_y167,(((sqw14 + sqx14) - sqy14) - sqz14));
HXDLIN( 386)												Float value178 = (this->z * this->w);
HXDLIN( 386)												Float value179 = ((int)2 * (value178 - (this->x * this->y)));
HXDLIN( 386)												Float _z167;
HXDLIN( 386)												if ((value179 < (int)-1)) {
HXLINE( 386)													_z167 = (int)-1;
            												}
            												else {
HXLINE( 386)													if ((value179 > (int)1)) {
HXLINE( 386)														_z167 = (int)1;
            													}
            													else {
HXLINE( 386)														_z167 = value179;
            													}
            												}
HXDLIN( 386)												_z157 = ::Math_obj::asin(_z167);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 386)						{
HXLINE( 386)							bool prev14 = _this14->ignore_listeners;
HXDLIN( 386)							_this14->ignore_listeners = true;
HXDLIN( 386)							{
HXLINE( 386)								_this14->x = _x155;
HXDLIN( 386)								if (!(_this14->_construct)) {
HXLINE( 386)									bool _hx_tmp134;
HXDLIN( 386)									if (hx::IsNotNull( _this14->listen_x )) {
HXLINE( 386)										_hx_tmp134 = !(_this14->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp134 = false;
            									}
HXDLIN( 386)									if (_hx_tmp134) {
HXLINE( 386)										_this14->listen_x(_x155);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this14->y = _y157;
HXDLIN( 386)								if (!(_this14->_construct)) {
HXLINE( 386)									bool _hx_tmp135;
HXDLIN( 386)									if (hx::IsNotNull( _this14->listen_y )) {
HXLINE( 386)										_hx_tmp135 = !(_this14->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp135 = false;
            									}
HXDLIN( 386)									if (_hx_tmp135) {
HXLINE( 386)										_this14->listen_y(_y157);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this14->z = _z157;
HXDLIN( 386)								if (!(_this14->_construct)) {
HXLINE( 386)									bool _hx_tmp136;
HXDLIN( 386)									if (hx::IsNotNull( _this14->listen_z )) {
HXLINE( 386)										_hx_tmp136 = !(_this14->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp136 = false;
            									}
HXDLIN( 386)									if (_hx_tmp136) {
HXLINE( 386)										_this14->listen_z(_z157);
            									}
            								}
            							}
HXDLIN( 386)							_this14->ignore_listeners = prev14;
HXDLIN( 386)							bool _hx_tmp137;
HXDLIN( 386)							if (hx::IsNotNull( _this14->listen_x )) {
HXLINE( 386)								_hx_tmp137 = !(_this14->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp137 = false;
            							}
HXDLIN( 386)							if (_hx_tmp137) {
HXLINE( 386)								_this14->listen_x(_this14->x);
            							}
HXDLIN( 386)							bool _hx_tmp138;
HXDLIN( 386)							if (hx::IsNotNull( _this14->listen_y )) {
HXLINE( 386)								_hx_tmp138 = !(_this14->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp138 = false;
            							}
HXDLIN( 386)							if (_hx_tmp138) {
HXLINE( 386)								_this14->listen_y(_this14->y);
            							}
HXDLIN( 386)							bool _hx_tmp139;
HXDLIN( 386)							if (hx::IsNotNull( _this14->listen_z )) {
HXLINE( 386)								_hx_tmp139 = !(_this14->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp139 = false;
            							}
HXDLIN( 386)							if (_hx_tmp139) {
HXLINE( 386)								_this14->listen_z(_this14->z);
            							}
            						}
            					}
HXDLIN( 386)					bool _hx_tmp140;
HXDLIN( 386)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 386)						_hx_tmp140 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp140 = false;
            					}
HXDLIN( 386)					if (_hx_tmp140) {
HXLINE( 386)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 386)			{
HXLINE( 386)				this->y = _y156;
HXDLIN( 386)				if (!(this->_construct)) {
HXLINE( 386)					bool _hx_tmp141;
HXDLIN( 386)					bool _hx_tmp142;
HXDLIN( 386)					if (hx::IsNotNull( this->euler )) {
HXLINE( 386)						_hx_tmp142 = this->ignore_euler;
            					}
            					else {
HXLINE( 386)						_hx_tmp142 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp142)) {
HXLINE( 386)						_hx_tmp141 = this->_construct;
            					}
            					else {
HXLINE( 386)						_hx_tmp141 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp141)) {
HXLINE( 386)						 ::phoenix::Vector _this15 = this->euler;
HXDLIN( 386)						int order15 = (int)0;
HXDLIN( 386)						Float sqx15 = (this->x * this->x);
HXDLIN( 386)						Float sqy15 = (this->y * this->y);
HXDLIN( 386)						Float sqz15 = (this->z * this->z);
HXDLIN( 386)						Float sqw15 = (this->w * this->w);
HXDLIN( 386)						Float _x166 = _this15->x;
HXDLIN( 386)						Float _y168 = _this15->y;
HXDLIN( 386)						Float _z168 = _this15->z;
HXDLIN( 386)						if ((order15 == (int)0)) {
HXLINE( 386)							Float _x167 = (this->x * this->w);
HXDLIN( 386)							Float _x168 = ((int)2 * (_x167 - (this->y * this->z)));
HXDLIN( 386)							_x166 = ::Math_obj::atan2(_x168,(((sqw15 - sqx15) - sqy15) + sqz15));
HXDLIN( 386)							Float value180 = (this->x * this->z);
HXDLIN( 386)							Float value181 = ((int)2 * (value180 + (this->y * this->w)));
HXDLIN( 386)							Float _y169;
HXDLIN( 386)							if ((value181 < (int)-1)) {
HXLINE( 386)								_y169 = (int)-1;
            							}
            							else {
HXLINE( 386)								if ((value181 > (int)1)) {
HXLINE( 386)									_y169 = (int)1;
            								}
            								else {
HXLINE( 386)									_y169 = value181;
            								}
            							}
HXDLIN( 386)							_y168 = ::Math_obj::asin(_y169);
HXDLIN( 386)							Float _z169 = (this->z * this->w);
HXDLIN( 386)							Float _z170 = ((int)2 * (_z169 - (this->x * this->y)));
HXDLIN( 386)							_z168 = ::Math_obj::atan2(_z170,(((sqw15 + sqx15) - sqy15) - sqz15));
            						}
            						else {
HXLINE( 386)							if ((order15 == (int)1)) {
HXLINE( 386)								Float value182 = (this->x * this->w);
HXDLIN( 386)								Float value183 = ((int)2 * (value182 - (this->y * this->z)));
HXDLIN( 386)								Float _x169;
HXDLIN( 386)								if ((value183 < (int)-1)) {
HXLINE( 386)									_x169 = (int)-1;
            								}
            								else {
HXLINE( 386)									if ((value183 > (int)1)) {
HXLINE( 386)										_x169 = (int)1;
            									}
            									else {
HXLINE( 386)										_x169 = value183;
            									}
            								}
HXDLIN( 386)								_x166 = ::Math_obj::asin(_x169);
HXDLIN( 386)								Float _y170 = (this->x * this->z);
HXDLIN( 386)								Float _y171 = ((int)2 * (_y170 + (this->y * this->w)));
HXDLIN( 386)								_y168 = ::Math_obj::atan2(_y171,(((sqw15 - sqx15) - sqy15) + sqz15));
HXDLIN( 386)								Float _z171 = (this->x * this->y);
HXDLIN( 386)								Float _z172 = ((int)2 * (_z171 + (this->z * this->w)));
HXDLIN( 386)								_z168 = ::Math_obj::atan2(_z172,(((sqw15 - sqx15) + sqy15) - sqz15));
            							}
            							else {
HXLINE( 386)								if ((order15 == (int)2)) {
HXLINE( 386)									Float value184 = (this->x * this->w);
HXDLIN( 386)									Float value185 = ((int)2 * (value184 + (this->y * this->z)));
HXDLIN( 386)									Float _x170;
HXDLIN( 386)									if ((value185 < (int)-1)) {
HXLINE( 386)										_x170 = (int)-1;
            									}
            									else {
HXLINE( 386)										if ((value185 > (int)1)) {
HXLINE( 386)											_x170 = (int)1;
            										}
            										else {
HXLINE( 386)											_x170 = value185;
            										}
            									}
HXDLIN( 386)									_x166 = ::Math_obj::asin(_x170);
HXDLIN( 386)									Float _y172 = (this->y * this->w);
HXDLIN( 386)									Float _y173 = ((int)2 * (_y172 - (this->z * this->x)));
HXDLIN( 386)									_y168 = ::Math_obj::atan2(_y173,(((sqw15 - sqx15) - sqy15) + sqz15));
HXDLIN( 386)									Float _z173 = (this->z * this->w);
HXDLIN( 386)									Float _z174 = ((int)2 * (_z173 - (this->x * this->y)));
HXDLIN( 386)									_z168 = ::Math_obj::atan2(_z174,(((sqw15 - sqx15) + sqy15) - sqz15));
            								}
            								else {
HXLINE( 386)									if ((order15 == (int)3)) {
HXLINE( 386)										Float _x171 = (this->x * this->w);
HXDLIN( 386)										Float _x172 = ((int)2 * (_x171 + (this->z * this->y)));
HXDLIN( 386)										_x166 = ::Math_obj::atan2(_x172,(((sqw15 - sqx15) - sqy15) + sqz15));
HXDLIN( 386)										Float value186 = (this->y * this->w);
HXDLIN( 386)										Float value187 = ((int)2 * (value186 - (this->x * this->z)));
HXDLIN( 386)										Float _y174;
HXDLIN( 386)										if ((value187 < (int)-1)) {
HXLINE( 386)											_y174 = (int)-1;
            										}
            										else {
HXLINE( 386)											if ((value187 > (int)1)) {
HXLINE( 386)												_y174 = (int)1;
            											}
            											else {
HXLINE( 386)												_y174 = value187;
            											}
            										}
HXDLIN( 386)										_y168 = ::Math_obj::asin(_y174);
HXDLIN( 386)										Float _z175 = (this->x * this->y);
HXDLIN( 386)										Float _z176 = ((int)2 * (_z175 + (this->z * this->w)));
HXDLIN( 386)										_z168 = ::Math_obj::atan2(_z176,(((sqw15 + sqx15) - sqy15) - sqz15));
            									}
            									else {
HXLINE( 386)										if ((order15 == (int)4)) {
HXLINE( 386)											Float _x173 = (this->x * this->w);
HXDLIN( 386)											Float _x174 = ((int)2 * (_x173 - (this->z * this->y)));
HXDLIN( 386)											_x166 = ::Math_obj::atan2(_x174,(((sqw15 - sqx15) + sqy15) - sqz15));
HXDLIN( 386)											Float _y175 = (this->y * this->w);
HXDLIN( 386)											Float _y176 = ((int)2 * (_y175 - (this->x * this->z)));
HXDLIN( 386)											_y168 = ::Math_obj::atan2(_y176,(((sqw15 + sqx15) - sqy15) - sqz15));
HXDLIN( 386)											Float value188 = (this->x * this->y);
HXDLIN( 386)											Float value189 = ((int)2 * (value188 + (this->z * this->w)));
HXDLIN( 386)											Float _z177;
HXDLIN( 386)											if ((value189 < (int)-1)) {
HXLINE( 386)												_z177 = (int)-1;
            											}
            											else {
HXLINE( 386)												if ((value189 > (int)1)) {
HXLINE( 386)													_z177 = (int)1;
            												}
            												else {
HXLINE( 386)													_z177 = value189;
            												}
            											}
HXDLIN( 386)											_z168 = ::Math_obj::asin(_z177);
            										}
            										else {
HXLINE( 386)											if ((order15 == (int)5)) {
HXLINE( 386)												Float _x175 = (this->x * this->w);
HXDLIN( 386)												Float _x176 = ((int)2 * (_x175 + (this->y * this->z)));
HXDLIN( 386)												_x166 = ::Math_obj::atan2(_x176,(((sqw15 - sqx15) + sqy15) - sqz15));
HXDLIN( 386)												Float _y177 = (this->x * this->z);
HXDLIN( 386)												Float _y178 = ((int)2 * (_y177 + (this->y * this->w)));
HXDLIN( 386)												_y168 = ::Math_obj::atan2(_y178,(((sqw15 + sqx15) - sqy15) - sqz15));
HXDLIN( 386)												Float value190 = (this->z * this->w);
HXDLIN( 386)												Float value191 = ((int)2 * (value190 - (this->x * this->y)));
HXDLIN( 386)												Float _z178;
HXDLIN( 386)												if ((value191 < (int)-1)) {
HXLINE( 386)													_z178 = (int)-1;
            												}
            												else {
HXLINE( 386)													if ((value191 > (int)1)) {
HXLINE( 386)														_z178 = (int)1;
            													}
            													else {
HXLINE( 386)														_z178 = value191;
            													}
            												}
HXDLIN( 386)												_z168 = ::Math_obj::asin(_z178);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 386)						{
HXLINE( 386)							bool prev15 = _this15->ignore_listeners;
HXDLIN( 386)							_this15->ignore_listeners = true;
HXDLIN( 386)							{
HXLINE( 386)								_this15->x = _x166;
HXDLIN( 386)								if (!(_this15->_construct)) {
HXLINE( 386)									bool _hx_tmp143;
HXDLIN( 386)									if (hx::IsNotNull( _this15->listen_x )) {
HXLINE( 386)										_hx_tmp143 = !(_this15->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp143 = false;
            									}
HXDLIN( 386)									if (_hx_tmp143) {
HXLINE( 386)										_this15->listen_x(_x166);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this15->y = _y168;
HXDLIN( 386)								if (!(_this15->_construct)) {
HXLINE( 386)									bool _hx_tmp144;
HXDLIN( 386)									if (hx::IsNotNull( _this15->listen_y )) {
HXLINE( 386)										_hx_tmp144 = !(_this15->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp144 = false;
            									}
HXDLIN( 386)									if (_hx_tmp144) {
HXLINE( 386)										_this15->listen_y(_y168);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this15->z = _z168;
HXDLIN( 386)								if (!(_this15->_construct)) {
HXLINE( 386)									bool _hx_tmp145;
HXDLIN( 386)									if (hx::IsNotNull( _this15->listen_z )) {
HXLINE( 386)										_hx_tmp145 = !(_this15->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp145 = false;
            									}
HXDLIN( 386)									if (_hx_tmp145) {
HXLINE( 386)										_this15->listen_z(_z168);
            									}
            								}
            							}
HXDLIN( 386)							_this15->ignore_listeners = prev15;
HXDLIN( 386)							bool _hx_tmp146;
HXDLIN( 386)							if (hx::IsNotNull( _this15->listen_x )) {
HXLINE( 386)								_hx_tmp146 = !(_this15->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp146 = false;
            							}
HXDLIN( 386)							if (_hx_tmp146) {
HXLINE( 386)								_this15->listen_x(_this15->x);
            							}
HXDLIN( 386)							bool _hx_tmp147;
HXDLIN( 386)							if (hx::IsNotNull( _this15->listen_y )) {
HXLINE( 386)								_hx_tmp147 = !(_this15->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp147 = false;
            							}
HXDLIN( 386)							if (_hx_tmp147) {
HXLINE( 386)								_this15->listen_y(_this15->y);
            							}
HXDLIN( 386)							bool _hx_tmp148;
HXDLIN( 386)							if (hx::IsNotNull( _this15->listen_z )) {
HXLINE( 386)								_hx_tmp148 = !(_this15->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp148 = false;
            							}
HXDLIN( 386)							if (_hx_tmp148) {
HXLINE( 386)								_this15->listen_z(_this15->z);
            							}
            						}
            					}
HXDLIN( 386)					bool _hx_tmp149;
HXDLIN( 386)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 386)						_hx_tmp149 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp149 = false;
            					}
HXDLIN( 386)					if (_hx_tmp149) {
HXLINE( 386)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 386)			{
HXLINE( 386)				this->z = _z156;
HXDLIN( 386)				if (!(this->_construct)) {
HXLINE( 386)					bool _hx_tmp150;
HXDLIN( 386)					bool _hx_tmp151;
HXDLIN( 386)					if (hx::IsNotNull( this->euler )) {
HXLINE( 386)						_hx_tmp151 = this->ignore_euler;
            					}
            					else {
HXLINE( 386)						_hx_tmp151 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp151)) {
HXLINE( 386)						_hx_tmp150 = this->_construct;
            					}
            					else {
HXLINE( 386)						_hx_tmp150 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp150)) {
HXLINE( 386)						 ::phoenix::Vector _this16 = this->euler;
HXDLIN( 386)						int order16 = (int)0;
HXDLIN( 386)						Float sqx16 = (this->x * this->x);
HXDLIN( 386)						Float sqy16 = (this->y * this->y);
HXDLIN( 386)						Float sqz16 = (this->z * this->z);
HXDLIN( 386)						Float sqw16 = (this->w * this->w);
HXDLIN( 386)						Float _x177 = _this16->x;
HXDLIN( 386)						Float _y179 = _this16->y;
HXDLIN( 386)						Float _z179 = _this16->z;
HXDLIN( 386)						if ((order16 == (int)0)) {
HXLINE( 386)							Float _x178 = (this->x * this->w);
HXDLIN( 386)							Float _x179 = ((int)2 * (_x178 - (this->y * this->z)));
HXDLIN( 386)							_x177 = ::Math_obj::atan2(_x179,(((sqw16 - sqx16) - sqy16) + sqz16));
HXDLIN( 386)							Float value192 = (this->x * this->z);
HXDLIN( 386)							Float value193 = ((int)2 * (value192 + (this->y * this->w)));
HXDLIN( 386)							Float _y180;
HXDLIN( 386)							if ((value193 < (int)-1)) {
HXLINE( 386)								_y180 = (int)-1;
            							}
            							else {
HXLINE( 386)								if ((value193 > (int)1)) {
HXLINE( 386)									_y180 = (int)1;
            								}
            								else {
HXLINE( 386)									_y180 = value193;
            								}
            							}
HXDLIN( 386)							_y179 = ::Math_obj::asin(_y180);
HXDLIN( 386)							Float _z180 = (this->z * this->w);
HXDLIN( 386)							Float _z181 = ((int)2 * (_z180 - (this->x * this->y)));
HXDLIN( 386)							_z179 = ::Math_obj::atan2(_z181,(((sqw16 + sqx16) - sqy16) - sqz16));
            						}
            						else {
HXLINE( 386)							if ((order16 == (int)1)) {
HXLINE( 386)								Float value194 = (this->x * this->w);
HXDLIN( 386)								Float value195 = ((int)2 * (value194 - (this->y * this->z)));
HXDLIN( 386)								Float _x180;
HXDLIN( 386)								if ((value195 < (int)-1)) {
HXLINE( 386)									_x180 = (int)-1;
            								}
            								else {
HXLINE( 386)									if ((value195 > (int)1)) {
HXLINE( 386)										_x180 = (int)1;
            									}
            									else {
HXLINE( 386)										_x180 = value195;
            									}
            								}
HXDLIN( 386)								_x177 = ::Math_obj::asin(_x180);
HXDLIN( 386)								Float _y181 = (this->x * this->z);
HXDLIN( 386)								Float _y182 = ((int)2 * (_y181 + (this->y * this->w)));
HXDLIN( 386)								_y179 = ::Math_obj::atan2(_y182,(((sqw16 - sqx16) - sqy16) + sqz16));
HXDLIN( 386)								Float _z182 = (this->x * this->y);
HXDLIN( 386)								Float _z183 = ((int)2 * (_z182 + (this->z * this->w)));
HXDLIN( 386)								_z179 = ::Math_obj::atan2(_z183,(((sqw16 - sqx16) + sqy16) - sqz16));
            							}
            							else {
HXLINE( 386)								if ((order16 == (int)2)) {
HXLINE( 386)									Float value196 = (this->x * this->w);
HXDLIN( 386)									Float value197 = ((int)2 * (value196 + (this->y * this->z)));
HXDLIN( 386)									Float _x181;
HXDLIN( 386)									if ((value197 < (int)-1)) {
HXLINE( 386)										_x181 = (int)-1;
            									}
            									else {
HXLINE( 386)										if ((value197 > (int)1)) {
HXLINE( 386)											_x181 = (int)1;
            										}
            										else {
HXLINE( 386)											_x181 = value197;
            										}
            									}
HXDLIN( 386)									_x177 = ::Math_obj::asin(_x181);
HXDLIN( 386)									Float _y183 = (this->y * this->w);
HXDLIN( 386)									Float _y184 = ((int)2 * (_y183 - (this->z * this->x)));
HXDLIN( 386)									_y179 = ::Math_obj::atan2(_y184,(((sqw16 - sqx16) - sqy16) + sqz16));
HXDLIN( 386)									Float _z184 = (this->z * this->w);
HXDLIN( 386)									Float _z185 = ((int)2 * (_z184 - (this->x * this->y)));
HXDLIN( 386)									_z179 = ::Math_obj::atan2(_z185,(((sqw16 - sqx16) + sqy16) - sqz16));
            								}
            								else {
HXLINE( 386)									if ((order16 == (int)3)) {
HXLINE( 386)										Float _x182 = (this->x * this->w);
HXDLIN( 386)										Float _x183 = ((int)2 * (_x182 + (this->z * this->y)));
HXDLIN( 386)										_x177 = ::Math_obj::atan2(_x183,(((sqw16 - sqx16) - sqy16) + sqz16));
HXDLIN( 386)										Float value198 = (this->y * this->w);
HXDLIN( 386)										Float value199 = ((int)2 * (value198 - (this->x * this->z)));
HXDLIN( 386)										Float _y185;
HXDLIN( 386)										if ((value199 < (int)-1)) {
HXLINE( 386)											_y185 = (int)-1;
            										}
            										else {
HXLINE( 386)											if ((value199 > (int)1)) {
HXLINE( 386)												_y185 = (int)1;
            											}
            											else {
HXLINE( 386)												_y185 = value199;
            											}
            										}
HXDLIN( 386)										_y179 = ::Math_obj::asin(_y185);
HXDLIN( 386)										Float _z186 = (this->x * this->y);
HXDLIN( 386)										Float _z187 = ((int)2 * (_z186 + (this->z * this->w)));
HXDLIN( 386)										_z179 = ::Math_obj::atan2(_z187,(((sqw16 + sqx16) - sqy16) - sqz16));
            									}
            									else {
HXLINE( 386)										if ((order16 == (int)4)) {
HXLINE( 386)											Float _x184 = (this->x * this->w);
HXDLIN( 386)											Float _x185 = ((int)2 * (_x184 - (this->z * this->y)));
HXDLIN( 386)											_x177 = ::Math_obj::atan2(_x185,(((sqw16 - sqx16) + sqy16) - sqz16));
HXDLIN( 386)											Float _y186 = (this->y * this->w);
HXDLIN( 386)											Float _y187 = ((int)2 * (_y186 - (this->x * this->z)));
HXDLIN( 386)											_y179 = ::Math_obj::atan2(_y187,(((sqw16 + sqx16) - sqy16) - sqz16));
HXDLIN( 386)											Float value200 = (this->x * this->y);
HXDLIN( 386)											Float value201 = ((int)2 * (value200 + (this->z * this->w)));
HXDLIN( 386)											Float _z188;
HXDLIN( 386)											if ((value201 < (int)-1)) {
HXLINE( 386)												_z188 = (int)-1;
            											}
            											else {
HXLINE( 386)												if ((value201 > (int)1)) {
HXLINE( 386)													_z188 = (int)1;
            												}
            												else {
HXLINE( 386)													_z188 = value201;
            												}
            											}
HXDLIN( 386)											_z179 = ::Math_obj::asin(_z188);
            										}
            										else {
HXLINE( 386)											if ((order16 == (int)5)) {
HXLINE( 386)												Float _x186 = (this->x * this->w);
HXDLIN( 386)												Float _x187 = ((int)2 * (_x186 + (this->y * this->z)));
HXDLIN( 386)												_x177 = ::Math_obj::atan2(_x187,(((sqw16 - sqx16) + sqy16) - sqz16));
HXDLIN( 386)												Float _y188 = (this->x * this->z);
HXDLIN( 386)												Float _y189 = ((int)2 * (_y188 + (this->y * this->w)));
HXDLIN( 386)												_y179 = ::Math_obj::atan2(_y189,(((sqw16 + sqx16) - sqy16) - sqz16));
HXDLIN( 386)												Float value202 = (this->z * this->w);
HXDLIN( 386)												Float value203 = ((int)2 * (value202 - (this->x * this->y)));
HXDLIN( 386)												Float _z189;
HXDLIN( 386)												if ((value203 < (int)-1)) {
HXLINE( 386)													_z189 = (int)-1;
            												}
            												else {
HXLINE( 386)													if ((value203 > (int)1)) {
HXLINE( 386)														_z189 = (int)1;
            													}
            													else {
HXLINE( 386)														_z189 = value203;
            													}
            												}
HXDLIN( 386)												_z179 = ::Math_obj::asin(_z189);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 386)						{
HXLINE( 386)							bool prev16 = _this16->ignore_listeners;
HXDLIN( 386)							_this16->ignore_listeners = true;
HXDLIN( 386)							{
HXLINE( 386)								_this16->x = _x177;
HXDLIN( 386)								if (!(_this16->_construct)) {
HXLINE( 386)									bool _hx_tmp152;
HXDLIN( 386)									if (hx::IsNotNull( _this16->listen_x )) {
HXLINE( 386)										_hx_tmp152 = !(_this16->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp152 = false;
            									}
HXDLIN( 386)									if (_hx_tmp152) {
HXLINE( 386)										_this16->listen_x(_x177);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this16->y = _y179;
HXDLIN( 386)								if (!(_this16->_construct)) {
HXLINE( 386)									bool _hx_tmp153;
HXDLIN( 386)									if (hx::IsNotNull( _this16->listen_y )) {
HXLINE( 386)										_hx_tmp153 = !(_this16->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp153 = false;
            									}
HXDLIN( 386)									if (_hx_tmp153) {
HXLINE( 386)										_this16->listen_y(_y179);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this16->z = _z179;
HXDLIN( 386)								if (!(_this16->_construct)) {
HXLINE( 386)									bool _hx_tmp154;
HXDLIN( 386)									if (hx::IsNotNull( _this16->listen_z )) {
HXLINE( 386)										_hx_tmp154 = !(_this16->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp154 = false;
            									}
HXDLIN( 386)									if (_hx_tmp154) {
HXLINE( 386)										_this16->listen_z(_z179);
            									}
            								}
            							}
HXDLIN( 386)							_this16->ignore_listeners = prev16;
HXDLIN( 386)							bool _hx_tmp155;
HXDLIN( 386)							if (hx::IsNotNull( _this16->listen_x )) {
HXLINE( 386)								_hx_tmp155 = !(_this16->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp155 = false;
            							}
HXDLIN( 386)							if (_hx_tmp155) {
HXLINE( 386)								_this16->listen_x(_this16->x);
            							}
HXDLIN( 386)							bool _hx_tmp156;
HXDLIN( 386)							if (hx::IsNotNull( _this16->listen_y )) {
HXLINE( 386)								_hx_tmp156 = !(_this16->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp156 = false;
            							}
HXDLIN( 386)							if (_hx_tmp156) {
HXLINE( 386)								_this16->listen_y(_this16->y);
            							}
HXDLIN( 386)							bool _hx_tmp157;
HXDLIN( 386)							if (hx::IsNotNull( _this16->listen_z )) {
HXLINE( 386)								_hx_tmp157 = !(_this16->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp157 = false;
            							}
HXDLIN( 386)							if (_hx_tmp157) {
HXLINE( 386)								_this16->listen_z(_this16->z);
            							}
            						}
            					}
HXDLIN( 386)					bool _hx_tmp158;
HXDLIN( 386)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 386)						_hx_tmp158 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp158 = false;
            					}
HXDLIN( 386)					if (_hx_tmp158) {
HXLINE( 386)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 386)			{
HXLINE( 386)				this->w = _w2;
HXDLIN( 386)				if (!(this->_construct)) {
HXLINE( 386)					bool _hx_tmp159;
HXDLIN( 386)					bool _hx_tmp160;
HXDLIN( 386)					if (hx::IsNotNull( this->euler )) {
HXLINE( 386)						_hx_tmp160 = this->ignore_euler;
            					}
            					else {
HXLINE( 386)						_hx_tmp160 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp160)) {
HXLINE( 386)						_hx_tmp159 = this->_construct;
            					}
            					else {
HXLINE( 386)						_hx_tmp159 = true;
            					}
HXDLIN( 386)					if (!(_hx_tmp159)) {
HXLINE( 386)						 ::phoenix::Vector _this17 = this->euler;
HXDLIN( 386)						int order17 = (int)0;
HXDLIN( 386)						Float sqx17 = (this->x * this->x);
HXDLIN( 386)						Float sqy17 = (this->y * this->y);
HXDLIN( 386)						Float sqz17 = (this->z * this->z);
HXDLIN( 386)						Float sqw17 = (this->w * this->w);
HXDLIN( 386)						Float _x188 = _this17->x;
HXDLIN( 386)						Float _y190 = _this17->y;
HXDLIN( 386)						Float _z190 = _this17->z;
HXDLIN( 386)						if ((order17 == (int)0)) {
HXLINE( 386)							Float _x189 = (this->x * this->w);
HXDLIN( 386)							Float _x190 = ((int)2 * (_x189 - (this->y * this->z)));
HXDLIN( 386)							_x188 = ::Math_obj::atan2(_x190,(((sqw17 - sqx17) - sqy17) + sqz17));
HXDLIN( 386)							Float value204 = (this->x * this->z);
HXDLIN( 386)							Float value205 = ((int)2 * (value204 + (this->y * this->w)));
HXDLIN( 386)							Float _y191;
HXDLIN( 386)							if ((value205 < (int)-1)) {
HXLINE( 386)								_y191 = (int)-1;
            							}
            							else {
HXLINE( 386)								if ((value205 > (int)1)) {
HXLINE( 386)									_y191 = (int)1;
            								}
            								else {
HXLINE( 386)									_y191 = value205;
            								}
            							}
HXDLIN( 386)							_y190 = ::Math_obj::asin(_y191);
HXDLIN( 386)							Float _z191 = (this->z * this->w);
HXDLIN( 386)							Float _z192 = ((int)2 * (_z191 - (this->x * this->y)));
HXDLIN( 386)							_z190 = ::Math_obj::atan2(_z192,(((sqw17 + sqx17) - sqy17) - sqz17));
            						}
            						else {
HXLINE( 386)							if ((order17 == (int)1)) {
HXLINE( 386)								Float value206 = (this->x * this->w);
HXDLIN( 386)								Float value207 = ((int)2 * (value206 - (this->y * this->z)));
HXDLIN( 386)								Float _x191;
HXDLIN( 386)								if ((value207 < (int)-1)) {
HXLINE( 386)									_x191 = (int)-1;
            								}
            								else {
HXLINE( 386)									if ((value207 > (int)1)) {
HXLINE( 386)										_x191 = (int)1;
            									}
            									else {
HXLINE( 386)										_x191 = value207;
            									}
            								}
HXDLIN( 386)								_x188 = ::Math_obj::asin(_x191);
HXDLIN( 386)								Float _y192 = (this->x * this->z);
HXDLIN( 386)								Float _y193 = ((int)2 * (_y192 + (this->y * this->w)));
HXDLIN( 386)								_y190 = ::Math_obj::atan2(_y193,(((sqw17 - sqx17) - sqy17) + sqz17));
HXDLIN( 386)								Float _z193 = (this->x * this->y);
HXDLIN( 386)								Float _z194 = ((int)2 * (_z193 + (this->z * this->w)));
HXDLIN( 386)								_z190 = ::Math_obj::atan2(_z194,(((sqw17 - sqx17) + sqy17) - sqz17));
            							}
            							else {
HXLINE( 386)								if ((order17 == (int)2)) {
HXLINE( 386)									Float value208 = (this->x * this->w);
HXDLIN( 386)									Float value209 = ((int)2 * (value208 + (this->y * this->z)));
HXDLIN( 386)									Float _x192;
HXDLIN( 386)									if ((value209 < (int)-1)) {
HXLINE( 386)										_x192 = (int)-1;
            									}
            									else {
HXLINE( 386)										if ((value209 > (int)1)) {
HXLINE( 386)											_x192 = (int)1;
            										}
            										else {
HXLINE( 386)											_x192 = value209;
            										}
            									}
HXDLIN( 386)									_x188 = ::Math_obj::asin(_x192);
HXDLIN( 386)									Float _y194 = (this->y * this->w);
HXDLIN( 386)									Float _y195 = ((int)2 * (_y194 - (this->z * this->x)));
HXDLIN( 386)									_y190 = ::Math_obj::atan2(_y195,(((sqw17 - sqx17) - sqy17) + sqz17));
HXDLIN( 386)									Float _z195 = (this->z * this->w);
HXDLIN( 386)									Float _z196 = ((int)2 * (_z195 - (this->x * this->y)));
HXDLIN( 386)									_z190 = ::Math_obj::atan2(_z196,(((sqw17 - sqx17) + sqy17) - sqz17));
            								}
            								else {
HXLINE( 386)									if ((order17 == (int)3)) {
HXLINE( 386)										Float _x193 = (this->x * this->w);
HXDLIN( 386)										Float _x194 = ((int)2 * (_x193 + (this->z * this->y)));
HXDLIN( 386)										_x188 = ::Math_obj::atan2(_x194,(((sqw17 - sqx17) - sqy17) + sqz17));
HXDLIN( 386)										Float value210 = (this->y * this->w);
HXDLIN( 386)										Float value211 = ((int)2 * (value210 - (this->x * this->z)));
HXDLIN( 386)										Float _y196;
HXDLIN( 386)										if ((value211 < (int)-1)) {
HXLINE( 386)											_y196 = (int)-1;
            										}
            										else {
HXLINE( 386)											if ((value211 > (int)1)) {
HXLINE( 386)												_y196 = (int)1;
            											}
            											else {
HXLINE( 386)												_y196 = value211;
            											}
            										}
HXDLIN( 386)										_y190 = ::Math_obj::asin(_y196);
HXDLIN( 386)										Float _z197 = (this->x * this->y);
HXDLIN( 386)										Float _z198 = ((int)2 * (_z197 + (this->z * this->w)));
HXDLIN( 386)										_z190 = ::Math_obj::atan2(_z198,(((sqw17 + sqx17) - sqy17) - sqz17));
            									}
            									else {
HXLINE( 386)										if ((order17 == (int)4)) {
HXLINE( 386)											Float _x195 = (this->x * this->w);
HXDLIN( 386)											Float _x196 = ((int)2 * (_x195 - (this->z * this->y)));
HXDLIN( 386)											_x188 = ::Math_obj::atan2(_x196,(((sqw17 - sqx17) + sqy17) - sqz17));
HXDLIN( 386)											Float _y197 = (this->y * this->w);
HXDLIN( 386)											Float _y198 = ((int)2 * (_y197 - (this->x * this->z)));
HXDLIN( 386)											_y190 = ::Math_obj::atan2(_y198,(((sqw17 + sqx17) - sqy17) - sqz17));
HXDLIN( 386)											Float value212 = (this->x * this->y);
HXDLIN( 386)											Float value213 = ((int)2 * (value212 + (this->z * this->w)));
HXDLIN( 386)											Float _z199;
HXDLIN( 386)											if ((value213 < (int)-1)) {
HXLINE( 386)												_z199 = (int)-1;
            											}
            											else {
HXLINE( 386)												if ((value213 > (int)1)) {
HXLINE( 386)													_z199 = (int)1;
            												}
            												else {
HXLINE( 386)													_z199 = value213;
            												}
            											}
HXDLIN( 386)											_z190 = ::Math_obj::asin(_z199);
            										}
            										else {
HXLINE( 386)											if ((order17 == (int)5)) {
HXLINE( 386)												Float _x197 = (this->x * this->w);
HXDLIN( 386)												Float _x198 = ((int)2 * (_x197 + (this->y * this->z)));
HXDLIN( 386)												_x188 = ::Math_obj::atan2(_x198,(((sqw17 - sqx17) + sqy17) - sqz17));
HXDLIN( 386)												Float _y199 = (this->x * this->z);
HXDLIN( 386)												Float _y200 = ((int)2 * (_y199 + (this->y * this->w)));
HXDLIN( 386)												_y190 = ::Math_obj::atan2(_y200,(((sqw17 + sqx17) - sqy17) - sqz17));
HXDLIN( 386)												Float value214 = (this->z * this->w);
HXDLIN( 386)												Float value215 = ((int)2 * (value214 - (this->x * this->y)));
HXDLIN( 386)												Float _z200;
HXDLIN( 386)												if ((value215 < (int)-1)) {
HXLINE( 386)													_z200 = (int)-1;
            												}
            												else {
HXLINE( 386)													if ((value215 > (int)1)) {
HXLINE( 386)														_z200 = (int)1;
            													}
            													else {
HXLINE( 386)														_z200 = value215;
            													}
            												}
HXDLIN( 386)												_z190 = ::Math_obj::asin(_z200);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 386)						{
HXLINE( 386)							bool prev17 = _this17->ignore_listeners;
HXDLIN( 386)							_this17->ignore_listeners = true;
HXDLIN( 386)							{
HXLINE( 386)								_this17->x = _x188;
HXDLIN( 386)								if (!(_this17->_construct)) {
HXLINE( 386)									bool _hx_tmp161;
HXDLIN( 386)									if (hx::IsNotNull( _this17->listen_x )) {
HXLINE( 386)										_hx_tmp161 = !(_this17->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp161 = false;
            									}
HXDLIN( 386)									if (_hx_tmp161) {
HXLINE( 386)										_this17->listen_x(_x188);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this17->y = _y190;
HXDLIN( 386)								if (!(_this17->_construct)) {
HXLINE( 386)									bool _hx_tmp162;
HXDLIN( 386)									if (hx::IsNotNull( _this17->listen_y )) {
HXLINE( 386)										_hx_tmp162 = !(_this17->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp162 = false;
            									}
HXDLIN( 386)									if (_hx_tmp162) {
HXLINE( 386)										_this17->listen_y(_y190);
            									}
            								}
            							}
HXDLIN( 386)							{
HXLINE( 386)								_this17->z = _z190;
HXDLIN( 386)								if (!(_this17->_construct)) {
HXLINE( 386)									bool _hx_tmp163;
HXDLIN( 386)									if (hx::IsNotNull( _this17->listen_z )) {
HXLINE( 386)										_hx_tmp163 = !(_this17->ignore_listeners);
            									}
            									else {
HXLINE( 386)										_hx_tmp163 = false;
            									}
HXDLIN( 386)									if (_hx_tmp163) {
HXLINE( 386)										_this17->listen_z(_z190);
            									}
            								}
            							}
HXDLIN( 386)							_this17->ignore_listeners = prev17;
HXDLIN( 386)							bool _hx_tmp164;
HXDLIN( 386)							if (hx::IsNotNull( _this17->listen_x )) {
HXLINE( 386)								_hx_tmp164 = !(_this17->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp164 = false;
            							}
HXDLIN( 386)							if (_hx_tmp164) {
HXLINE( 386)								_this17->listen_x(_this17->x);
            							}
HXDLIN( 386)							bool _hx_tmp165;
HXDLIN( 386)							if (hx::IsNotNull( _this17->listen_y )) {
HXLINE( 386)								_hx_tmp165 = !(_this17->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp165 = false;
            							}
HXDLIN( 386)							if (_hx_tmp165) {
HXLINE( 386)								_this17->listen_y(_this17->y);
            							}
HXDLIN( 386)							bool _hx_tmp166;
HXDLIN( 386)							if (hx::IsNotNull( _this17->listen_z )) {
HXLINE( 386)								_hx_tmp166 = !(_this17->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp166 = false;
            							}
HXDLIN( 386)							if (_hx_tmp166) {
HXLINE( 386)								_this17->listen_z(_this17->z);
            							}
            						}
            					}
HXDLIN( 386)					bool _hx_tmp167;
HXDLIN( 386)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 386)						_hx_tmp167 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp167 = false;
            					}
HXDLIN( 386)					if (_hx_tmp167) {
HXLINE( 386)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 386)			this->ignore_euler = false;
HXDLIN( 386)			bool _hx_tmp168;
HXDLIN( 386)			bool _hx_tmp169;
HXDLIN( 386)			if (hx::IsNotNull( this->euler )) {
HXLINE( 386)				_hx_tmp169 = this->ignore_euler;
            			}
            			else {
HXLINE( 386)				_hx_tmp169 = true;
            			}
HXDLIN( 386)			if (!(_hx_tmp169)) {
HXLINE( 386)				_hx_tmp168 = this->_construct;
            			}
            			else {
HXLINE( 386)				_hx_tmp168 = true;
            			}
HXDLIN( 386)			if (!(_hx_tmp168)) {
HXLINE( 386)				 ::phoenix::Vector _this18 = this->euler;
HXDLIN( 386)				int order18 = (int)0;
HXDLIN( 386)				Float sqx18 = (this->x * this->x);
HXDLIN( 386)				Float sqy18 = (this->y * this->y);
HXDLIN( 386)				Float sqz18 = (this->z * this->z);
HXDLIN( 386)				Float sqw18 = (this->w * this->w);
HXDLIN( 386)				Float _x199 = _this18->x;
HXDLIN( 386)				Float _y201 = _this18->y;
HXDLIN( 386)				Float _z201 = _this18->z;
HXDLIN( 386)				if ((order18 == (int)0)) {
HXLINE( 386)					Float _x200 = (this->x * this->w);
HXDLIN( 386)					Float _x201 = ((int)2 * (_x200 - (this->y * this->z)));
HXDLIN( 386)					_x199 = ::Math_obj::atan2(_x201,(((sqw18 - sqx18) - sqy18) + sqz18));
HXDLIN( 386)					Float value216 = (this->x * this->z);
HXDLIN( 386)					Float value217 = ((int)2 * (value216 + (this->y * this->w)));
HXDLIN( 386)					Float _y202;
HXDLIN( 386)					if ((value217 < (int)-1)) {
HXLINE( 386)						_y202 = (int)-1;
            					}
            					else {
HXLINE( 386)						if ((value217 > (int)1)) {
HXLINE( 386)							_y202 = (int)1;
            						}
            						else {
HXLINE( 386)							_y202 = value217;
            						}
            					}
HXDLIN( 386)					_y201 = ::Math_obj::asin(_y202);
HXDLIN( 386)					Float _z202 = (this->z * this->w);
HXDLIN( 386)					Float _z203 = ((int)2 * (_z202 - (this->x * this->y)));
HXDLIN( 386)					_z201 = ::Math_obj::atan2(_z203,(((sqw18 + sqx18) - sqy18) - sqz18));
            				}
            				else {
HXLINE( 386)					if ((order18 == (int)1)) {
HXLINE( 386)						Float value218 = (this->x * this->w);
HXDLIN( 386)						Float value219 = ((int)2 * (value218 - (this->y * this->z)));
HXDLIN( 386)						Float _x202;
HXDLIN( 386)						if ((value219 < (int)-1)) {
HXLINE( 386)							_x202 = (int)-1;
            						}
            						else {
HXLINE( 386)							if ((value219 > (int)1)) {
HXLINE( 386)								_x202 = (int)1;
            							}
            							else {
HXLINE( 386)								_x202 = value219;
            							}
            						}
HXDLIN( 386)						_x199 = ::Math_obj::asin(_x202);
HXDLIN( 386)						Float _y203 = (this->x * this->z);
HXDLIN( 386)						Float _y204 = ((int)2 * (_y203 + (this->y * this->w)));
HXDLIN( 386)						_y201 = ::Math_obj::atan2(_y204,(((sqw18 - sqx18) - sqy18) + sqz18));
HXDLIN( 386)						Float _z204 = (this->x * this->y);
HXDLIN( 386)						Float _z205 = ((int)2 * (_z204 + (this->z * this->w)));
HXDLIN( 386)						_z201 = ::Math_obj::atan2(_z205,(((sqw18 - sqx18) + sqy18) - sqz18));
            					}
            					else {
HXLINE( 386)						if ((order18 == (int)2)) {
HXLINE( 386)							Float value220 = (this->x * this->w);
HXDLIN( 386)							Float value221 = ((int)2 * (value220 + (this->y * this->z)));
HXDLIN( 386)							Float _x203;
HXDLIN( 386)							if ((value221 < (int)-1)) {
HXLINE( 386)								_x203 = (int)-1;
            							}
            							else {
HXLINE( 386)								if ((value221 > (int)1)) {
HXLINE( 386)									_x203 = (int)1;
            								}
            								else {
HXLINE( 386)									_x203 = value221;
            								}
            							}
HXDLIN( 386)							_x199 = ::Math_obj::asin(_x203);
HXDLIN( 386)							Float _y205 = (this->y * this->w);
HXDLIN( 386)							Float _y206 = ((int)2 * (_y205 - (this->z * this->x)));
HXDLIN( 386)							_y201 = ::Math_obj::atan2(_y206,(((sqw18 - sqx18) - sqy18) + sqz18));
HXDLIN( 386)							Float _z206 = (this->z * this->w);
HXDLIN( 386)							Float _z207 = ((int)2 * (_z206 - (this->x * this->y)));
HXDLIN( 386)							_z201 = ::Math_obj::atan2(_z207,(((sqw18 - sqx18) + sqy18) - sqz18));
            						}
            						else {
HXLINE( 386)							if ((order18 == (int)3)) {
HXLINE( 386)								Float _x204 = (this->x * this->w);
HXDLIN( 386)								Float _x205 = ((int)2 * (_x204 + (this->z * this->y)));
HXDLIN( 386)								_x199 = ::Math_obj::atan2(_x205,(((sqw18 - sqx18) - sqy18) + sqz18));
HXDLIN( 386)								Float value222 = (this->y * this->w);
HXDLIN( 386)								Float value223 = ((int)2 * (value222 - (this->x * this->z)));
HXDLIN( 386)								Float _y207;
HXDLIN( 386)								if ((value223 < (int)-1)) {
HXLINE( 386)									_y207 = (int)-1;
            								}
            								else {
HXLINE( 386)									if ((value223 > (int)1)) {
HXLINE( 386)										_y207 = (int)1;
            									}
            									else {
HXLINE( 386)										_y207 = value223;
            									}
            								}
HXDLIN( 386)								_y201 = ::Math_obj::asin(_y207);
HXDLIN( 386)								Float _z208 = (this->x * this->y);
HXDLIN( 386)								Float _z209 = ((int)2 * (_z208 + (this->z * this->w)));
HXDLIN( 386)								_z201 = ::Math_obj::atan2(_z209,(((sqw18 + sqx18) - sqy18) - sqz18));
            							}
            							else {
HXLINE( 386)								if ((order18 == (int)4)) {
HXLINE( 386)									Float _x206 = (this->x * this->w);
HXDLIN( 386)									Float _x207 = ((int)2 * (_x206 - (this->z * this->y)));
HXDLIN( 386)									_x199 = ::Math_obj::atan2(_x207,(((sqw18 - sqx18) + sqy18) - sqz18));
HXDLIN( 386)									Float _y208 = (this->y * this->w);
HXDLIN( 386)									Float _y209 = ((int)2 * (_y208 - (this->x * this->z)));
HXDLIN( 386)									_y201 = ::Math_obj::atan2(_y209,(((sqw18 + sqx18) - sqy18) - sqz18));
HXDLIN( 386)									Float value224 = (this->x * this->y);
HXDLIN( 386)									Float value225 = ((int)2 * (value224 + (this->z * this->w)));
HXDLIN( 386)									Float _z210;
HXDLIN( 386)									if ((value225 < (int)-1)) {
HXLINE( 386)										_z210 = (int)-1;
            									}
            									else {
HXLINE( 386)										if ((value225 > (int)1)) {
HXLINE( 386)											_z210 = (int)1;
            										}
            										else {
HXLINE( 386)											_z210 = value225;
            										}
            									}
HXDLIN( 386)									_z201 = ::Math_obj::asin(_z210);
            								}
            								else {
HXLINE( 386)									if ((order18 == (int)5)) {
HXLINE( 386)										Float _x208 = (this->x * this->w);
HXDLIN( 386)										Float _x209 = ((int)2 * (_x208 + (this->y * this->z)));
HXDLIN( 386)										_x199 = ::Math_obj::atan2(_x209,(((sqw18 - sqx18) + sqy18) - sqz18));
HXDLIN( 386)										Float _y210 = (this->x * this->z);
HXDLIN( 386)										Float _y211 = ((int)2 * (_y210 + (this->y * this->w)));
HXDLIN( 386)										_y201 = ::Math_obj::atan2(_y211,(((sqw18 + sqx18) - sqy18) - sqz18));
HXDLIN( 386)										Float value226 = (this->z * this->w);
HXDLIN( 386)										Float value227 = ((int)2 * (value226 - (this->x * this->y)));
HXDLIN( 386)										Float _z211;
HXDLIN( 386)										if ((value227 < (int)-1)) {
HXLINE( 386)											_z211 = (int)-1;
            										}
            										else {
HXLINE( 386)											if ((value227 > (int)1)) {
HXLINE( 386)												_z211 = (int)1;
            											}
            											else {
HXLINE( 386)												_z211 = value227;
            											}
            										}
HXDLIN( 386)										_z201 = ::Math_obj::asin(_z211);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 386)				{
HXLINE( 386)					bool prev18 = _this18->ignore_listeners;
HXDLIN( 386)					_this18->ignore_listeners = true;
HXDLIN( 386)					{
HXLINE( 386)						_this18->x = _x199;
HXDLIN( 386)						if (!(_this18->_construct)) {
HXLINE( 386)							bool _hx_tmp170;
HXDLIN( 386)							if (hx::IsNotNull( _this18->listen_x )) {
HXLINE( 386)								_hx_tmp170 = !(_this18->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp170 = false;
            							}
HXDLIN( 386)							if (_hx_tmp170) {
HXLINE( 386)								_this18->listen_x(_x199);
            							}
            						}
            					}
HXDLIN( 386)					{
HXLINE( 386)						_this18->y = _y201;
HXDLIN( 386)						if (!(_this18->_construct)) {
HXLINE( 386)							bool _hx_tmp171;
HXDLIN( 386)							if (hx::IsNotNull( _this18->listen_y )) {
HXLINE( 386)								_hx_tmp171 = !(_this18->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp171 = false;
            							}
HXDLIN( 386)							if (_hx_tmp171) {
HXLINE( 386)								_this18->listen_y(_y201);
            							}
            						}
            					}
HXDLIN( 386)					{
HXLINE( 386)						_this18->z = _z201;
HXDLIN( 386)						if (!(_this18->_construct)) {
HXLINE( 386)							bool _hx_tmp172;
HXDLIN( 386)							if (hx::IsNotNull( _this18->listen_z )) {
HXLINE( 386)								_hx_tmp172 = !(_this18->ignore_listeners);
            							}
            							else {
HXLINE( 386)								_hx_tmp172 = false;
            							}
HXDLIN( 386)							if (_hx_tmp172) {
HXLINE( 386)								_this18->listen_z(_z201);
            							}
            						}
            					}
HXDLIN( 386)					_this18->ignore_listeners = prev18;
HXDLIN( 386)					bool _hx_tmp173;
HXDLIN( 386)					if (hx::IsNotNull( _this18->listen_x )) {
HXLINE( 386)						_hx_tmp173 = !(_this18->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp173 = false;
            					}
HXDLIN( 386)					if (_hx_tmp173) {
HXLINE( 386)						_this18->listen_x(_this18->x);
            					}
HXDLIN( 386)					bool _hx_tmp174;
HXDLIN( 386)					if (hx::IsNotNull( _this18->listen_y )) {
HXLINE( 386)						_hx_tmp174 = !(_this18->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp174 = false;
            					}
HXDLIN( 386)					if (_hx_tmp174) {
HXLINE( 386)						_this18->listen_y(_this18->y);
            					}
HXDLIN( 386)					bool _hx_tmp175;
HXDLIN( 386)					if (hx::IsNotNull( _this18->listen_z )) {
HXLINE( 386)						_hx_tmp175 = !(_this18->ignore_listeners);
            					}
            					else {
HXLINE( 386)						_hx_tmp175 = false;
            					}
HXDLIN( 386)					if (_hx_tmp175) {
HXLINE( 386)						_this18->listen_z(_this18->z);
            					}
            				}
            			}
HXDLIN( 386)			bool _hx_tmp176;
HXDLIN( 386)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 386)				_hx_tmp176 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 386)				_hx_tmp176 = false;
            			}
HXDLIN( 386)			if (_hx_tmp176) {
HXLINE( 386)				this->listen_x(this->x);
            			}
HXDLIN( 386)			bool _hx_tmp177;
HXDLIN( 386)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 386)				_hx_tmp177 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 386)				_hx_tmp177 = false;
            			}
HXDLIN( 386)			if (_hx_tmp177) {
HXLINE( 386)				this->listen_y(this->y);
            			}
HXDLIN( 386)			bool _hx_tmp178;
HXDLIN( 386)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 386)				_hx_tmp178 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 386)				_hx_tmp178 = false;
            			}
HXDLIN( 386)			if (_hx_tmp178) {
HXLINE( 386)				this->listen_z(this->z);
            			}
HXDLIN( 386)			bool _hx_tmp179;
HXDLIN( 386)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 386)				_hx_tmp179 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 386)				_hx_tmp179 = false;
            			}
HXDLIN( 386)			if (_hx_tmp179) {
HXLINE( 386)				this->listen_w(this->w);
            			}
            		}
HXLINE( 391)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,slerp,return )

bool Quaternion_obj::equals( ::phoenix::Quaternion _q){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_398_equals)
HXDLIN( 398)		bool _hx_tmp;
HXDLIN( 398)		bool _hx_tmp1;
HXDLIN( 398)		if ((_q->x == this->x)) {
HXDLIN( 398)			_hx_tmp1 = (_q->y == this->y);
            		}
            		else {
HXDLIN( 398)			_hx_tmp1 = false;
            		}
HXDLIN( 398)		if (_hx_tmp1) {
HXDLIN( 398)			_hx_tmp = (_q->z == this->z);
            		}
            		else {
HXDLIN( 398)			_hx_tmp = false;
            		}
HXDLIN( 398)		if (_hx_tmp) {
HXDLIN( 398)			return (_q->w == this->w);
            		}
            		else {
HXDLIN( 398)			return false;
            		}
HXDLIN( 398)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,equals,return )

 ::phoenix::Quaternion Quaternion_obj::fromArray(::Array< Float > _a){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_403_fromArray)
HXLINE( 405)		{
HXLINE( 405)			this->ignore_euler = true;
HXDLIN( 405)			{
HXLINE( 405)				this->x = _a->__get((int)0);
HXDLIN( 405)				if (!(this->_construct)) {
HXLINE( 405)					bool _hx_tmp;
HXDLIN( 405)					bool _hx_tmp1;
HXDLIN( 405)					if (hx::IsNotNull( this->euler )) {
HXLINE( 405)						_hx_tmp1 = this->ignore_euler;
            					}
            					else {
HXLINE( 405)						_hx_tmp1 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp1)) {
HXLINE( 405)						_hx_tmp = this->_construct;
            					}
            					else {
HXLINE( 405)						_hx_tmp = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp)) {
HXLINE( 405)						 ::phoenix::Vector _this = this->euler;
HXDLIN( 405)						int order = (int)0;
HXDLIN( 405)						Float sqx = (this->x * this->x);
HXDLIN( 405)						Float sqy = (this->y * this->y);
HXDLIN( 405)						Float sqz = (this->z * this->z);
HXDLIN( 405)						Float sqw = (this->w * this->w);
HXDLIN( 405)						Float _x = _this->x;
HXDLIN( 405)						Float _y = _this->y;
HXDLIN( 405)						Float _z = _this->z;
HXDLIN( 405)						if ((order == (int)0)) {
HXLINE( 405)							Float _x1 = (this->x * this->w);
HXDLIN( 405)							Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 405)							_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 405)							Float value = (this->x * this->z);
HXDLIN( 405)							Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 405)							Float _y1;
HXDLIN( 405)							if ((value1 < (int)-1)) {
HXLINE( 405)								_y1 = (int)-1;
            							}
            							else {
HXLINE( 405)								if ((value1 > (int)1)) {
HXLINE( 405)									_y1 = (int)1;
            								}
            								else {
HXLINE( 405)									_y1 = value1;
            								}
            							}
HXDLIN( 405)							_y = ::Math_obj::asin(_y1);
HXDLIN( 405)							Float _z1 = (this->z * this->w);
HXDLIN( 405)							Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 405)							_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 405)							if ((order == (int)1)) {
HXLINE( 405)								Float value2 = (this->x * this->w);
HXDLIN( 405)								Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 405)								Float _x3;
HXDLIN( 405)								if ((value3 < (int)-1)) {
HXLINE( 405)									_x3 = (int)-1;
            								}
            								else {
HXLINE( 405)									if ((value3 > (int)1)) {
HXLINE( 405)										_x3 = (int)1;
            									}
            									else {
HXLINE( 405)										_x3 = value3;
            									}
            								}
HXDLIN( 405)								_x = ::Math_obj::asin(_x3);
HXDLIN( 405)								Float _y2 = (this->x * this->z);
HXDLIN( 405)								Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 405)								_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 405)								Float _z3 = (this->x * this->y);
HXDLIN( 405)								Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 405)								_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 405)								if ((order == (int)2)) {
HXLINE( 405)									Float value4 = (this->x * this->w);
HXDLIN( 405)									Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 405)									Float _x4;
HXDLIN( 405)									if ((value5 < (int)-1)) {
HXLINE( 405)										_x4 = (int)-1;
            									}
            									else {
HXLINE( 405)										if ((value5 > (int)1)) {
HXLINE( 405)											_x4 = (int)1;
            										}
            										else {
HXLINE( 405)											_x4 = value5;
            										}
            									}
HXDLIN( 405)									_x = ::Math_obj::asin(_x4);
HXDLIN( 405)									Float _y4 = (this->y * this->w);
HXDLIN( 405)									Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 405)									_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 405)									Float _z5 = (this->z * this->w);
HXDLIN( 405)									Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 405)									_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            								}
            								else {
HXLINE( 405)									if ((order == (int)3)) {
HXLINE( 405)										Float _x5 = (this->x * this->w);
HXDLIN( 405)										Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 405)										_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 405)										Float value6 = (this->y * this->w);
HXDLIN( 405)										Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 405)										Float _y6;
HXDLIN( 405)										if ((value7 < (int)-1)) {
HXLINE( 405)											_y6 = (int)-1;
            										}
            										else {
HXLINE( 405)											if ((value7 > (int)1)) {
HXLINE( 405)												_y6 = (int)1;
            											}
            											else {
HXLINE( 405)												_y6 = value7;
            											}
            										}
HXDLIN( 405)										_y = ::Math_obj::asin(_y6);
HXDLIN( 405)										Float _z7 = (this->x * this->y);
HXDLIN( 405)										Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 405)										_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            									}
            									else {
HXLINE( 405)										if ((order == (int)4)) {
HXLINE( 405)											Float _x7 = (this->x * this->w);
HXDLIN( 405)											Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 405)											_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 405)											Float _y7 = (this->y * this->w);
HXDLIN( 405)											Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 405)											_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 405)											Float value8 = (this->x * this->y);
HXDLIN( 405)											Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 405)											Float _z9;
HXDLIN( 405)											if ((value9 < (int)-1)) {
HXLINE( 405)												_z9 = (int)-1;
            											}
            											else {
HXLINE( 405)												if ((value9 > (int)1)) {
HXLINE( 405)													_z9 = (int)1;
            												}
            												else {
HXLINE( 405)													_z9 = value9;
            												}
            											}
HXDLIN( 405)											_z = ::Math_obj::asin(_z9);
            										}
            										else {
HXLINE( 405)											if ((order == (int)5)) {
HXLINE( 405)												Float _x9 = (this->x * this->w);
HXDLIN( 405)												Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 405)												_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 405)												Float _y9 = (this->x * this->z);
HXDLIN( 405)												Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 405)												_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 405)												Float value10 = (this->z * this->w);
HXDLIN( 405)												Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 405)												Float _z10;
HXDLIN( 405)												if ((value11 < (int)-1)) {
HXLINE( 405)													_z10 = (int)-1;
            												}
            												else {
HXLINE( 405)													if ((value11 > (int)1)) {
HXLINE( 405)														_z10 = (int)1;
            													}
            													else {
HXLINE( 405)														_z10 = value11;
            													}
            												}
HXDLIN( 405)												_z = ::Math_obj::asin(_z10);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 405)						{
HXLINE( 405)							bool prev = _this->ignore_listeners;
HXDLIN( 405)							_this->ignore_listeners = true;
HXDLIN( 405)							{
HXLINE( 405)								_this->x = _x;
HXDLIN( 405)								if (!(_this->_construct)) {
HXLINE( 405)									bool _hx_tmp2;
HXDLIN( 405)									if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 405)										_hx_tmp2 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp2 = false;
            									}
HXDLIN( 405)									if (_hx_tmp2) {
HXLINE( 405)										_this->listen_x(_x);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this->y = _y;
HXDLIN( 405)								if (!(_this->_construct)) {
HXLINE( 405)									bool _hx_tmp3;
HXDLIN( 405)									if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 405)										_hx_tmp3 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp3 = false;
            									}
HXDLIN( 405)									if (_hx_tmp3) {
HXLINE( 405)										_this->listen_y(_y);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this->z = _z;
HXDLIN( 405)								if (!(_this->_construct)) {
HXLINE( 405)									bool _hx_tmp4;
HXDLIN( 405)									if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 405)										_hx_tmp4 = !(_this->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp4 = false;
            									}
HXDLIN( 405)									if (_hx_tmp4) {
HXLINE( 405)										_this->listen_z(_z);
            									}
            								}
            							}
HXDLIN( 405)							_this->ignore_listeners = prev;
HXDLIN( 405)							bool _hx_tmp5;
HXDLIN( 405)							if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 405)								_hx_tmp5 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp5 = false;
            							}
HXDLIN( 405)							if (_hx_tmp5) {
HXLINE( 405)								_this->listen_x(_this->x);
            							}
HXDLIN( 405)							bool _hx_tmp6;
HXDLIN( 405)							if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 405)								_hx_tmp6 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp6 = false;
            							}
HXDLIN( 405)							if (_hx_tmp6) {
HXLINE( 405)								_this->listen_y(_this->y);
            							}
HXDLIN( 405)							bool _hx_tmp7;
HXDLIN( 405)							if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 405)								_hx_tmp7 = !(_this->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp7 = false;
            							}
HXDLIN( 405)							if (_hx_tmp7) {
HXLINE( 405)								_this->listen_z(_this->z);
            							}
            						}
            					}
HXDLIN( 405)					bool _hx_tmp8;
HXDLIN( 405)					if (hx::IsNotNull( this->listen_x )) {
HXLINE( 405)						_hx_tmp8 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp8 = false;
            					}
HXDLIN( 405)					if (_hx_tmp8) {
HXLINE( 405)						this->listen_x(this->x);
            					}
            				}
            			}
HXDLIN( 405)			{
HXLINE( 405)				this->y = _a->__get((int)1);
HXDLIN( 405)				if (!(this->_construct)) {
HXLINE( 405)					bool _hx_tmp9;
HXDLIN( 405)					bool _hx_tmp10;
HXDLIN( 405)					if (hx::IsNotNull( this->euler )) {
HXLINE( 405)						_hx_tmp10 = this->ignore_euler;
            					}
            					else {
HXLINE( 405)						_hx_tmp10 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp10)) {
HXLINE( 405)						_hx_tmp9 = this->_construct;
            					}
            					else {
HXLINE( 405)						_hx_tmp9 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp9)) {
HXLINE( 405)						 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 405)						int order1 = (int)0;
HXDLIN( 405)						Float sqx1 = (this->x * this->x);
HXDLIN( 405)						Float sqy1 = (this->y * this->y);
HXDLIN( 405)						Float sqz1 = (this->z * this->z);
HXDLIN( 405)						Float sqw1 = (this->w * this->w);
HXDLIN( 405)						Float _x11 = _this1->x;
HXDLIN( 405)						Float _y11 = _this1->y;
HXDLIN( 405)						Float _z11 = _this1->z;
HXDLIN( 405)						if ((order1 == (int)0)) {
HXLINE( 405)							Float _x12 = (this->x * this->w);
HXDLIN( 405)							Float _x13 = ((int)2 * (_x12 - (this->y * this->z)));
HXDLIN( 405)							_x11 = ::Math_obj::atan2(_x13,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 405)							Float value12 = (this->x * this->z);
HXDLIN( 405)							Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 405)							Float _y12;
HXDLIN( 405)							if ((value13 < (int)-1)) {
HXLINE( 405)								_y12 = (int)-1;
            							}
            							else {
HXLINE( 405)								if ((value13 > (int)1)) {
HXLINE( 405)									_y12 = (int)1;
            								}
            								else {
HXLINE( 405)									_y12 = value13;
            								}
            							}
HXDLIN( 405)							_y11 = ::Math_obj::asin(_y12);
HXDLIN( 405)							Float _z12 = (this->z * this->w);
HXDLIN( 405)							Float _z13 = ((int)2 * (_z12 - (this->x * this->y)));
HXDLIN( 405)							_z11 = ::Math_obj::atan2(_z13,(((sqw1 + sqx1) - sqy1) - sqz1));
            						}
            						else {
HXLINE( 405)							if ((order1 == (int)1)) {
HXLINE( 405)								Float value14 = (this->x * this->w);
HXDLIN( 405)								Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 405)								Float _x14;
HXDLIN( 405)								if ((value15 < (int)-1)) {
HXLINE( 405)									_x14 = (int)-1;
            								}
            								else {
HXLINE( 405)									if ((value15 > (int)1)) {
HXLINE( 405)										_x14 = (int)1;
            									}
            									else {
HXLINE( 405)										_x14 = value15;
            									}
            								}
HXDLIN( 405)								_x11 = ::Math_obj::asin(_x14);
HXDLIN( 405)								Float _y13 = (this->x * this->z);
HXDLIN( 405)								Float _y14 = ((int)2 * (_y13 + (this->y * this->w)));
HXDLIN( 405)								_y11 = ::Math_obj::atan2(_y14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 405)								Float _z14 = (this->x * this->y);
HXDLIN( 405)								Float _z15 = ((int)2 * (_z14 + (this->z * this->w)));
HXDLIN( 405)								_z11 = ::Math_obj::atan2(_z15,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 405)								if ((order1 == (int)2)) {
HXLINE( 405)									Float value16 = (this->x * this->w);
HXDLIN( 405)									Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 405)									Float _x15;
HXDLIN( 405)									if ((value17 < (int)-1)) {
HXLINE( 405)										_x15 = (int)-1;
            									}
            									else {
HXLINE( 405)										if ((value17 > (int)1)) {
HXLINE( 405)											_x15 = (int)1;
            										}
            										else {
HXLINE( 405)											_x15 = value17;
            										}
            									}
HXDLIN( 405)									_x11 = ::Math_obj::asin(_x15);
HXDLIN( 405)									Float _y15 = (this->y * this->w);
HXDLIN( 405)									Float _y16 = ((int)2 * (_y15 - (this->z * this->x)));
HXDLIN( 405)									_y11 = ::Math_obj::atan2(_y16,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 405)									Float _z16 = (this->z * this->w);
HXDLIN( 405)									Float _z17 = ((int)2 * (_z16 - (this->x * this->y)));
HXDLIN( 405)									_z11 = ::Math_obj::atan2(_z17,(((sqw1 - sqx1) + sqy1) - sqz1));
            								}
            								else {
HXLINE( 405)									if ((order1 == (int)3)) {
HXLINE( 405)										Float _x16 = (this->x * this->w);
HXDLIN( 405)										Float _x17 = ((int)2 * (_x16 + (this->z * this->y)));
HXDLIN( 405)										_x11 = ::Math_obj::atan2(_x17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 405)										Float value18 = (this->y * this->w);
HXDLIN( 405)										Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 405)										Float _y17;
HXDLIN( 405)										if ((value19 < (int)-1)) {
HXLINE( 405)											_y17 = (int)-1;
            										}
            										else {
HXLINE( 405)											if ((value19 > (int)1)) {
HXLINE( 405)												_y17 = (int)1;
            											}
            											else {
HXLINE( 405)												_y17 = value19;
            											}
            										}
HXDLIN( 405)										_y11 = ::Math_obj::asin(_y17);
HXDLIN( 405)										Float _z18 = (this->x * this->y);
HXDLIN( 405)										Float _z19 = ((int)2 * (_z18 + (this->z * this->w)));
HXDLIN( 405)										_z11 = ::Math_obj::atan2(_z19,(((sqw1 + sqx1) - sqy1) - sqz1));
            									}
            									else {
HXLINE( 405)										if ((order1 == (int)4)) {
HXLINE( 405)											Float _x18 = (this->x * this->w);
HXDLIN( 405)											Float _x19 = ((int)2 * (_x18 - (this->z * this->y)));
HXDLIN( 405)											_x11 = ::Math_obj::atan2(_x19,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 405)											Float _y18 = (this->y * this->w);
HXDLIN( 405)											Float _y19 = ((int)2 * (_y18 - (this->x * this->z)));
HXDLIN( 405)											_y11 = ::Math_obj::atan2(_y19,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 405)											Float value20 = (this->x * this->y);
HXDLIN( 405)											Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 405)											Float _z20;
HXDLIN( 405)											if ((value21 < (int)-1)) {
HXLINE( 405)												_z20 = (int)-1;
            											}
            											else {
HXLINE( 405)												if ((value21 > (int)1)) {
HXLINE( 405)													_z20 = (int)1;
            												}
            												else {
HXLINE( 405)													_z20 = value21;
            												}
            											}
HXDLIN( 405)											_z11 = ::Math_obj::asin(_z20);
            										}
            										else {
HXLINE( 405)											if ((order1 == (int)5)) {
HXLINE( 405)												Float _x20 = (this->x * this->w);
HXDLIN( 405)												Float _x21 = ((int)2 * (_x20 + (this->y * this->z)));
HXDLIN( 405)												_x11 = ::Math_obj::atan2(_x21,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 405)												Float _y20 = (this->x * this->z);
HXDLIN( 405)												Float _y21 = ((int)2 * (_y20 + (this->y * this->w)));
HXDLIN( 405)												_y11 = ::Math_obj::atan2(_y21,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 405)												Float value22 = (this->z * this->w);
HXDLIN( 405)												Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 405)												Float _z21;
HXDLIN( 405)												if ((value23 < (int)-1)) {
HXLINE( 405)													_z21 = (int)-1;
            												}
            												else {
HXLINE( 405)													if ((value23 > (int)1)) {
HXLINE( 405)														_z21 = (int)1;
            													}
            													else {
HXLINE( 405)														_z21 = value23;
            													}
            												}
HXDLIN( 405)												_z11 = ::Math_obj::asin(_z21);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 405)						{
HXLINE( 405)							bool prev1 = _this1->ignore_listeners;
HXDLIN( 405)							_this1->ignore_listeners = true;
HXDLIN( 405)							{
HXLINE( 405)								_this1->x = _x11;
HXDLIN( 405)								if (!(_this1->_construct)) {
HXLINE( 405)									bool _hx_tmp11;
HXDLIN( 405)									if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 405)										_hx_tmp11 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp11 = false;
            									}
HXDLIN( 405)									if (_hx_tmp11) {
HXLINE( 405)										_this1->listen_x(_x11);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this1->y = _y11;
HXDLIN( 405)								if (!(_this1->_construct)) {
HXLINE( 405)									bool _hx_tmp12;
HXDLIN( 405)									if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 405)										_hx_tmp12 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp12 = false;
            									}
HXDLIN( 405)									if (_hx_tmp12) {
HXLINE( 405)										_this1->listen_y(_y11);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this1->z = _z11;
HXDLIN( 405)								if (!(_this1->_construct)) {
HXLINE( 405)									bool _hx_tmp13;
HXDLIN( 405)									if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 405)										_hx_tmp13 = !(_this1->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp13 = false;
            									}
HXDLIN( 405)									if (_hx_tmp13) {
HXLINE( 405)										_this1->listen_z(_z11);
            									}
            								}
            							}
HXDLIN( 405)							_this1->ignore_listeners = prev1;
HXDLIN( 405)							bool _hx_tmp14;
HXDLIN( 405)							if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 405)								_hx_tmp14 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp14 = false;
            							}
HXDLIN( 405)							if (_hx_tmp14) {
HXLINE( 405)								_this1->listen_x(_this1->x);
            							}
HXDLIN( 405)							bool _hx_tmp15;
HXDLIN( 405)							if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 405)								_hx_tmp15 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp15 = false;
            							}
HXDLIN( 405)							if (_hx_tmp15) {
HXLINE( 405)								_this1->listen_y(_this1->y);
            							}
HXDLIN( 405)							bool _hx_tmp16;
HXDLIN( 405)							if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 405)								_hx_tmp16 = !(_this1->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp16 = false;
            							}
HXDLIN( 405)							if (_hx_tmp16) {
HXLINE( 405)								_this1->listen_z(_this1->z);
            							}
            						}
            					}
HXDLIN( 405)					bool _hx_tmp17;
HXDLIN( 405)					if (hx::IsNotNull( this->listen_y )) {
HXLINE( 405)						_hx_tmp17 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp17 = false;
            					}
HXDLIN( 405)					if (_hx_tmp17) {
HXLINE( 405)						this->listen_y(this->y);
            					}
            				}
            			}
HXDLIN( 405)			{
HXLINE( 405)				this->z = _a->__get((int)2);
HXDLIN( 405)				if (!(this->_construct)) {
HXLINE( 405)					bool _hx_tmp18;
HXDLIN( 405)					bool _hx_tmp19;
HXDLIN( 405)					if (hx::IsNotNull( this->euler )) {
HXLINE( 405)						_hx_tmp19 = this->ignore_euler;
            					}
            					else {
HXLINE( 405)						_hx_tmp19 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp19)) {
HXLINE( 405)						_hx_tmp18 = this->_construct;
            					}
            					else {
HXLINE( 405)						_hx_tmp18 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp18)) {
HXLINE( 405)						 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 405)						int order2 = (int)0;
HXDLIN( 405)						Float sqx2 = (this->x * this->x);
HXDLIN( 405)						Float sqy2 = (this->y * this->y);
HXDLIN( 405)						Float sqz2 = (this->z * this->z);
HXDLIN( 405)						Float sqw2 = (this->w * this->w);
HXDLIN( 405)						Float _x22 = _this2->x;
HXDLIN( 405)						Float _y22 = _this2->y;
HXDLIN( 405)						Float _z22 = _this2->z;
HXDLIN( 405)						if ((order2 == (int)0)) {
HXLINE( 405)							Float _x23 = (this->x * this->w);
HXDLIN( 405)							Float _x24 = ((int)2 * (_x23 - (this->y * this->z)));
HXDLIN( 405)							_x22 = ::Math_obj::atan2(_x24,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 405)							Float value24 = (this->x * this->z);
HXDLIN( 405)							Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 405)							Float _y23;
HXDLIN( 405)							if ((value25 < (int)-1)) {
HXLINE( 405)								_y23 = (int)-1;
            							}
            							else {
HXLINE( 405)								if ((value25 > (int)1)) {
HXLINE( 405)									_y23 = (int)1;
            								}
            								else {
HXLINE( 405)									_y23 = value25;
            								}
            							}
HXDLIN( 405)							_y22 = ::Math_obj::asin(_y23);
HXDLIN( 405)							Float _z23 = (this->z * this->w);
HXDLIN( 405)							Float _z24 = ((int)2 * (_z23 - (this->x * this->y)));
HXDLIN( 405)							_z22 = ::Math_obj::atan2(_z24,(((sqw2 + sqx2) - sqy2) - sqz2));
            						}
            						else {
HXLINE( 405)							if ((order2 == (int)1)) {
HXLINE( 405)								Float value26 = (this->x * this->w);
HXDLIN( 405)								Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 405)								Float _x25;
HXDLIN( 405)								if ((value27 < (int)-1)) {
HXLINE( 405)									_x25 = (int)-1;
            								}
            								else {
HXLINE( 405)									if ((value27 > (int)1)) {
HXLINE( 405)										_x25 = (int)1;
            									}
            									else {
HXLINE( 405)										_x25 = value27;
            									}
            								}
HXDLIN( 405)								_x22 = ::Math_obj::asin(_x25);
HXDLIN( 405)								Float _y24 = (this->x * this->z);
HXDLIN( 405)								Float _y25 = ((int)2 * (_y24 + (this->y * this->w)));
HXDLIN( 405)								_y22 = ::Math_obj::atan2(_y25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 405)								Float _z25 = (this->x * this->y);
HXDLIN( 405)								Float _z26 = ((int)2 * (_z25 + (this->z * this->w)));
HXDLIN( 405)								_z22 = ::Math_obj::atan2(_z26,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 405)								if ((order2 == (int)2)) {
HXLINE( 405)									Float value28 = (this->x * this->w);
HXDLIN( 405)									Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 405)									Float _x26;
HXDLIN( 405)									if ((value29 < (int)-1)) {
HXLINE( 405)										_x26 = (int)-1;
            									}
            									else {
HXLINE( 405)										if ((value29 > (int)1)) {
HXLINE( 405)											_x26 = (int)1;
            										}
            										else {
HXLINE( 405)											_x26 = value29;
            										}
            									}
HXDLIN( 405)									_x22 = ::Math_obj::asin(_x26);
HXDLIN( 405)									Float _y26 = (this->y * this->w);
HXDLIN( 405)									Float _y27 = ((int)2 * (_y26 - (this->z * this->x)));
HXDLIN( 405)									_y22 = ::Math_obj::atan2(_y27,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 405)									Float _z27 = (this->z * this->w);
HXDLIN( 405)									Float _z28 = ((int)2 * (_z27 - (this->x * this->y)));
HXDLIN( 405)									_z22 = ::Math_obj::atan2(_z28,(((sqw2 - sqx2) + sqy2) - sqz2));
            								}
            								else {
HXLINE( 405)									if ((order2 == (int)3)) {
HXLINE( 405)										Float _x27 = (this->x * this->w);
HXDLIN( 405)										Float _x28 = ((int)2 * (_x27 + (this->z * this->y)));
HXDLIN( 405)										_x22 = ::Math_obj::atan2(_x28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 405)										Float value30 = (this->y * this->w);
HXDLIN( 405)										Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 405)										Float _y28;
HXDLIN( 405)										if ((value31 < (int)-1)) {
HXLINE( 405)											_y28 = (int)-1;
            										}
            										else {
HXLINE( 405)											if ((value31 > (int)1)) {
HXLINE( 405)												_y28 = (int)1;
            											}
            											else {
HXLINE( 405)												_y28 = value31;
            											}
            										}
HXDLIN( 405)										_y22 = ::Math_obj::asin(_y28);
HXDLIN( 405)										Float _z29 = (this->x * this->y);
HXDLIN( 405)										Float _z30 = ((int)2 * (_z29 + (this->z * this->w)));
HXDLIN( 405)										_z22 = ::Math_obj::atan2(_z30,(((sqw2 + sqx2) - sqy2) - sqz2));
            									}
            									else {
HXLINE( 405)										if ((order2 == (int)4)) {
HXLINE( 405)											Float _x29 = (this->x * this->w);
HXDLIN( 405)											Float _x30 = ((int)2 * (_x29 - (this->z * this->y)));
HXDLIN( 405)											_x22 = ::Math_obj::atan2(_x30,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 405)											Float _y29 = (this->y * this->w);
HXDLIN( 405)											Float _y30 = ((int)2 * (_y29 - (this->x * this->z)));
HXDLIN( 405)											_y22 = ::Math_obj::atan2(_y30,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 405)											Float value32 = (this->x * this->y);
HXDLIN( 405)											Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 405)											Float _z31;
HXDLIN( 405)											if ((value33 < (int)-1)) {
HXLINE( 405)												_z31 = (int)-1;
            											}
            											else {
HXLINE( 405)												if ((value33 > (int)1)) {
HXLINE( 405)													_z31 = (int)1;
            												}
            												else {
HXLINE( 405)													_z31 = value33;
            												}
            											}
HXDLIN( 405)											_z22 = ::Math_obj::asin(_z31);
            										}
            										else {
HXLINE( 405)											if ((order2 == (int)5)) {
HXLINE( 405)												Float _x31 = (this->x * this->w);
HXDLIN( 405)												Float _x32 = ((int)2 * (_x31 + (this->y * this->z)));
HXDLIN( 405)												_x22 = ::Math_obj::atan2(_x32,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 405)												Float _y31 = (this->x * this->z);
HXDLIN( 405)												Float _y32 = ((int)2 * (_y31 + (this->y * this->w)));
HXDLIN( 405)												_y22 = ::Math_obj::atan2(_y32,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 405)												Float value34 = (this->z * this->w);
HXDLIN( 405)												Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 405)												Float _z32;
HXDLIN( 405)												if ((value35 < (int)-1)) {
HXLINE( 405)													_z32 = (int)-1;
            												}
            												else {
HXLINE( 405)													if ((value35 > (int)1)) {
HXLINE( 405)														_z32 = (int)1;
            													}
            													else {
HXLINE( 405)														_z32 = value35;
            													}
            												}
HXDLIN( 405)												_z22 = ::Math_obj::asin(_z32);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 405)						{
HXLINE( 405)							bool prev2 = _this2->ignore_listeners;
HXDLIN( 405)							_this2->ignore_listeners = true;
HXDLIN( 405)							{
HXLINE( 405)								_this2->x = _x22;
HXDLIN( 405)								if (!(_this2->_construct)) {
HXLINE( 405)									bool _hx_tmp20;
HXDLIN( 405)									if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 405)										_hx_tmp20 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp20 = false;
            									}
HXDLIN( 405)									if (_hx_tmp20) {
HXLINE( 405)										_this2->listen_x(_x22);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this2->y = _y22;
HXDLIN( 405)								if (!(_this2->_construct)) {
HXLINE( 405)									bool _hx_tmp21;
HXDLIN( 405)									if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 405)										_hx_tmp21 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp21 = false;
            									}
HXDLIN( 405)									if (_hx_tmp21) {
HXLINE( 405)										_this2->listen_y(_y22);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this2->z = _z22;
HXDLIN( 405)								if (!(_this2->_construct)) {
HXLINE( 405)									bool _hx_tmp22;
HXDLIN( 405)									if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 405)										_hx_tmp22 = !(_this2->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp22 = false;
            									}
HXDLIN( 405)									if (_hx_tmp22) {
HXLINE( 405)										_this2->listen_z(_z22);
            									}
            								}
            							}
HXDLIN( 405)							_this2->ignore_listeners = prev2;
HXDLIN( 405)							bool _hx_tmp23;
HXDLIN( 405)							if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 405)								_hx_tmp23 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp23 = false;
            							}
HXDLIN( 405)							if (_hx_tmp23) {
HXLINE( 405)								_this2->listen_x(_this2->x);
            							}
HXDLIN( 405)							bool _hx_tmp24;
HXDLIN( 405)							if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 405)								_hx_tmp24 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp24 = false;
            							}
HXDLIN( 405)							if (_hx_tmp24) {
HXLINE( 405)								_this2->listen_y(_this2->y);
            							}
HXDLIN( 405)							bool _hx_tmp25;
HXDLIN( 405)							if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 405)								_hx_tmp25 = !(_this2->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp25 = false;
            							}
HXDLIN( 405)							if (_hx_tmp25) {
HXLINE( 405)								_this2->listen_z(_this2->z);
            							}
            						}
            					}
HXDLIN( 405)					bool _hx_tmp26;
HXDLIN( 405)					if (hx::IsNotNull( this->listen_z )) {
HXLINE( 405)						_hx_tmp26 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp26 = false;
            					}
HXDLIN( 405)					if (_hx_tmp26) {
HXLINE( 405)						this->listen_z(this->z);
            					}
            				}
            			}
HXDLIN( 405)			{
HXLINE( 405)				this->w = _a->__get((int)3);
HXDLIN( 405)				if (!(this->_construct)) {
HXLINE( 405)					bool _hx_tmp27;
HXDLIN( 405)					bool _hx_tmp28;
HXDLIN( 405)					if (hx::IsNotNull( this->euler )) {
HXLINE( 405)						_hx_tmp28 = this->ignore_euler;
            					}
            					else {
HXLINE( 405)						_hx_tmp28 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp28)) {
HXLINE( 405)						_hx_tmp27 = this->_construct;
            					}
            					else {
HXLINE( 405)						_hx_tmp27 = true;
            					}
HXDLIN( 405)					if (!(_hx_tmp27)) {
HXLINE( 405)						 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 405)						int order3 = (int)0;
HXDLIN( 405)						Float sqx3 = (this->x * this->x);
HXDLIN( 405)						Float sqy3 = (this->y * this->y);
HXDLIN( 405)						Float sqz3 = (this->z * this->z);
HXDLIN( 405)						Float sqw3 = (this->w * this->w);
HXDLIN( 405)						Float _x33 = _this3->x;
HXDLIN( 405)						Float _y33 = _this3->y;
HXDLIN( 405)						Float _z33 = _this3->z;
HXDLIN( 405)						if ((order3 == (int)0)) {
HXLINE( 405)							Float _x34 = (this->x * this->w);
HXDLIN( 405)							Float _x35 = ((int)2 * (_x34 - (this->y * this->z)));
HXDLIN( 405)							_x33 = ::Math_obj::atan2(_x35,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 405)							Float value36 = (this->x * this->z);
HXDLIN( 405)							Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 405)							Float _y34;
HXDLIN( 405)							if ((value37 < (int)-1)) {
HXLINE( 405)								_y34 = (int)-1;
            							}
            							else {
HXLINE( 405)								if ((value37 > (int)1)) {
HXLINE( 405)									_y34 = (int)1;
            								}
            								else {
HXLINE( 405)									_y34 = value37;
            								}
            							}
HXDLIN( 405)							_y33 = ::Math_obj::asin(_y34);
HXDLIN( 405)							Float _z34 = (this->z * this->w);
HXDLIN( 405)							Float _z35 = ((int)2 * (_z34 - (this->x * this->y)));
HXDLIN( 405)							_z33 = ::Math_obj::atan2(_z35,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 405)							if ((order3 == (int)1)) {
HXLINE( 405)								Float value38 = (this->x * this->w);
HXDLIN( 405)								Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 405)								Float _x36;
HXDLIN( 405)								if ((value39 < (int)-1)) {
HXLINE( 405)									_x36 = (int)-1;
            								}
            								else {
HXLINE( 405)									if ((value39 > (int)1)) {
HXLINE( 405)										_x36 = (int)1;
            									}
            									else {
HXLINE( 405)										_x36 = value39;
            									}
            								}
HXDLIN( 405)								_x33 = ::Math_obj::asin(_x36);
HXDLIN( 405)								Float _y35 = (this->x * this->z);
HXDLIN( 405)								Float _y36 = ((int)2 * (_y35 + (this->y * this->w)));
HXDLIN( 405)								_y33 = ::Math_obj::atan2(_y36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 405)								Float _z36 = (this->x * this->y);
HXDLIN( 405)								Float _z37 = ((int)2 * (_z36 + (this->z * this->w)));
HXDLIN( 405)								_z33 = ::Math_obj::atan2(_z37,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 405)								if ((order3 == (int)2)) {
HXLINE( 405)									Float value40 = (this->x * this->w);
HXDLIN( 405)									Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 405)									Float _x37;
HXDLIN( 405)									if ((value41 < (int)-1)) {
HXLINE( 405)										_x37 = (int)-1;
            									}
            									else {
HXLINE( 405)										if ((value41 > (int)1)) {
HXLINE( 405)											_x37 = (int)1;
            										}
            										else {
HXLINE( 405)											_x37 = value41;
            										}
            									}
HXDLIN( 405)									_x33 = ::Math_obj::asin(_x37);
HXDLIN( 405)									Float _y37 = (this->y * this->w);
HXDLIN( 405)									Float _y38 = ((int)2 * (_y37 - (this->z * this->x)));
HXDLIN( 405)									_y33 = ::Math_obj::atan2(_y38,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 405)									Float _z38 = (this->z * this->w);
HXDLIN( 405)									Float _z39 = ((int)2 * (_z38 - (this->x * this->y)));
HXDLIN( 405)									_z33 = ::Math_obj::atan2(_z39,(((sqw3 - sqx3) + sqy3) - sqz3));
            								}
            								else {
HXLINE( 405)									if ((order3 == (int)3)) {
HXLINE( 405)										Float _x38 = (this->x * this->w);
HXDLIN( 405)										Float _x39 = ((int)2 * (_x38 + (this->z * this->y)));
HXDLIN( 405)										_x33 = ::Math_obj::atan2(_x39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 405)										Float value42 = (this->y * this->w);
HXDLIN( 405)										Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 405)										Float _y39;
HXDLIN( 405)										if ((value43 < (int)-1)) {
HXLINE( 405)											_y39 = (int)-1;
            										}
            										else {
HXLINE( 405)											if ((value43 > (int)1)) {
HXLINE( 405)												_y39 = (int)1;
            											}
            											else {
HXLINE( 405)												_y39 = value43;
            											}
            										}
HXDLIN( 405)										_y33 = ::Math_obj::asin(_y39);
HXDLIN( 405)										Float _z40 = (this->x * this->y);
HXDLIN( 405)										Float _z41 = ((int)2 * (_z40 + (this->z * this->w)));
HXDLIN( 405)										_z33 = ::Math_obj::atan2(_z41,(((sqw3 + sqx3) - sqy3) - sqz3));
            									}
            									else {
HXLINE( 405)										if ((order3 == (int)4)) {
HXLINE( 405)											Float _x40 = (this->x * this->w);
HXDLIN( 405)											Float _x41 = ((int)2 * (_x40 - (this->z * this->y)));
HXDLIN( 405)											_x33 = ::Math_obj::atan2(_x41,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 405)											Float _y40 = (this->y * this->w);
HXDLIN( 405)											Float _y41 = ((int)2 * (_y40 - (this->x * this->z)));
HXDLIN( 405)											_y33 = ::Math_obj::atan2(_y41,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 405)											Float value44 = (this->x * this->y);
HXDLIN( 405)											Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 405)											Float _z42;
HXDLIN( 405)											if ((value45 < (int)-1)) {
HXLINE( 405)												_z42 = (int)-1;
            											}
            											else {
HXLINE( 405)												if ((value45 > (int)1)) {
HXLINE( 405)													_z42 = (int)1;
            												}
            												else {
HXLINE( 405)													_z42 = value45;
            												}
            											}
HXDLIN( 405)											_z33 = ::Math_obj::asin(_z42);
            										}
            										else {
HXLINE( 405)											if ((order3 == (int)5)) {
HXLINE( 405)												Float _x42 = (this->x * this->w);
HXDLIN( 405)												Float _x43 = ((int)2 * (_x42 + (this->y * this->z)));
HXDLIN( 405)												_x33 = ::Math_obj::atan2(_x43,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 405)												Float _y42 = (this->x * this->z);
HXDLIN( 405)												Float _y43 = ((int)2 * (_y42 + (this->y * this->w)));
HXDLIN( 405)												_y33 = ::Math_obj::atan2(_y43,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 405)												Float value46 = (this->z * this->w);
HXDLIN( 405)												Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 405)												Float _z43;
HXDLIN( 405)												if ((value47 < (int)-1)) {
HXLINE( 405)													_z43 = (int)-1;
            												}
            												else {
HXLINE( 405)													if ((value47 > (int)1)) {
HXLINE( 405)														_z43 = (int)1;
            													}
            													else {
HXLINE( 405)														_z43 = value47;
            													}
            												}
HXDLIN( 405)												_z33 = ::Math_obj::asin(_z43);
            											}
            										}
            									}
            								}
            							}
            						}
HXDLIN( 405)						{
HXLINE( 405)							bool prev3 = _this3->ignore_listeners;
HXDLIN( 405)							_this3->ignore_listeners = true;
HXDLIN( 405)							{
HXLINE( 405)								_this3->x = _x33;
HXDLIN( 405)								if (!(_this3->_construct)) {
HXLINE( 405)									bool _hx_tmp29;
HXDLIN( 405)									if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 405)										_hx_tmp29 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp29 = false;
            									}
HXDLIN( 405)									if (_hx_tmp29) {
HXLINE( 405)										_this3->listen_x(_x33);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this3->y = _y33;
HXDLIN( 405)								if (!(_this3->_construct)) {
HXLINE( 405)									bool _hx_tmp30;
HXDLIN( 405)									if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 405)										_hx_tmp30 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp30 = false;
            									}
HXDLIN( 405)									if (_hx_tmp30) {
HXLINE( 405)										_this3->listen_y(_y33);
            									}
            								}
            							}
HXDLIN( 405)							{
HXLINE( 405)								_this3->z = _z33;
HXDLIN( 405)								if (!(_this3->_construct)) {
HXLINE( 405)									bool _hx_tmp31;
HXDLIN( 405)									if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 405)										_hx_tmp31 = !(_this3->ignore_listeners);
            									}
            									else {
HXLINE( 405)										_hx_tmp31 = false;
            									}
HXDLIN( 405)									if (_hx_tmp31) {
HXLINE( 405)										_this3->listen_z(_z33);
            									}
            								}
            							}
HXDLIN( 405)							_this3->ignore_listeners = prev3;
HXDLIN( 405)							bool _hx_tmp32;
HXDLIN( 405)							if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 405)								_hx_tmp32 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp32 = false;
            							}
HXDLIN( 405)							if (_hx_tmp32) {
HXLINE( 405)								_this3->listen_x(_this3->x);
            							}
HXDLIN( 405)							bool _hx_tmp33;
HXDLIN( 405)							if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 405)								_hx_tmp33 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp33 = false;
            							}
HXDLIN( 405)							if (_hx_tmp33) {
HXLINE( 405)								_this3->listen_y(_this3->y);
            							}
HXDLIN( 405)							bool _hx_tmp34;
HXDLIN( 405)							if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 405)								_hx_tmp34 = !(_this3->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp34 = false;
            							}
HXDLIN( 405)							if (_hx_tmp34) {
HXLINE( 405)								_this3->listen_z(_this3->z);
            							}
            						}
            					}
HXDLIN( 405)					bool _hx_tmp35;
HXDLIN( 405)					if (hx::IsNotNull( this->listen_w )) {
HXLINE( 405)						_hx_tmp35 = !(this->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp35 = false;
            					}
HXDLIN( 405)					if (_hx_tmp35) {
HXLINE( 405)						this->listen_w(this->w);
            					}
            				}
            			}
HXDLIN( 405)			this->ignore_euler = false;
HXDLIN( 405)			bool _hx_tmp36;
HXDLIN( 405)			bool _hx_tmp37;
HXDLIN( 405)			if (hx::IsNotNull( this->euler )) {
HXLINE( 405)				_hx_tmp37 = this->ignore_euler;
            			}
            			else {
HXLINE( 405)				_hx_tmp37 = true;
            			}
HXDLIN( 405)			if (!(_hx_tmp37)) {
HXLINE( 405)				_hx_tmp36 = this->_construct;
            			}
            			else {
HXLINE( 405)				_hx_tmp36 = true;
            			}
HXDLIN( 405)			if (!(_hx_tmp36)) {
HXLINE( 405)				 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 405)				int order4 = (int)0;
HXDLIN( 405)				Float sqx4 = (this->x * this->x);
HXDLIN( 405)				Float sqy4 = (this->y * this->y);
HXDLIN( 405)				Float sqz4 = (this->z * this->z);
HXDLIN( 405)				Float sqw4 = (this->w * this->w);
HXDLIN( 405)				Float _x44 = _this4->x;
HXDLIN( 405)				Float _y44 = _this4->y;
HXDLIN( 405)				Float _z44 = _this4->z;
HXDLIN( 405)				if ((order4 == (int)0)) {
HXLINE( 405)					Float _x45 = (this->x * this->w);
HXDLIN( 405)					Float _x46 = ((int)2 * (_x45 - (this->y * this->z)));
HXDLIN( 405)					_x44 = ::Math_obj::atan2(_x46,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 405)					Float value48 = (this->x * this->z);
HXDLIN( 405)					Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 405)					Float _y45;
HXDLIN( 405)					if ((value49 < (int)-1)) {
HXLINE( 405)						_y45 = (int)-1;
            					}
            					else {
HXLINE( 405)						if ((value49 > (int)1)) {
HXLINE( 405)							_y45 = (int)1;
            						}
            						else {
HXLINE( 405)							_y45 = value49;
            						}
            					}
HXDLIN( 405)					_y44 = ::Math_obj::asin(_y45);
HXDLIN( 405)					Float _z45 = (this->z * this->w);
HXDLIN( 405)					Float _z46 = ((int)2 * (_z45 - (this->x * this->y)));
HXDLIN( 405)					_z44 = ::Math_obj::atan2(_z46,(((sqw4 + sqx4) - sqy4) - sqz4));
            				}
            				else {
HXLINE( 405)					if ((order4 == (int)1)) {
HXLINE( 405)						Float value50 = (this->x * this->w);
HXDLIN( 405)						Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 405)						Float _x47;
HXDLIN( 405)						if ((value51 < (int)-1)) {
HXLINE( 405)							_x47 = (int)-1;
            						}
            						else {
HXLINE( 405)							if ((value51 > (int)1)) {
HXLINE( 405)								_x47 = (int)1;
            							}
            							else {
HXLINE( 405)								_x47 = value51;
            							}
            						}
HXDLIN( 405)						_x44 = ::Math_obj::asin(_x47);
HXDLIN( 405)						Float _y46 = (this->x * this->z);
HXDLIN( 405)						Float _y47 = ((int)2 * (_y46 + (this->y * this->w)));
HXDLIN( 405)						_y44 = ::Math_obj::atan2(_y47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 405)						Float _z47 = (this->x * this->y);
HXDLIN( 405)						Float _z48 = ((int)2 * (_z47 + (this->z * this->w)));
HXDLIN( 405)						_z44 = ::Math_obj::atan2(_z48,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 405)						if ((order4 == (int)2)) {
HXLINE( 405)							Float value52 = (this->x * this->w);
HXDLIN( 405)							Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 405)							Float _x48;
HXDLIN( 405)							if ((value53 < (int)-1)) {
HXLINE( 405)								_x48 = (int)-1;
            							}
            							else {
HXLINE( 405)								if ((value53 > (int)1)) {
HXLINE( 405)									_x48 = (int)1;
            								}
            								else {
HXLINE( 405)									_x48 = value53;
            								}
            							}
HXDLIN( 405)							_x44 = ::Math_obj::asin(_x48);
HXDLIN( 405)							Float _y48 = (this->y * this->w);
HXDLIN( 405)							Float _y49 = ((int)2 * (_y48 - (this->z * this->x)));
HXDLIN( 405)							_y44 = ::Math_obj::atan2(_y49,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 405)							Float _z49 = (this->z * this->w);
HXDLIN( 405)							Float _z50 = ((int)2 * (_z49 - (this->x * this->y)));
HXDLIN( 405)							_z44 = ::Math_obj::atan2(_z50,(((sqw4 - sqx4) + sqy4) - sqz4));
            						}
            						else {
HXLINE( 405)							if ((order4 == (int)3)) {
HXLINE( 405)								Float _x49 = (this->x * this->w);
HXDLIN( 405)								Float _x50 = ((int)2 * (_x49 + (this->z * this->y)));
HXDLIN( 405)								_x44 = ::Math_obj::atan2(_x50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 405)								Float value54 = (this->y * this->w);
HXDLIN( 405)								Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 405)								Float _y50;
HXDLIN( 405)								if ((value55 < (int)-1)) {
HXLINE( 405)									_y50 = (int)-1;
            								}
            								else {
HXLINE( 405)									if ((value55 > (int)1)) {
HXLINE( 405)										_y50 = (int)1;
            									}
            									else {
HXLINE( 405)										_y50 = value55;
            									}
            								}
HXDLIN( 405)								_y44 = ::Math_obj::asin(_y50);
HXDLIN( 405)								Float _z51 = (this->x * this->y);
HXDLIN( 405)								Float _z52 = ((int)2 * (_z51 + (this->z * this->w)));
HXDLIN( 405)								_z44 = ::Math_obj::atan2(_z52,(((sqw4 + sqx4) - sqy4) - sqz4));
            							}
            							else {
HXLINE( 405)								if ((order4 == (int)4)) {
HXLINE( 405)									Float _x51 = (this->x * this->w);
HXDLIN( 405)									Float _x52 = ((int)2 * (_x51 - (this->z * this->y)));
HXDLIN( 405)									_x44 = ::Math_obj::atan2(_x52,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 405)									Float _y51 = (this->y * this->w);
HXDLIN( 405)									Float _y52 = ((int)2 * (_y51 - (this->x * this->z)));
HXDLIN( 405)									_y44 = ::Math_obj::atan2(_y52,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 405)									Float value56 = (this->x * this->y);
HXDLIN( 405)									Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 405)									Float _z53;
HXDLIN( 405)									if ((value57 < (int)-1)) {
HXLINE( 405)										_z53 = (int)-1;
            									}
            									else {
HXLINE( 405)										if ((value57 > (int)1)) {
HXLINE( 405)											_z53 = (int)1;
            										}
            										else {
HXLINE( 405)											_z53 = value57;
            										}
            									}
HXDLIN( 405)									_z44 = ::Math_obj::asin(_z53);
            								}
            								else {
HXLINE( 405)									if ((order4 == (int)5)) {
HXLINE( 405)										Float _x53 = (this->x * this->w);
HXDLIN( 405)										Float _x54 = ((int)2 * (_x53 + (this->y * this->z)));
HXDLIN( 405)										_x44 = ::Math_obj::atan2(_x54,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 405)										Float _y53 = (this->x * this->z);
HXDLIN( 405)										Float _y54 = ((int)2 * (_y53 + (this->y * this->w)));
HXDLIN( 405)										_y44 = ::Math_obj::atan2(_y54,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 405)										Float value58 = (this->z * this->w);
HXDLIN( 405)										Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 405)										Float _z54;
HXDLIN( 405)										if ((value59 < (int)-1)) {
HXLINE( 405)											_z54 = (int)-1;
            										}
            										else {
HXLINE( 405)											if ((value59 > (int)1)) {
HXLINE( 405)												_z54 = (int)1;
            											}
            											else {
HXLINE( 405)												_z54 = value59;
            											}
            										}
HXDLIN( 405)										_z44 = ::Math_obj::asin(_z54);
            									}
            								}
            							}
            						}
            					}
            				}
HXDLIN( 405)				{
HXLINE( 405)					bool prev4 = _this4->ignore_listeners;
HXDLIN( 405)					_this4->ignore_listeners = true;
HXDLIN( 405)					{
HXLINE( 405)						_this4->x = _x44;
HXDLIN( 405)						if (!(_this4->_construct)) {
HXLINE( 405)							bool _hx_tmp38;
HXDLIN( 405)							if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 405)								_hx_tmp38 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp38 = false;
            							}
HXDLIN( 405)							if (_hx_tmp38) {
HXLINE( 405)								_this4->listen_x(_x44);
            							}
            						}
            					}
HXDLIN( 405)					{
HXLINE( 405)						_this4->y = _y44;
HXDLIN( 405)						if (!(_this4->_construct)) {
HXLINE( 405)							bool _hx_tmp39;
HXDLIN( 405)							if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 405)								_hx_tmp39 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp39 = false;
            							}
HXDLIN( 405)							if (_hx_tmp39) {
HXLINE( 405)								_this4->listen_y(_y44);
            							}
            						}
            					}
HXDLIN( 405)					{
HXLINE( 405)						_this4->z = _z44;
HXDLIN( 405)						if (!(_this4->_construct)) {
HXLINE( 405)							bool _hx_tmp40;
HXDLIN( 405)							if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 405)								_hx_tmp40 = !(_this4->ignore_listeners);
            							}
            							else {
HXLINE( 405)								_hx_tmp40 = false;
            							}
HXDLIN( 405)							if (_hx_tmp40) {
HXLINE( 405)								_this4->listen_z(_z44);
            							}
            						}
            					}
HXDLIN( 405)					_this4->ignore_listeners = prev4;
HXDLIN( 405)					bool _hx_tmp41;
HXDLIN( 405)					if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 405)						_hx_tmp41 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp41 = false;
            					}
HXDLIN( 405)					if (_hx_tmp41) {
HXLINE( 405)						_this4->listen_x(_this4->x);
            					}
HXDLIN( 405)					bool _hx_tmp42;
HXDLIN( 405)					if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 405)						_hx_tmp42 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp42 = false;
            					}
HXDLIN( 405)					if (_hx_tmp42) {
HXLINE( 405)						_this4->listen_y(_this4->y);
            					}
HXDLIN( 405)					bool _hx_tmp43;
HXDLIN( 405)					if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 405)						_hx_tmp43 = !(_this4->ignore_listeners);
            					}
            					else {
HXLINE( 405)						_hx_tmp43 = false;
            					}
HXDLIN( 405)					if (_hx_tmp43) {
HXLINE( 405)						_this4->listen_z(_this4->z);
            					}
            				}
            			}
HXDLIN( 405)			bool _hx_tmp44;
HXDLIN( 405)			if (hx::IsNotNull( this->listen_x )) {
HXLINE( 405)				_hx_tmp44 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 405)				_hx_tmp44 = false;
            			}
HXDLIN( 405)			if (_hx_tmp44) {
HXLINE( 405)				this->listen_x(this->x);
            			}
HXDLIN( 405)			bool _hx_tmp45;
HXDLIN( 405)			if (hx::IsNotNull( this->listen_y )) {
HXLINE( 405)				_hx_tmp45 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 405)				_hx_tmp45 = false;
            			}
HXDLIN( 405)			if (_hx_tmp45) {
HXLINE( 405)				this->listen_y(this->y);
            			}
HXDLIN( 405)			bool _hx_tmp46;
HXDLIN( 405)			if (hx::IsNotNull( this->listen_z )) {
HXLINE( 405)				_hx_tmp46 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 405)				_hx_tmp46 = false;
            			}
HXDLIN( 405)			if (_hx_tmp46) {
HXLINE( 405)				this->listen_z(this->z);
            			}
HXDLIN( 405)			bool _hx_tmp47;
HXDLIN( 405)			if (hx::IsNotNull( this->listen_w )) {
HXLINE( 405)				_hx_tmp47 = !(this->ignore_listeners);
            			}
            			else {
HXLINE( 405)				_hx_tmp47 = false;
            			}
HXDLIN( 405)			if (_hx_tmp47) {
HXLINE( 405)				this->listen_w(this->w);
            			}
            		}
HXLINE( 407)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,fromArray,return )

::Array< Float > Quaternion_obj::toArray(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_414_toArray)
HXDLIN( 414)		return ::Array_obj< Float >::__new(4)->init(0,this->x)->init(1,this->y)->init(2,this->z)->init(3,this->w);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,toArray,return )

 ::phoenix::Quaternion Quaternion_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_9ac8276792cde9b0_420_clone)
HXDLIN( 420)		return  ::phoenix::Quaternion_obj::__alloc( HX_CTX ,this->x,this->y,this->z,this->w);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,clone,return )

 ::phoenix::Vector Quaternion_obj::toeuler(){
            	HX_GC_STACKFRAME(&_hx_pos_9ac8276792cde9b0_425_toeuler)
HXDLIN( 425)		 ::phoenix::Vector _this =  ::phoenix::Vector_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXDLIN( 425)		int order = (int)0;
HXDLIN( 425)		Float sqx = (this->x * this->x);
HXDLIN( 425)		Float sqy = (this->y * this->y);
HXDLIN( 425)		Float sqz = (this->z * this->z);
HXDLIN( 425)		Float sqw = (this->w * this->w);
HXDLIN( 425)		Float _x = _this->x;
HXDLIN( 425)		Float _y = _this->y;
HXDLIN( 425)		Float _z = _this->z;
HXDLIN( 425)		if ((order == (int)0)) {
HXDLIN( 425)			Float _x1 = (this->x * this->w);
HXDLIN( 425)			Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 425)			_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 425)			Float value = (this->x * this->z);
HXDLIN( 425)			Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 425)			Float _y1;
HXDLIN( 425)			if ((value1 < (int)-1)) {
HXDLIN( 425)				_y1 = (int)-1;
            			}
            			else {
HXDLIN( 425)				if ((value1 > (int)1)) {
HXDLIN( 425)					_y1 = (int)1;
            				}
            				else {
HXDLIN( 425)					_y1 = value1;
            				}
            			}
HXDLIN( 425)			_y = ::Math_obj::asin(_y1);
HXDLIN( 425)			Float _z1 = (this->z * this->w);
HXDLIN( 425)			Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 425)			_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            		}
            		else {
HXDLIN( 425)			if ((order == (int)1)) {
HXDLIN( 425)				Float value2 = (this->x * this->w);
HXDLIN( 425)				Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 425)				Float _x3;
HXDLIN( 425)				if ((value3 < (int)-1)) {
HXDLIN( 425)					_x3 = (int)-1;
            				}
            				else {
HXDLIN( 425)					if ((value3 > (int)1)) {
HXDLIN( 425)						_x3 = (int)1;
            					}
            					else {
HXDLIN( 425)						_x3 = value3;
            					}
            				}
HXDLIN( 425)				_x = ::Math_obj::asin(_x3);
HXDLIN( 425)				Float _y2 = (this->x * this->z);
HXDLIN( 425)				Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 425)				_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 425)				Float _z3 = (this->x * this->y);
HXDLIN( 425)				Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 425)				_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            			}
            			else {
HXDLIN( 425)				if ((order == (int)2)) {
HXDLIN( 425)					Float value4 = (this->x * this->w);
HXDLIN( 425)					Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 425)					Float _x4;
HXDLIN( 425)					if ((value5 < (int)-1)) {
HXDLIN( 425)						_x4 = (int)-1;
            					}
            					else {
HXDLIN( 425)						if ((value5 > (int)1)) {
HXDLIN( 425)							_x4 = (int)1;
            						}
            						else {
HXDLIN( 425)							_x4 = value5;
            						}
            					}
HXDLIN( 425)					_x = ::Math_obj::asin(_x4);
HXDLIN( 425)					Float _y4 = (this->y * this->w);
HXDLIN( 425)					Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 425)					_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 425)					Float _z5 = (this->z * this->w);
HXDLIN( 425)					Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 425)					_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            				}
            				else {
HXDLIN( 425)					if ((order == (int)3)) {
HXDLIN( 425)						Float _x5 = (this->x * this->w);
HXDLIN( 425)						Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 425)						_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 425)						Float value6 = (this->y * this->w);
HXDLIN( 425)						Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 425)						Float _y6;
HXDLIN( 425)						if ((value7 < (int)-1)) {
HXDLIN( 425)							_y6 = (int)-1;
            						}
            						else {
HXDLIN( 425)							if ((value7 > (int)1)) {
HXDLIN( 425)								_y6 = (int)1;
            							}
            							else {
HXDLIN( 425)								_y6 = value7;
            							}
            						}
HXDLIN( 425)						_y = ::Math_obj::asin(_y6);
HXDLIN( 425)						Float _z7 = (this->x * this->y);
HXDLIN( 425)						Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 425)						_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            					}
            					else {
HXDLIN( 425)						if ((order == (int)4)) {
HXDLIN( 425)							Float _x7 = (this->x * this->w);
HXDLIN( 425)							Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 425)							_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 425)							Float _y7 = (this->y * this->w);
HXDLIN( 425)							Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 425)							_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 425)							Float value8 = (this->x * this->y);
HXDLIN( 425)							Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 425)							Float _z9;
HXDLIN( 425)							if ((value9 < (int)-1)) {
HXDLIN( 425)								_z9 = (int)-1;
            							}
            							else {
HXDLIN( 425)								if ((value9 > (int)1)) {
HXDLIN( 425)									_z9 = (int)1;
            								}
            								else {
HXDLIN( 425)									_z9 = value9;
            								}
            							}
HXDLIN( 425)							_z = ::Math_obj::asin(_z9);
            						}
            						else {
HXDLIN( 425)							if ((order == (int)5)) {
HXDLIN( 425)								Float _x9 = (this->x * this->w);
HXDLIN( 425)								Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 425)								_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 425)								Float _y9 = (this->x * this->z);
HXDLIN( 425)								Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 425)								_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 425)								Float value10 = (this->z * this->w);
HXDLIN( 425)								Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 425)								Float _z10;
HXDLIN( 425)								if ((value11 < (int)-1)) {
HXDLIN( 425)									_z10 = (int)-1;
            								}
            								else {
HXDLIN( 425)									if ((value11 > (int)1)) {
HXDLIN( 425)										_z10 = (int)1;
            									}
            									else {
HXDLIN( 425)										_z10 = value11;
            									}
            								}
HXDLIN( 425)								_z = ::Math_obj::asin(_z10);
            							}
            						}
            					}
            				}
            			}
            		}
HXDLIN( 425)		{
HXDLIN( 425)			bool prev = _this->ignore_listeners;
HXDLIN( 425)			_this->ignore_listeners = true;
HXDLIN( 425)			{
HXDLIN( 425)				_this->x = _x;
HXDLIN( 425)				if (!(_this->_construct)) {
HXDLIN( 425)					bool _hx_tmp;
HXDLIN( 425)					if (hx::IsNotNull( _this->listen_x )) {
HXDLIN( 425)						_hx_tmp = !(_this->ignore_listeners);
            					}
            					else {
HXDLIN( 425)						_hx_tmp = false;
            					}
HXDLIN( 425)					if (_hx_tmp) {
HXDLIN( 425)						_this->listen_x(_x);
            					}
            				}
            			}
HXDLIN( 425)			{
HXDLIN( 425)				_this->y = _y;
HXDLIN( 425)				if (!(_this->_construct)) {
HXDLIN( 425)					bool _hx_tmp1;
HXDLIN( 425)					if (hx::IsNotNull( _this->listen_y )) {
HXDLIN( 425)						_hx_tmp1 = !(_this->ignore_listeners);
            					}
            					else {
HXDLIN( 425)						_hx_tmp1 = false;
            					}
HXDLIN( 425)					if (_hx_tmp1) {
HXDLIN( 425)						_this->listen_y(_y);
            					}
            				}
            			}
HXDLIN( 425)			{
HXDLIN( 425)				_this->z = _z;
HXDLIN( 425)				if (!(_this->_construct)) {
HXDLIN( 425)					bool _hx_tmp2;
HXDLIN( 425)					if (hx::IsNotNull( _this->listen_z )) {
HXDLIN( 425)						_hx_tmp2 = !(_this->ignore_listeners);
            					}
            					else {
HXDLIN( 425)						_hx_tmp2 = false;
            					}
HXDLIN( 425)					if (_hx_tmp2) {
HXDLIN( 425)						_this->listen_z(_z);
            					}
            				}
            			}
HXDLIN( 425)			_this->ignore_listeners = prev;
HXDLIN( 425)			bool _hx_tmp3;
HXDLIN( 425)			if (hx::IsNotNull( _this->listen_x )) {
HXDLIN( 425)				_hx_tmp3 = !(_this->ignore_listeners);
            			}
            			else {
HXDLIN( 425)				_hx_tmp3 = false;
            			}
HXDLIN( 425)			if (_hx_tmp3) {
HXDLIN( 425)				_this->listen_x(_this->x);
            			}
HXDLIN( 425)			bool _hx_tmp4;
HXDLIN( 425)			if (hx::IsNotNull( _this->listen_y )) {
HXDLIN( 425)				_hx_tmp4 = !(_this->ignore_listeners);
            			}
            			else {
HXDLIN( 425)				_hx_tmp4 = false;
            			}
HXDLIN( 425)			if (_hx_tmp4) {
HXDLIN( 425)				_this->listen_y(_this->y);
            			}
HXDLIN( 425)			bool _hx_tmp5;
HXDLIN( 425)			if (hx::IsNotNull( _this->listen_z )) {
HXDLIN( 425)				_hx_tmp5 = !(_this->ignore_listeners);
            			}
            			else {
HXDLIN( 425)				_hx_tmp5 = false;
            			}
HXDLIN( 425)			if (_hx_tmp5) {
HXDLIN( 425)				_this->listen_z(_this->z);
            			}
            		}
HXDLIN( 425)		 ::phoenix::Vector _this1 = _this;
HXDLIN( 425)		{
HXDLIN( 425)			Float _x11 = (_this1->x * ((Float)57.2957795130823797));
HXDLIN( 425)			Float _y11 = (_this1->y * ((Float)57.2957795130823797));
HXDLIN( 425)			Float _z11 = (_this1->z * ((Float)57.2957795130823797));
HXDLIN( 425)			bool prev1 = _this1->ignore_listeners;
HXDLIN( 425)			_this1->ignore_listeners = true;
HXDLIN( 425)			{
HXDLIN( 425)				_this1->x = _x11;
HXDLIN( 425)				if (!(_this1->_construct)) {
HXDLIN( 425)					bool _hx_tmp6;
HXDLIN( 425)					if (hx::IsNotNull( _this1->listen_x )) {
HXDLIN( 425)						_hx_tmp6 = !(_this1->ignore_listeners);
            					}
            					else {
HXDLIN( 425)						_hx_tmp6 = false;
            					}
HXDLIN( 425)					if (_hx_tmp6) {
HXDLIN( 425)						_this1->listen_x(_x11);
            					}
            				}
            			}
HXDLIN( 425)			{
HXDLIN( 425)				_this1->y = _y11;
HXDLIN( 425)				if (!(_this1->_construct)) {
HXDLIN( 425)					bool _hx_tmp7;
HXDLIN( 425)					if (hx::IsNotNull( _this1->listen_y )) {
HXDLIN( 425)						_hx_tmp7 = !(_this1->ignore_listeners);
            					}
            					else {
HXDLIN( 425)						_hx_tmp7 = false;
            					}
HXDLIN( 425)					if (_hx_tmp7) {
HXDLIN( 425)						_this1->listen_y(_y11);
            					}
            				}
            			}
HXDLIN( 425)			{
HXDLIN( 425)				_this1->z = _z11;
HXDLIN( 425)				if (!(_this1->_construct)) {
HXDLIN( 425)					bool _hx_tmp8;
HXDLIN( 425)					if (hx::IsNotNull( _this1->listen_z )) {
HXDLIN( 425)						_hx_tmp8 = !(_this1->ignore_listeners);
            					}
            					else {
HXDLIN( 425)						_hx_tmp8 = false;
            					}
HXDLIN( 425)					if (_hx_tmp8) {
HXDLIN( 425)						_this1->listen_z(_z11);
            					}
            				}
            			}
HXDLIN( 425)			_this1->ignore_listeners = prev1;
HXDLIN( 425)			bool _hx_tmp9;
HXDLIN( 425)			if (hx::IsNotNull( _this1->listen_x )) {
HXDLIN( 425)				_hx_tmp9 = !(_this1->ignore_listeners);
            			}
            			else {
HXDLIN( 425)				_hx_tmp9 = false;
            			}
HXDLIN( 425)			if (_hx_tmp9) {
HXDLIN( 425)				_this1->listen_x(_this1->x);
            			}
HXDLIN( 425)			bool _hx_tmp10;
HXDLIN( 425)			if (hx::IsNotNull( _this1->listen_y )) {
HXDLIN( 425)				_hx_tmp10 = !(_this1->ignore_listeners);
            			}
            			else {
HXDLIN( 425)				_hx_tmp10 = false;
            			}
HXDLIN( 425)			if (_hx_tmp10) {
HXDLIN( 425)				_this1->listen_y(_this1->y);
            			}
HXDLIN( 425)			bool _hx_tmp11;
HXDLIN( 425)			if (hx::IsNotNull( _this1->listen_z )) {
HXDLIN( 425)				_hx_tmp11 = !(_this1->ignore_listeners);
            			}
            			else {
HXDLIN( 425)				_hx_tmp11 = false;
            			}
HXDLIN( 425)			if (_hx_tmp11) {
HXDLIN( 425)				_this1->listen_z(_this1->z);
            			}
            		}
HXDLIN( 425)		return _this1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,toeuler,return )

void Quaternion_obj::update_euler(){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_438_update_euler)
HXLINE( 440)		bool _hx_tmp;
HXDLIN( 440)		bool _hx_tmp1;
HXDLIN( 440)		if (hx::IsNotNull( this->euler )) {
HXLINE( 440)			_hx_tmp1 = this->ignore_euler;
            		}
            		else {
HXLINE( 440)			_hx_tmp1 = true;
            		}
HXDLIN( 440)		if (!(_hx_tmp1)) {
HXLINE( 440)			_hx_tmp = this->_construct;
            		}
            		else {
HXLINE( 440)			_hx_tmp = true;
            		}
HXDLIN( 440)		if (_hx_tmp) {
HXLINE( 441)			return;
            		}
HXLINE( 444)		{
HXLINE( 444)			 ::phoenix::Vector _this = this->euler;
HXDLIN( 444)			int order = (int)0;
HXDLIN( 444)			Float sqx = (this->x * this->x);
HXDLIN( 444)			Float sqy = (this->y * this->y);
HXDLIN( 444)			Float sqz = (this->z * this->z);
HXDLIN( 444)			Float sqw = (this->w * this->w);
HXDLIN( 444)			Float _x = _this->x;
HXDLIN( 444)			Float _y = _this->y;
HXDLIN( 444)			Float _z = _this->z;
HXDLIN( 444)			if ((order == (int)0)) {
HXLINE( 444)				Float _x1 = (this->x * this->w);
HXDLIN( 444)				Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 444)				_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 444)				Float value = (this->x * this->z);
HXDLIN( 444)				Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 444)				Float _y1;
HXDLIN( 444)				if ((value1 < (int)-1)) {
HXLINE( 444)					_y1 = (int)-1;
            				}
            				else {
HXLINE( 444)					if ((value1 > (int)1)) {
HXLINE( 444)						_y1 = (int)1;
            					}
            					else {
HXLINE( 444)						_y1 = value1;
            					}
            				}
HXDLIN( 444)				_y = ::Math_obj::asin(_y1);
HXDLIN( 444)				Float _z1 = (this->z * this->w);
HXDLIN( 444)				Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 444)				_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            			}
            			else {
HXLINE( 444)				if ((order == (int)1)) {
HXLINE( 444)					Float value2 = (this->x * this->w);
HXDLIN( 444)					Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 444)					Float _x3;
HXDLIN( 444)					if ((value3 < (int)-1)) {
HXLINE( 444)						_x3 = (int)-1;
            					}
            					else {
HXLINE( 444)						if ((value3 > (int)1)) {
HXLINE( 444)							_x3 = (int)1;
            						}
            						else {
HXLINE( 444)							_x3 = value3;
            						}
            					}
HXDLIN( 444)					_x = ::Math_obj::asin(_x3);
HXDLIN( 444)					Float _y2 = (this->x * this->z);
HXDLIN( 444)					Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 444)					_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 444)					Float _z3 = (this->x * this->y);
HXDLIN( 444)					Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 444)					_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            				}
            				else {
HXLINE( 444)					if ((order == (int)2)) {
HXLINE( 444)						Float value4 = (this->x * this->w);
HXDLIN( 444)						Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 444)						Float _x4;
HXDLIN( 444)						if ((value5 < (int)-1)) {
HXLINE( 444)							_x4 = (int)-1;
            						}
            						else {
HXLINE( 444)							if ((value5 > (int)1)) {
HXLINE( 444)								_x4 = (int)1;
            							}
            							else {
HXLINE( 444)								_x4 = value5;
            							}
            						}
HXDLIN( 444)						_x = ::Math_obj::asin(_x4);
HXDLIN( 444)						Float _y4 = (this->y * this->w);
HXDLIN( 444)						Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 444)						_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 444)						Float _z5 = (this->z * this->w);
HXDLIN( 444)						Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 444)						_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            					}
            					else {
HXLINE( 444)						if ((order == (int)3)) {
HXLINE( 444)							Float _x5 = (this->x * this->w);
HXDLIN( 444)							Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 444)							_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 444)							Float value6 = (this->y * this->w);
HXDLIN( 444)							Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 444)							Float _y6;
HXDLIN( 444)							if ((value7 < (int)-1)) {
HXLINE( 444)								_y6 = (int)-1;
            							}
            							else {
HXLINE( 444)								if ((value7 > (int)1)) {
HXLINE( 444)									_y6 = (int)1;
            								}
            								else {
HXLINE( 444)									_y6 = value7;
            								}
            							}
HXDLIN( 444)							_y = ::Math_obj::asin(_y6);
HXDLIN( 444)							Float _z7 = (this->x * this->y);
HXDLIN( 444)							Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 444)							_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 444)							if ((order == (int)4)) {
HXLINE( 444)								Float _x7 = (this->x * this->w);
HXDLIN( 444)								Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 444)								_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 444)								Float _y7 = (this->y * this->w);
HXDLIN( 444)								Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 444)								_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 444)								Float value8 = (this->x * this->y);
HXDLIN( 444)								Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 444)								Float _z9;
HXDLIN( 444)								if ((value9 < (int)-1)) {
HXLINE( 444)									_z9 = (int)-1;
            								}
            								else {
HXLINE( 444)									if ((value9 > (int)1)) {
HXLINE( 444)										_z9 = (int)1;
            									}
            									else {
HXLINE( 444)										_z9 = value9;
            									}
            								}
HXDLIN( 444)								_z = ::Math_obj::asin(_z9);
            							}
            							else {
HXLINE( 444)								if ((order == (int)5)) {
HXLINE( 444)									Float _x9 = (this->x * this->w);
HXDLIN( 444)									Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 444)									_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 444)									Float _y9 = (this->x * this->z);
HXDLIN( 444)									Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 444)									_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 444)									Float value10 = (this->z * this->w);
HXDLIN( 444)									Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 444)									Float _z10;
HXDLIN( 444)									if ((value11 < (int)-1)) {
HXLINE( 444)										_z10 = (int)-1;
            									}
            									else {
HXLINE( 444)										if ((value11 > (int)1)) {
HXLINE( 444)											_z10 = (int)1;
            										}
            										else {
HXLINE( 444)											_z10 = value11;
            										}
            									}
HXDLIN( 444)									_z = ::Math_obj::asin(_z10);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 444)			{
HXLINE( 444)				bool prev = _this->ignore_listeners;
HXDLIN( 444)				_this->ignore_listeners = true;
HXDLIN( 444)				{
HXLINE( 444)					_this->x = _x;
HXDLIN( 444)					if (!(_this->_construct)) {
HXLINE( 444)						bool _hx_tmp2;
HXDLIN( 444)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 444)							_hx_tmp2 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 444)							_hx_tmp2 = false;
            						}
HXDLIN( 444)						if (_hx_tmp2) {
HXLINE( 444)							_this->listen_x(_x);
            						}
            					}
            				}
HXDLIN( 444)				{
HXLINE( 444)					_this->y = _y;
HXDLIN( 444)					if (!(_this->_construct)) {
HXLINE( 444)						bool _hx_tmp3;
HXDLIN( 444)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 444)							_hx_tmp3 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 444)							_hx_tmp3 = false;
            						}
HXDLIN( 444)						if (_hx_tmp3) {
HXLINE( 444)							_this->listen_y(_y);
            						}
            					}
            				}
HXDLIN( 444)				{
HXLINE( 444)					_this->z = _z;
HXDLIN( 444)					if (!(_this->_construct)) {
HXLINE( 444)						bool _hx_tmp4;
HXDLIN( 444)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 444)							_hx_tmp4 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 444)							_hx_tmp4 = false;
            						}
HXDLIN( 444)						if (_hx_tmp4) {
HXLINE( 444)							_this->listen_z(_z);
            						}
            					}
            				}
HXDLIN( 444)				_this->ignore_listeners = prev;
HXDLIN( 444)				bool _hx_tmp5;
HXDLIN( 444)				if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 444)					_hx_tmp5 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 444)					_hx_tmp5 = false;
            				}
HXDLIN( 444)				if (_hx_tmp5) {
HXLINE( 444)					_this->listen_x(_this->x);
            				}
HXDLIN( 444)				bool _hx_tmp6;
HXDLIN( 444)				if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 444)					_hx_tmp6 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 444)					_hx_tmp6 = false;
            				}
HXDLIN( 444)				if (_hx_tmp6) {
HXLINE( 444)					_this->listen_y(_this->y);
            				}
HXDLIN( 444)				bool _hx_tmp7;
HXDLIN( 444)				if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 444)					_hx_tmp7 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 444)					_hx_tmp7 = false;
            				}
HXDLIN( 444)				if (_hx_tmp7) {
HXLINE( 444)					_this->listen_z(_this->z);
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Quaternion_obj,update_euler,(void))

void Quaternion_obj::set_xyzw(Float _x,Float _y,Float _z,Float _w){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_450_set_xyzw)
HXLINE( 452)		this->ignore_euler = true;
HXLINE( 454)		{
HXLINE( 454)			this->x = _x;
HXDLIN( 454)			if (!(this->_construct)) {
HXLINE( 454)				bool _hx_tmp;
HXDLIN( 454)				bool _hx_tmp1;
HXDLIN( 454)				if (hx::IsNotNull( this->euler )) {
HXLINE( 454)					_hx_tmp1 = this->ignore_euler;
            				}
            				else {
HXLINE( 454)					_hx_tmp1 = true;
            				}
HXDLIN( 454)				if (!(_hx_tmp1)) {
HXLINE( 454)					_hx_tmp = this->_construct;
            				}
            				else {
HXLINE( 454)					_hx_tmp = true;
            				}
HXDLIN( 454)				if (!(_hx_tmp)) {
HXLINE( 454)					 ::phoenix::Vector _this = this->euler;
HXDLIN( 454)					int order = (int)0;
HXDLIN( 454)					Float sqx = (this->x * this->x);
HXDLIN( 454)					Float sqy = (this->y * this->y);
HXDLIN( 454)					Float sqz = (this->z * this->z);
HXDLIN( 454)					Float sqw = (this->w * this->w);
HXDLIN( 454)					Float _x1 = _this->x;
HXDLIN( 454)					Float _y1 = _this->y;
HXDLIN( 454)					Float _z1 = _this->z;
HXDLIN( 454)					if ((order == (int)0)) {
HXLINE( 454)						Float _x2 = (this->x * this->w);
HXDLIN( 454)						Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN( 454)						_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 454)						Float value = (this->x * this->z);
HXDLIN( 454)						Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 454)						Float _y2;
HXDLIN( 454)						if ((value1 < (int)-1)) {
HXLINE( 454)							_y2 = (int)-1;
            						}
            						else {
HXLINE( 454)							if ((value1 > (int)1)) {
HXLINE( 454)								_y2 = (int)1;
            							}
            							else {
HXLINE( 454)								_y2 = value1;
            							}
            						}
HXDLIN( 454)						_y1 = ::Math_obj::asin(_y2);
HXDLIN( 454)						Float _z2 = (this->z * this->w);
HXDLIN( 454)						Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 454)						_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            					}
            					else {
HXLINE( 454)						if ((order == (int)1)) {
HXLINE( 454)							Float value2 = (this->x * this->w);
HXDLIN( 454)							Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 454)							Float _x4;
HXDLIN( 454)							if ((value3 < (int)-1)) {
HXLINE( 454)								_x4 = (int)-1;
            							}
            							else {
HXLINE( 454)								if ((value3 > (int)1)) {
HXLINE( 454)									_x4 = (int)1;
            								}
            								else {
HXLINE( 454)									_x4 = value3;
            								}
            							}
HXDLIN( 454)							_x1 = ::Math_obj::asin(_x4);
HXDLIN( 454)							Float _y3 = (this->x * this->z);
HXDLIN( 454)							Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 454)							_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 454)							Float _z4 = (this->x * this->y);
HXDLIN( 454)							Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 454)							_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            						}
            						else {
HXLINE( 454)							if ((order == (int)2)) {
HXLINE( 454)								Float value4 = (this->x * this->w);
HXDLIN( 454)								Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 454)								Float _x5;
HXDLIN( 454)								if ((value5 < (int)-1)) {
HXLINE( 454)									_x5 = (int)-1;
            								}
            								else {
HXLINE( 454)									if ((value5 > (int)1)) {
HXLINE( 454)										_x5 = (int)1;
            									}
            									else {
HXLINE( 454)										_x5 = value5;
            									}
            								}
HXDLIN( 454)								_x1 = ::Math_obj::asin(_x5);
HXDLIN( 454)								Float _y5 = (this->y * this->w);
HXDLIN( 454)								Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 454)								_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 454)								Float _z6 = (this->z * this->w);
HXDLIN( 454)								Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 454)								_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 454)								if ((order == (int)3)) {
HXLINE( 454)									Float _x6 = (this->x * this->w);
HXDLIN( 454)									Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN( 454)									_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 454)									Float value6 = (this->y * this->w);
HXDLIN( 454)									Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 454)									Float _y7;
HXDLIN( 454)									if ((value7 < (int)-1)) {
HXLINE( 454)										_y7 = (int)-1;
            									}
            									else {
HXLINE( 454)										if ((value7 > (int)1)) {
HXLINE( 454)											_y7 = (int)1;
            										}
            										else {
HXLINE( 454)											_y7 = value7;
            										}
            									}
HXDLIN( 454)									_y1 = ::Math_obj::asin(_y7);
HXDLIN( 454)									Float _z8 = (this->x * this->y);
HXDLIN( 454)									Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 454)									_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            								}
            								else {
HXLINE( 454)									if ((order == (int)4)) {
HXLINE( 454)										Float _x8 = (this->x * this->w);
HXDLIN( 454)										Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN( 454)										_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 454)										Float _y8 = (this->y * this->w);
HXDLIN( 454)										Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 454)										_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 454)										Float value8 = (this->x * this->y);
HXDLIN( 454)										Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 454)										Float _z10;
HXDLIN( 454)										if ((value9 < (int)-1)) {
HXLINE( 454)											_z10 = (int)-1;
            										}
            										else {
HXLINE( 454)											if ((value9 > (int)1)) {
HXLINE( 454)												_z10 = (int)1;
            											}
            											else {
HXLINE( 454)												_z10 = value9;
            											}
            										}
HXDLIN( 454)										_z1 = ::Math_obj::asin(_z10);
            									}
            									else {
HXLINE( 454)										if ((order == (int)5)) {
HXLINE( 454)											Float _x10 = (this->x * this->w);
HXDLIN( 454)											Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN( 454)											_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 454)											Float _y10 = (this->x * this->z);
HXDLIN( 454)											Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 454)											_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 454)											Float value10 = (this->z * this->w);
HXDLIN( 454)											Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 454)											Float _z11;
HXDLIN( 454)											if ((value11 < (int)-1)) {
HXLINE( 454)												_z11 = (int)-1;
            											}
            											else {
HXLINE( 454)												if ((value11 > (int)1)) {
HXLINE( 454)													_z11 = (int)1;
            												}
            												else {
HXLINE( 454)													_z11 = value11;
            												}
            											}
HXDLIN( 454)											_z1 = ::Math_obj::asin(_z11);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 454)					{
HXLINE( 454)						bool prev = _this->ignore_listeners;
HXDLIN( 454)						_this->ignore_listeners = true;
HXDLIN( 454)						{
HXLINE( 454)							_this->x = _x1;
HXDLIN( 454)							if (!(_this->_construct)) {
HXLINE( 454)								bool _hx_tmp2;
HXDLIN( 454)								if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 454)									_hx_tmp2 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 454)									_hx_tmp2 = false;
            								}
HXDLIN( 454)								if (_hx_tmp2) {
HXLINE( 454)									_this->listen_x(_x1);
            								}
            							}
            						}
HXDLIN( 454)						{
HXLINE( 454)							_this->y = _y1;
HXDLIN( 454)							if (!(_this->_construct)) {
HXLINE( 454)								bool _hx_tmp3;
HXDLIN( 454)								if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 454)									_hx_tmp3 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 454)									_hx_tmp3 = false;
            								}
HXDLIN( 454)								if (_hx_tmp3) {
HXLINE( 454)									_this->listen_y(_y1);
            								}
            							}
            						}
HXDLIN( 454)						{
HXLINE( 454)							_this->z = _z1;
HXDLIN( 454)							if (!(_this->_construct)) {
HXLINE( 454)								bool _hx_tmp4;
HXDLIN( 454)								if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 454)									_hx_tmp4 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 454)									_hx_tmp4 = false;
            								}
HXDLIN( 454)								if (_hx_tmp4) {
HXLINE( 454)									_this->listen_z(_z1);
            								}
            							}
            						}
HXDLIN( 454)						_this->ignore_listeners = prev;
HXDLIN( 454)						bool _hx_tmp5;
HXDLIN( 454)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 454)							_hx_tmp5 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 454)							_hx_tmp5 = false;
            						}
HXDLIN( 454)						if (_hx_tmp5) {
HXLINE( 454)							_this->listen_x(_this->x);
            						}
HXDLIN( 454)						bool _hx_tmp6;
HXDLIN( 454)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 454)							_hx_tmp6 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 454)							_hx_tmp6 = false;
            						}
HXDLIN( 454)						if (_hx_tmp6) {
HXLINE( 454)							_this->listen_y(_this->y);
            						}
HXDLIN( 454)						bool _hx_tmp7;
HXDLIN( 454)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 454)							_hx_tmp7 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 454)							_hx_tmp7 = false;
            						}
HXDLIN( 454)						if (_hx_tmp7) {
HXLINE( 454)							_this->listen_z(_this->z);
            						}
            					}
            				}
HXDLIN( 454)				bool _hx_tmp8;
HXDLIN( 454)				if (hx::IsNotNull( this->listen_x )) {
HXLINE( 454)					_hx_tmp8 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 454)					_hx_tmp8 = false;
            				}
HXDLIN( 454)				if (_hx_tmp8) {
HXLINE( 454)					this->listen_x(this->x);
            				}
            			}
            		}
HXLINE( 455)		{
HXLINE( 455)			this->y = _y;
HXDLIN( 455)			if (!(this->_construct)) {
HXLINE( 455)				bool _hx_tmp9;
HXDLIN( 455)				bool _hx_tmp10;
HXDLIN( 455)				if (hx::IsNotNull( this->euler )) {
HXLINE( 455)					_hx_tmp10 = this->ignore_euler;
            				}
            				else {
HXLINE( 455)					_hx_tmp10 = true;
            				}
HXDLIN( 455)				if (!(_hx_tmp10)) {
HXLINE( 455)					_hx_tmp9 = this->_construct;
            				}
            				else {
HXLINE( 455)					_hx_tmp9 = true;
            				}
HXDLIN( 455)				if (!(_hx_tmp9)) {
HXLINE( 455)					 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 455)					int order1 = (int)0;
HXDLIN( 455)					Float sqx1 = (this->x * this->x);
HXDLIN( 455)					Float sqy1 = (this->y * this->y);
HXDLIN( 455)					Float sqz1 = (this->z * this->z);
HXDLIN( 455)					Float sqw1 = (this->w * this->w);
HXDLIN( 455)					Float _x12 = _this1->x;
HXDLIN( 455)					Float _y12 = _this1->y;
HXDLIN( 455)					Float _z12 = _this1->z;
HXDLIN( 455)					if ((order1 == (int)0)) {
HXLINE( 455)						Float _x13 = (this->x * this->w);
HXDLIN( 455)						Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN( 455)						_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 455)						Float value12 = (this->x * this->z);
HXDLIN( 455)						Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 455)						Float _y13;
HXDLIN( 455)						if ((value13 < (int)-1)) {
HXLINE( 455)							_y13 = (int)-1;
            						}
            						else {
HXLINE( 455)							if ((value13 > (int)1)) {
HXLINE( 455)								_y13 = (int)1;
            							}
            							else {
HXLINE( 455)								_y13 = value13;
            							}
            						}
HXDLIN( 455)						_y12 = ::Math_obj::asin(_y13);
HXDLIN( 455)						Float _z13 = (this->z * this->w);
HXDLIN( 455)						Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 455)						_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            					}
            					else {
HXLINE( 455)						if ((order1 == (int)1)) {
HXLINE( 455)							Float value14 = (this->x * this->w);
HXDLIN( 455)							Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 455)							Float _x15;
HXDLIN( 455)							if ((value15 < (int)-1)) {
HXLINE( 455)								_x15 = (int)-1;
            							}
            							else {
HXLINE( 455)								if ((value15 > (int)1)) {
HXLINE( 455)									_x15 = (int)1;
            								}
            								else {
HXLINE( 455)									_x15 = value15;
            								}
            							}
HXDLIN( 455)							_x12 = ::Math_obj::asin(_x15);
HXDLIN( 455)							Float _y14 = (this->x * this->z);
HXDLIN( 455)							Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 455)							_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 455)							Float _z15 = (this->x * this->y);
HXDLIN( 455)							Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 455)							_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            						}
            						else {
HXLINE( 455)							if ((order1 == (int)2)) {
HXLINE( 455)								Float value16 = (this->x * this->w);
HXDLIN( 455)								Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 455)								Float _x16;
HXDLIN( 455)								if ((value17 < (int)-1)) {
HXLINE( 455)									_x16 = (int)-1;
            								}
            								else {
HXLINE( 455)									if ((value17 > (int)1)) {
HXLINE( 455)										_x16 = (int)1;
            									}
            									else {
HXLINE( 455)										_x16 = value17;
            									}
            								}
HXDLIN( 455)								_x12 = ::Math_obj::asin(_x16);
HXDLIN( 455)								Float _y16 = (this->y * this->w);
HXDLIN( 455)								Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 455)								_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 455)								Float _z17 = (this->z * this->w);
HXDLIN( 455)								Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 455)								_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 455)								if ((order1 == (int)3)) {
HXLINE( 455)									Float _x17 = (this->x * this->w);
HXDLIN( 455)									Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN( 455)									_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 455)									Float value18 = (this->y * this->w);
HXDLIN( 455)									Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 455)									Float _y18;
HXDLIN( 455)									if ((value19 < (int)-1)) {
HXLINE( 455)										_y18 = (int)-1;
            									}
            									else {
HXLINE( 455)										if ((value19 > (int)1)) {
HXLINE( 455)											_y18 = (int)1;
            										}
            										else {
HXLINE( 455)											_y18 = value19;
            										}
            									}
HXDLIN( 455)									_y12 = ::Math_obj::asin(_y18);
HXDLIN( 455)									Float _z19 = (this->x * this->y);
HXDLIN( 455)									Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 455)									_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            								}
            								else {
HXLINE( 455)									if ((order1 == (int)4)) {
HXLINE( 455)										Float _x19 = (this->x * this->w);
HXDLIN( 455)										Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN( 455)										_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 455)										Float _y19 = (this->y * this->w);
HXDLIN( 455)										Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 455)										_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 455)										Float value20 = (this->x * this->y);
HXDLIN( 455)										Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 455)										Float _z21;
HXDLIN( 455)										if ((value21 < (int)-1)) {
HXLINE( 455)											_z21 = (int)-1;
            										}
            										else {
HXLINE( 455)											if ((value21 > (int)1)) {
HXLINE( 455)												_z21 = (int)1;
            											}
            											else {
HXLINE( 455)												_z21 = value21;
            											}
            										}
HXDLIN( 455)										_z12 = ::Math_obj::asin(_z21);
            									}
            									else {
HXLINE( 455)										if ((order1 == (int)5)) {
HXLINE( 455)											Float _x21 = (this->x * this->w);
HXDLIN( 455)											Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN( 455)											_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 455)											Float _y21 = (this->x * this->z);
HXDLIN( 455)											Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 455)											_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 455)											Float value22 = (this->z * this->w);
HXDLIN( 455)											Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 455)											Float _z22;
HXDLIN( 455)											if ((value23 < (int)-1)) {
HXLINE( 455)												_z22 = (int)-1;
            											}
            											else {
HXLINE( 455)												if ((value23 > (int)1)) {
HXLINE( 455)													_z22 = (int)1;
            												}
            												else {
HXLINE( 455)													_z22 = value23;
            												}
            											}
HXDLIN( 455)											_z12 = ::Math_obj::asin(_z22);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 455)					{
HXLINE( 455)						bool prev1 = _this1->ignore_listeners;
HXDLIN( 455)						_this1->ignore_listeners = true;
HXDLIN( 455)						{
HXLINE( 455)							_this1->x = _x12;
HXDLIN( 455)							if (!(_this1->_construct)) {
HXLINE( 455)								bool _hx_tmp11;
HXDLIN( 455)								if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 455)									_hx_tmp11 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 455)									_hx_tmp11 = false;
            								}
HXDLIN( 455)								if (_hx_tmp11) {
HXLINE( 455)									_this1->listen_x(_x12);
            								}
            							}
            						}
HXDLIN( 455)						{
HXLINE( 455)							_this1->y = _y12;
HXDLIN( 455)							if (!(_this1->_construct)) {
HXLINE( 455)								bool _hx_tmp12;
HXDLIN( 455)								if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 455)									_hx_tmp12 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 455)									_hx_tmp12 = false;
            								}
HXDLIN( 455)								if (_hx_tmp12) {
HXLINE( 455)									_this1->listen_y(_y12);
            								}
            							}
            						}
HXDLIN( 455)						{
HXLINE( 455)							_this1->z = _z12;
HXDLIN( 455)							if (!(_this1->_construct)) {
HXLINE( 455)								bool _hx_tmp13;
HXDLIN( 455)								if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 455)									_hx_tmp13 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 455)									_hx_tmp13 = false;
            								}
HXDLIN( 455)								if (_hx_tmp13) {
HXLINE( 455)									_this1->listen_z(_z12);
            								}
            							}
            						}
HXDLIN( 455)						_this1->ignore_listeners = prev1;
HXDLIN( 455)						bool _hx_tmp14;
HXDLIN( 455)						if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 455)							_hx_tmp14 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 455)							_hx_tmp14 = false;
            						}
HXDLIN( 455)						if (_hx_tmp14) {
HXLINE( 455)							_this1->listen_x(_this1->x);
            						}
HXDLIN( 455)						bool _hx_tmp15;
HXDLIN( 455)						if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 455)							_hx_tmp15 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 455)							_hx_tmp15 = false;
            						}
HXDLIN( 455)						if (_hx_tmp15) {
HXLINE( 455)							_this1->listen_y(_this1->y);
            						}
HXDLIN( 455)						bool _hx_tmp16;
HXDLIN( 455)						if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 455)							_hx_tmp16 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 455)							_hx_tmp16 = false;
            						}
HXDLIN( 455)						if (_hx_tmp16) {
HXLINE( 455)							_this1->listen_z(_this1->z);
            						}
            					}
            				}
HXDLIN( 455)				bool _hx_tmp17;
HXDLIN( 455)				if (hx::IsNotNull( this->listen_y )) {
HXLINE( 455)					_hx_tmp17 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 455)					_hx_tmp17 = false;
            				}
HXDLIN( 455)				if (_hx_tmp17) {
HXLINE( 455)					this->listen_y(this->y);
            				}
            			}
            		}
HXLINE( 456)		{
HXLINE( 456)			this->z = _z;
HXDLIN( 456)			if (!(this->_construct)) {
HXLINE( 456)				bool _hx_tmp18;
HXDLIN( 456)				bool _hx_tmp19;
HXDLIN( 456)				if (hx::IsNotNull( this->euler )) {
HXLINE( 456)					_hx_tmp19 = this->ignore_euler;
            				}
            				else {
HXLINE( 456)					_hx_tmp19 = true;
            				}
HXDLIN( 456)				if (!(_hx_tmp19)) {
HXLINE( 456)					_hx_tmp18 = this->_construct;
            				}
            				else {
HXLINE( 456)					_hx_tmp18 = true;
            				}
HXDLIN( 456)				if (!(_hx_tmp18)) {
HXLINE( 456)					 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 456)					int order2 = (int)0;
HXDLIN( 456)					Float sqx2 = (this->x * this->x);
HXDLIN( 456)					Float sqy2 = (this->y * this->y);
HXDLIN( 456)					Float sqz2 = (this->z * this->z);
HXDLIN( 456)					Float sqw2 = (this->w * this->w);
HXDLIN( 456)					Float _x23 = _this2->x;
HXDLIN( 456)					Float _y23 = _this2->y;
HXDLIN( 456)					Float _z23 = _this2->z;
HXDLIN( 456)					if ((order2 == (int)0)) {
HXLINE( 456)						Float _x24 = (this->x * this->w);
HXDLIN( 456)						Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN( 456)						_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 456)						Float value24 = (this->x * this->z);
HXDLIN( 456)						Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 456)						Float _y24;
HXDLIN( 456)						if ((value25 < (int)-1)) {
HXLINE( 456)							_y24 = (int)-1;
            						}
            						else {
HXLINE( 456)							if ((value25 > (int)1)) {
HXLINE( 456)								_y24 = (int)1;
            							}
            							else {
HXLINE( 456)								_y24 = value25;
            							}
            						}
HXDLIN( 456)						_y23 = ::Math_obj::asin(_y24);
HXDLIN( 456)						Float _z24 = (this->z * this->w);
HXDLIN( 456)						Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 456)						_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            					}
            					else {
HXLINE( 456)						if ((order2 == (int)1)) {
HXLINE( 456)							Float value26 = (this->x * this->w);
HXDLIN( 456)							Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 456)							Float _x26;
HXDLIN( 456)							if ((value27 < (int)-1)) {
HXLINE( 456)								_x26 = (int)-1;
            							}
            							else {
HXLINE( 456)								if ((value27 > (int)1)) {
HXLINE( 456)									_x26 = (int)1;
            								}
            								else {
HXLINE( 456)									_x26 = value27;
            								}
            							}
HXDLIN( 456)							_x23 = ::Math_obj::asin(_x26);
HXDLIN( 456)							Float _y25 = (this->x * this->z);
HXDLIN( 456)							Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 456)							_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 456)							Float _z26 = (this->x * this->y);
HXDLIN( 456)							Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 456)							_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            						}
            						else {
HXLINE( 456)							if ((order2 == (int)2)) {
HXLINE( 456)								Float value28 = (this->x * this->w);
HXDLIN( 456)								Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 456)								Float _x27;
HXDLIN( 456)								if ((value29 < (int)-1)) {
HXLINE( 456)									_x27 = (int)-1;
            								}
            								else {
HXLINE( 456)									if ((value29 > (int)1)) {
HXLINE( 456)										_x27 = (int)1;
            									}
            									else {
HXLINE( 456)										_x27 = value29;
            									}
            								}
HXDLIN( 456)								_x23 = ::Math_obj::asin(_x27);
HXDLIN( 456)								Float _y27 = (this->y * this->w);
HXDLIN( 456)								Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 456)								_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 456)								Float _z28 = (this->z * this->w);
HXDLIN( 456)								Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 456)								_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 456)								if ((order2 == (int)3)) {
HXLINE( 456)									Float _x28 = (this->x * this->w);
HXDLIN( 456)									Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN( 456)									_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 456)									Float value30 = (this->y * this->w);
HXDLIN( 456)									Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 456)									Float _y29;
HXDLIN( 456)									if ((value31 < (int)-1)) {
HXLINE( 456)										_y29 = (int)-1;
            									}
            									else {
HXLINE( 456)										if ((value31 > (int)1)) {
HXLINE( 456)											_y29 = (int)1;
            										}
            										else {
HXLINE( 456)											_y29 = value31;
            										}
            									}
HXDLIN( 456)									_y23 = ::Math_obj::asin(_y29);
HXDLIN( 456)									Float _z30 = (this->x * this->y);
HXDLIN( 456)									Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 456)									_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            								}
            								else {
HXLINE( 456)									if ((order2 == (int)4)) {
HXLINE( 456)										Float _x30 = (this->x * this->w);
HXDLIN( 456)										Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN( 456)										_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 456)										Float _y30 = (this->y * this->w);
HXDLIN( 456)										Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 456)										_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 456)										Float value32 = (this->x * this->y);
HXDLIN( 456)										Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 456)										Float _z32;
HXDLIN( 456)										if ((value33 < (int)-1)) {
HXLINE( 456)											_z32 = (int)-1;
            										}
            										else {
HXLINE( 456)											if ((value33 > (int)1)) {
HXLINE( 456)												_z32 = (int)1;
            											}
            											else {
HXLINE( 456)												_z32 = value33;
            											}
            										}
HXDLIN( 456)										_z23 = ::Math_obj::asin(_z32);
            									}
            									else {
HXLINE( 456)										if ((order2 == (int)5)) {
HXLINE( 456)											Float _x32 = (this->x * this->w);
HXDLIN( 456)											Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN( 456)											_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 456)											Float _y32 = (this->x * this->z);
HXDLIN( 456)											Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 456)											_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 456)											Float value34 = (this->z * this->w);
HXDLIN( 456)											Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 456)											Float _z33;
HXDLIN( 456)											if ((value35 < (int)-1)) {
HXLINE( 456)												_z33 = (int)-1;
            											}
            											else {
HXLINE( 456)												if ((value35 > (int)1)) {
HXLINE( 456)													_z33 = (int)1;
            												}
            												else {
HXLINE( 456)													_z33 = value35;
            												}
            											}
HXDLIN( 456)											_z23 = ::Math_obj::asin(_z33);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 456)					{
HXLINE( 456)						bool prev2 = _this2->ignore_listeners;
HXDLIN( 456)						_this2->ignore_listeners = true;
HXDLIN( 456)						{
HXLINE( 456)							_this2->x = _x23;
HXDLIN( 456)							if (!(_this2->_construct)) {
HXLINE( 456)								bool _hx_tmp20;
HXDLIN( 456)								if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 456)									_hx_tmp20 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 456)									_hx_tmp20 = false;
            								}
HXDLIN( 456)								if (_hx_tmp20) {
HXLINE( 456)									_this2->listen_x(_x23);
            								}
            							}
            						}
HXDLIN( 456)						{
HXLINE( 456)							_this2->y = _y23;
HXDLIN( 456)							if (!(_this2->_construct)) {
HXLINE( 456)								bool _hx_tmp21;
HXDLIN( 456)								if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 456)									_hx_tmp21 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 456)									_hx_tmp21 = false;
            								}
HXDLIN( 456)								if (_hx_tmp21) {
HXLINE( 456)									_this2->listen_y(_y23);
            								}
            							}
            						}
HXDLIN( 456)						{
HXLINE( 456)							_this2->z = _z23;
HXDLIN( 456)							if (!(_this2->_construct)) {
HXLINE( 456)								bool _hx_tmp22;
HXDLIN( 456)								if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 456)									_hx_tmp22 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 456)									_hx_tmp22 = false;
            								}
HXDLIN( 456)								if (_hx_tmp22) {
HXLINE( 456)									_this2->listen_z(_z23);
            								}
            							}
            						}
HXDLIN( 456)						_this2->ignore_listeners = prev2;
HXDLIN( 456)						bool _hx_tmp23;
HXDLIN( 456)						if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 456)							_hx_tmp23 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 456)							_hx_tmp23 = false;
            						}
HXDLIN( 456)						if (_hx_tmp23) {
HXLINE( 456)							_this2->listen_x(_this2->x);
            						}
HXDLIN( 456)						bool _hx_tmp24;
HXDLIN( 456)						if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 456)							_hx_tmp24 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 456)							_hx_tmp24 = false;
            						}
HXDLIN( 456)						if (_hx_tmp24) {
HXLINE( 456)							_this2->listen_y(_this2->y);
            						}
HXDLIN( 456)						bool _hx_tmp25;
HXDLIN( 456)						if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 456)							_hx_tmp25 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 456)							_hx_tmp25 = false;
            						}
HXDLIN( 456)						if (_hx_tmp25) {
HXLINE( 456)							_this2->listen_z(_this2->z);
            						}
            					}
            				}
HXDLIN( 456)				bool _hx_tmp26;
HXDLIN( 456)				if (hx::IsNotNull( this->listen_z )) {
HXLINE( 456)					_hx_tmp26 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 456)					_hx_tmp26 = false;
            				}
HXDLIN( 456)				if (_hx_tmp26) {
HXLINE( 456)					this->listen_z(this->z);
            				}
            			}
            		}
HXLINE( 457)		{
HXLINE( 457)			this->w = _w;
HXDLIN( 457)			if (!(this->_construct)) {
HXLINE( 457)				bool _hx_tmp27;
HXDLIN( 457)				bool _hx_tmp28;
HXDLIN( 457)				if (hx::IsNotNull( this->euler )) {
HXLINE( 457)					_hx_tmp28 = this->ignore_euler;
            				}
            				else {
HXLINE( 457)					_hx_tmp28 = true;
            				}
HXDLIN( 457)				if (!(_hx_tmp28)) {
HXLINE( 457)					_hx_tmp27 = this->_construct;
            				}
            				else {
HXLINE( 457)					_hx_tmp27 = true;
            				}
HXDLIN( 457)				if (!(_hx_tmp27)) {
HXLINE( 457)					 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 457)					int order3 = (int)0;
HXDLIN( 457)					Float sqx3 = (this->x * this->x);
HXDLIN( 457)					Float sqy3 = (this->y * this->y);
HXDLIN( 457)					Float sqz3 = (this->z * this->z);
HXDLIN( 457)					Float sqw3 = (this->w * this->w);
HXDLIN( 457)					Float _x34 = _this3->x;
HXDLIN( 457)					Float _y34 = _this3->y;
HXDLIN( 457)					Float _z34 = _this3->z;
HXDLIN( 457)					if ((order3 == (int)0)) {
HXLINE( 457)						Float _x35 = (this->x * this->w);
HXDLIN( 457)						Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN( 457)						_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 457)						Float value36 = (this->x * this->z);
HXDLIN( 457)						Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 457)						Float _y35;
HXDLIN( 457)						if ((value37 < (int)-1)) {
HXLINE( 457)							_y35 = (int)-1;
            						}
            						else {
HXLINE( 457)							if ((value37 > (int)1)) {
HXLINE( 457)								_y35 = (int)1;
            							}
            							else {
HXLINE( 457)								_y35 = value37;
            							}
            						}
HXDLIN( 457)						_y34 = ::Math_obj::asin(_y35);
HXDLIN( 457)						Float _z35 = (this->z * this->w);
HXDLIN( 457)						Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 457)						_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            					}
            					else {
HXLINE( 457)						if ((order3 == (int)1)) {
HXLINE( 457)							Float value38 = (this->x * this->w);
HXDLIN( 457)							Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 457)							Float _x37;
HXDLIN( 457)							if ((value39 < (int)-1)) {
HXLINE( 457)								_x37 = (int)-1;
            							}
            							else {
HXLINE( 457)								if ((value39 > (int)1)) {
HXLINE( 457)									_x37 = (int)1;
            								}
            								else {
HXLINE( 457)									_x37 = value39;
            								}
            							}
HXDLIN( 457)							_x34 = ::Math_obj::asin(_x37);
HXDLIN( 457)							Float _y36 = (this->x * this->z);
HXDLIN( 457)							Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 457)							_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 457)							Float _z37 = (this->x * this->y);
HXDLIN( 457)							Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 457)							_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            						}
            						else {
HXLINE( 457)							if ((order3 == (int)2)) {
HXLINE( 457)								Float value40 = (this->x * this->w);
HXDLIN( 457)								Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 457)								Float _x38;
HXDLIN( 457)								if ((value41 < (int)-1)) {
HXLINE( 457)									_x38 = (int)-1;
            								}
            								else {
HXLINE( 457)									if ((value41 > (int)1)) {
HXLINE( 457)										_x38 = (int)1;
            									}
            									else {
HXLINE( 457)										_x38 = value41;
            									}
            								}
HXDLIN( 457)								_x34 = ::Math_obj::asin(_x38);
HXDLIN( 457)								Float _y38 = (this->y * this->w);
HXDLIN( 457)								Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 457)								_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 457)								Float _z39 = (this->z * this->w);
HXDLIN( 457)								Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 457)								_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            							}
            							else {
HXLINE( 457)								if ((order3 == (int)3)) {
HXLINE( 457)									Float _x39 = (this->x * this->w);
HXDLIN( 457)									Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN( 457)									_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 457)									Float value42 = (this->y * this->w);
HXDLIN( 457)									Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 457)									Float _y40;
HXDLIN( 457)									if ((value43 < (int)-1)) {
HXLINE( 457)										_y40 = (int)-1;
            									}
            									else {
HXLINE( 457)										if ((value43 > (int)1)) {
HXLINE( 457)											_y40 = (int)1;
            										}
            										else {
HXLINE( 457)											_y40 = value43;
            										}
            									}
HXDLIN( 457)									_y34 = ::Math_obj::asin(_y40);
HXDLIN( 457)									Float _z41 = (this->x * this->y);
HXDLIN( 457)									Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 457)									_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            								}
            								else {
HXLINE( 457)									if ((order3 == (int)4)) {
HXLINE( 457)										Float _x41 = (this->x * this->w);
HXDLIN( 457)										Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN( 457)										_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 457)										Float _y41 = (this->y * this->w);
HXDLIN( 457)										Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 457)										_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 457)										Float value44 = (this->x * this->y);
HXDLIN( 457)										Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 457)										Float _z43;
HXDLIN( 457)										if ((value45 < (int)-1)) {
HXLINE( 457)											_z43 = (int)-1;
            										}
            										else {
HXLINE( 457)											if ((value45 > (int)1)) {
HXLINE( 457)												_z43 = (int)1;
            											}
            											else {
HXLINE( 457)												_z43 = value45;
            											}
            										}
HXDLIN( 457)										_z34 = ::Math_obj::asin(_z43);
            									}
            									else {
HXLINE( 457)										if ((order3 == (int)5)) {
HXLINE( 457)											Float _x43 = (this->x * this->w);
HXDLIN( 457)											Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN( 457)											_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 457)											Float _y43 = (this->x * this->z);
HXDLIN( 457)											Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 457)											_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 457)											Float value46 = (this->z * this->w);
HXDLIN( 457)											Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 457)											Float _z44;
HXDLIN( 457)											if ((value47 < (int)-1)) {
HXLINE( 457)												_z44 = (int)-1;
            											}
            											else {
HXLINE( 457)												if ((value47 > (int)1)) {
HXLINE( 457)													_z44 = (int)1;
            												}
            												else {
HXLINE( 457)													_z44 = value47;
            												}
            											}
HXDLIN( 457)											_z34 = ::Math_obj::asin(_z44);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 457)					{
HXLINE( 457)						bool prev3 = _this3->ignore_listeners;
HXDLIN( 457)						_this3->ignore_listeners = true;
HXDLIN( 457)						{
HXLINE( 457)							_this3->x = _x34;
HXDLIN( 457)							if (!(_this3->_construct)) {
HXLINE( 457)								bool _hx_tmp29;
HXDLIN( 457)								if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 457)									_hx_tmp29 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE( 457)									_hx_tmp29 = false;
            								}
HXDLIN( 457)								if (_hx_tmp29) {
HXLINE( 457)									_this3->listen_x(_x34);
            								}
            							}
            						}
HXDLIN( 457)						{
HXLINE( 457)							_this3->y = _y34;
HXDLIN( 457)							if (!(_this3->_construct)) {
HXLINE( 457)								bool _hx_tmp30;
HXDLIN( 457)								if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 457)									_hx_tmp30 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE( 457)									_hx_tmp30 = false;
            								}
HXDLIN( 457)								if (_hx_tmp30) {
HXLINE( 457)									_this3->listen_y(_y34);
            								}
            							}
            						}
HXDLIN( 457)						{
HXLINE( 457)							_this3->z = _z34;
HXDLIN( 457)							if (!(_this3->_construct)) {
HXLINE( 457)								bool _hx_tmp31;
HXDLIN( 457)								if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 457)									_hx_tmp31 = !(_this3->ignore_listeners);
            								}
            								else {
HXLINE( 457)									_hx_tmp31 = false;
            								}
HXDLIN( 457)								if (_hx_tmp31) {
HXLINE( 457)									_this3->listen_z(_z34);
            								}
            							}
            						}
HXDLIN( 457)						_this3->ignore_listeners = prev3;
HXDLIN( 457)						bool _hx_tmp32;
HXDLIN( 457)						if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 457)							_hx_tmp32 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 457)							_hx_tmp32 = false;
            						}
HXDLIN( 457)						if (_hx_tmp32) {
HXLINE( 457)							_this3->listen_x(_this3->x);
            						}
HXDLIN( 457)						bool _hx_tmp33;
HXDLIN( 457)						if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 457)							_hx_tmp33 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 457)							_hx_tmp33 = false;
            						}
HXDLIN( 457)						if (_hx_tmp33) {
HXLINE( 457)							_this3->listen_y(_this3->y);
            						}
HXDLIN( 457)						bool _hx_tmp34;
HXDLIN( 457)						if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 457)							_hx_tmp34 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 457)							_hx_tmp34 = false;
            						}
HXDLIN( 457)						if (_hx_tmp34) {
HXLINE( 457)							_this3->listen_z(_this3->z);
            						}
            					}
            				}
HXDLIN( 457)				bool _hx_tmp35;
HXDLIN( 457)				if (hx::IsNotNull( this->listen_w )) {
HXLINE( 457)					_hx_tmp35 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 457)					_hx_tmp35 = false;
            				}
HXDLIN( 457)				if (_hx_tmp35) {
HXLINE( 457)					this->listen_w(this->w);
            				}
            			}
            		}
HXLINE( 459)		this->ignore_euler = false;
HXLINE( 461)		bool _hx_tmp36;
HXDLIN( 461)		bool _hx_tmp37;
HXDLIN( 461)		if (hx::IsNotNull( this->euler )) {
HXLINE( 461)			_hx_tmp37 = this->ignore_euler;
            		}
            		else {
HXLINE( 461)			_hx_tmp37 = true;
            		}
HXDLIN( 461)		if (!(_hx_tmp37)) {
HXLINE( 461)			_hx_tmp36 = this->_construct;
            		}
            		else {
HXLINE( 461)			_hx_tmp36 = true;
            		}
HXDLIN( 461)		if (!(_hx_tmp36)) {
HXLINE( 461)			 ::phoenix::Vector _this4 = this->euler;
HXDLIN( 461)			int order4 = (int)0;
HXDLIN( 461)			Float sqx4 = (this->x * this->x);
HXDLIN( 461)			Float sqy4 = (this->y * this->y);
HXDLIN( 461)			Float sqz4 = (this->z * this->z);
HXDLIN( 461)			Float sqw4 = (this->w * this->w);
HXDLIN( 461)			Float _x45 = _this4->x;
HXDLIN( 461)			Float _y45 = _this4->y;
HXDLIN( 461)			Float _z45 = _this4->z;
HXDLIN( 461)			if ((order4 == (int)0)) {
HXLINE( 461)				Float _x46 = (this->x * this->w);
HXDLIN( 461)				Float _x47 = ((int)2 * (_x46 - (this->y * this->z)));
HXDLIN( 461)				_x45 = ::Math_obj::atan2(_x47,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 461)				Float value48 = (this->x * this->z);
HXDLIN( 461)				Float value49 = ((int)2 * (value48 + (this->y * this->w)));
HXDLIN( 461)				Float _y46;
HXDLIN( 461)				if ((value49 < (int)-1)) {
HXLINE( 461)					_y46 = (int)-1;
            				}
            				else {
HXLINE( 461)					if ((value49 > (int)1)) {
HXLINE( 461)						_y46 = (int)1;
            					}
            					else {
HXLINE( 461)						_y46 = value49;
            					}
            				}
HXDLIN( 461)				_y45 = ::Math_obj::asin(_y46);
HXDLIN( 461)				Float _z46 = (this->z * this->w);
HXDLIN( 461)				Float _z47 = ((int)2 * (_z46 - (this->x * this->y)));
HXDLIN( 461)				_z45 = ::Math_obj::atan2(_z47,(((sqw4 + sqx4) - sqy4) - sqz4));
            			}
            			else {
HXLINE( 461)				if ((order4 == (int)1)) {
HXLINE( 461)					Float value50 = (this->x * this->w);
HXDLIN( 461)					Float value51 = ((int)2 * (value50 - (this->y * this->z)));
HXDLIN( 461)					Float _x48;
HXDLIN( 461)					if ((value51 < (int)-1)) {
HXLINE( 461)						_x48 = (int)-1;
            					}
            					else {
HXLINE( 461)						if ((value51 > (int)1)) {
HXLINE( 461)							_x48 = (int)1;
            						}
            						else {
HXLINE( 461)							_x48 = value51;
            						}
            					}
HXDLIN( 461)					_x45 = ::Math_obj::asin(_x48);
HXDLIN( 461)					Float _y47 = (this->x * this->z);
HXDLIN( 461)					Float _y48 = ((int)2 * (_y47 + (this->y * this->w)));
HXDLIN( 461)					_y45 = ::Math_obj::atan2(_y48,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 461)					Float _z48 = (this->x * this->y);
HXDLIN( 461)					Float _z49 = ((int)2 * (_z48 + (this->z * this->w)));
HXDLIN( 461)					_z45 = ::Math_obj::atan2(_z49,(((sqw4 - sqx4) + sqy4) - sqz4));
            				}
            				else {
HXLINE( 461)					if ((order4 == (int)2)) {
HXLINE( 461)						Float value52 = (this->x * this->w);
HXDLIN( 461)						Float value53 = ((int)2 * (value52 + (this->y * this->z)));
HXDLIN( 461)						Float _x49;
HXDLIN( 461)						if ((value53 < (int)-1)) {
HXLINE( 461)							_x49 = (int)-1;
            						}
            						else {
HXLINE( 461)							if ((value53 > (int)1)) {
HXLINE( 461)								_x49 = (int)1;
            							}
            							else {
HXLINE( 461)								_x49 = value53;
            							}
            						}
HXDLIN( 461)						_x45 = ::Math_obj::asin(_x49);
HXDLIN( 461)						Float _y49 = (this->y * this->w);
HXDLIN( 461)						Float _y50 = ((int)2 * (_y49 - (this->z * this->x)));
HXDLIN( 461)						_y45 = ::Math_obj::atan2(_y50,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 461)						Float _z50 = (this->z * this->w);
HXDLIN( 461)						Float _z51 = ((int)2 * (_z50 - (this->x * this->y)));
HXDLIN( 461)						_z45 = ::Math_obj::atan2(_z51,(((sqw4 - sqx4) + sqy4) - sqz4));
            					}
            					else {
HXLINE( 461)						if ((order4 == (int)3)) {
HXLINE( 461)							Float _x50 = (this->x * this->w);
HXDLIN( 461)							Float _x51 = ((int)2 * (_x50 + (this->z * this->y)));
HXDLIN( 461)							_x45 = ::Math_obj::atan2(_x51,(((sqw4 - sqx4) - sqy4) + sqz4));
HXDLIN( 461)							Float value54 = (this->y * this->w);
HXDLIN( 461)							Float value55 = ((int)2 * (value54 - (this->x * this->z)));
HXDLIN( 461)							Float _y51;
HXDLIN( 461)							if ((value55 < (int)-1)) {
HXLINE( 461)								_y51 = (int)-1;
            							}
            							else {
HXLINE( 461)								if ((value55 > (int)1)) {
HXLINE( 461)									_y51 = (int)1;
            								}
            								else {
HXLINE( 461)									_y51 = value55;
            								}
            							}
HXDLIN( 461)							_y45 = ::Math_obj::asin(_y51);
HXDLIN( 461)							Float _z52 = (this->x * this->y);
HXDLIN( 461)							Float _z53 = ((int)2 * (_z52 + (this->z * this->w)));
HXDLIN( 461)							_z45 = ::Math_obj::atan2(_z53,(((sqw4 + sqx4) - sqy4) - sqz4));
            						}
            						else {
HXLINE( 461)							if ((order4 == (int)4)) {
HXLINE( 461)								Float _x52 = (this->x * this->w);
HXDLIN( 461)								Float _x53 = ((int)2 * (_x52 - (this->z * this->y)));
HXDLIN( 461)								_x45 = ::Math_obj::atan2(_x53,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 461)								Float _y52 = (this->y * this->w);
HXDLIN( 461)								Float _y53 = ((int)2 * (_y52 - (this->x * this->z)));
HXDLIN( 461)								_y45 = ::Math_obj::atan2(_y53,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 461)								Float value56 = (this->x * this->y);
HXDLIN( 461)								Float value57 = ((int)2 * (value56 + (this->z * this->w)));
HXDLIN( 461)								Float _z54;
HXDLIN( 461)								if ((value57 < (int)-1)) {
HXLINE( 461)									_z54 = (int)-1;
            								}
            								else {
HXLINE( 461)									if ((value57 > (int)1)) {
HXLINE( 461)										_z54 = (int)1;
            									}
            									else {
HXLINE( 461)										_z54 = value57;
            									}
            								}
HXDLIN( 461)								_z45 = ::Math_obj::asin(_z54);
            							}
            							else {
HXLINE( 461)								if ((order4 == (int)5)) {
HXLINE( 461)									Float _x54 = (this->x * this->w);
HXDLIN( 461)									Float _x55 = ((int)2 * (_x54 + (this->y * this->z)));
HXDLIN( 461)									_x45 = ::Math_obj::atan2(_x55,(((sqw4 - sqx4) + sqy4) - sqz4));
HXDLIN( 461)									Float _y54 = (this->x * this->z);
HXDLIN( 461)									Float _y55 = ((int)2 * (_y54 + (this->y * this->w)));
HXDLIN( 461)									_y45 = ::Math_obj::atan2(_y55,(((sqw4 + sqx4) - sqy4) - sqz4));
HXDLIN( 461)									Float value58 = (this->z * this->w);
HXDLIN( 461)									Float value59 = ((int)2 * (value58 - (this->x * this->y)));
HXDLIN( 461)									Float _z55;
HXDLIN( 461)									if ((value59 < (int)-1)) {
HXLINE( 461)										_z55 = (int)-1;
            									}
            									else {
HXLINE( 461)										if ((value59 > (int)1)) {
HXLINE( 461)											_z55 = (int)1;
            										}
            										else {
HXLINE( 461)											_z55 = value59;
            										}
            									}
HXDLIN( 461)									_z45 = ::Math_obj::asin(_z55);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 461)			{
HXLINE( 461)				bool prev4 = _this4->ignore_listeners;
HXDLIN( 461)				_this4->ignore_listeners = true;
HXDLIN( 461)				{
HXLINE( 461)					_this4->x = _x45;
HXDLIN( 461)					if (!(_this4->_construct)) {
HXLINE( 461)						bool _hx_tmp38;
HXDLIN( 461)						if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 461)							_hx_tmp38 = !(_this4->ignore_listeners);
            						}
            						else {
HXLINE( 461)							_hx_tmp38 = false;
            						}
HXDLIN( 461)						if (_hx_tmp38) {
HXLINE( 461)							_this4->listen_x(_x45);
            						}
            					}
            				}
HXDLIN( 461)				{
HXLINE( 461)					_this4->y = _y45;
HXDLIN( 461)					if (!(_this4->_construct)) {
HXLINE( 461)						bool _hx_tmp39;
HXDLIN( 461)						if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 461)							_hx_tmp39 = !(_this4->ignore_listeners);
            						}
            						else {
HXLINE( 461)							_hx_tmp39 = false;
            						}
HXDLIN( 461)						if (_hx_tmp39) {
HXLINE( 461)							_this4->listen_y(_y45);
            						}
            					}
            				}
HXDLIN( 461)				{
HXLINE( 461)					_this4->z = _z45;
HXDLIN( 461)					if (!(_this4->_construct)) {
HXLINE( 461)						bool _hx_tmp40;
HXDLIN( 461)						if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 461)							_hx_tmp40 = !(_this4->ignore_listeners);
            						}
            						else {
HXLINE( 461)							_hx_tmp40 = false;
            						}
HXDLIN( 461)						if (_hx_tmp40) {
HXLINE( 461)							_this4->listen_z(_z45);
            						}
            					}
            				}
HXDLIN( 461)				_this4->ignore_listeners = prev4;
HXDLIN( 461)				bool _hx_tmp41;
HXDLIN( 461)				if (hx::IsNotNull( _this4->listen_x )) {
HXLINE( 461)					_hx_tmp41 = !(_this4->ignore_listeners);
            				}
            				else {
HXLINE( 461)					_hx_tmp41 = false;
            				}
HXDLIN( 461)				if (_hx_tmp41) {
HXLINE( 461)					_this4->listen_x(_this4->x);
            				}
HXDLIN( 461)				bool _hx_tmp42;
HXDLIN( 461)				if (hx::IsNotNull( _this4->listen_y )) {
HXLINE( 461)					_hx_tmp42 = !(_this4->ignore_listeners);
            				}
            				else {
HXLINE( 461)					_hx_tmp42 = false;
            				}
HXDLIN( 461)				if (_hx_tmp42) {
HXLINE( 461)					_this4->listen_y(_this4->y);
            				}
HXDLIN( 461)				bool _hx_tmp43;
HXDLIN( 461)				if (hx::IsNotNull( _this4->listen_z )) {
HXLINE( 461)					_hx_tmp43 = !(_this4->ignore_listeners);
            				}
            				else {
HXLINE( 461)					_hx_tmp43 = false;
            				}
HXDLIN( 461)				if (_hx_tmp43) {
HXLINE( 461)					_this4->listen_z(_this4->z);
            				}
            			}
            		}
HXLINE( 463)		bool _hx_tmp44;
HXDLIN( 463)		if (hx::IsNotNull( this->listen_x )) {
HXLINE( 463)			_hx_tmp44 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 463)			_hx_tmp44 = false;
            		}
HXDLIN( 463)		if (_hx_tmp44) {
HXLINE( 463)			this->listen_x(this->x);
            		}
HXLINE( 464)		bool _hx_tmp45;
HXDLIN( 464)		if (hx::IsNotNull( this->listen_y )) {
HXLINE( 464)			_hx_tmp45 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 464)			_hx_tmp45 = false;
            		}
HXDLIN( 464)		if (_hx_tmp45) {
HXLINE( 464)			this->listen_y(this->y);
            		}
HXLINE( 465)		bool _hx_tmp46;
HXDLIN( 465)		if (hx::IsNotNull( this->listen_z )) {
HXLINE( 465)			_hx_tmp46 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 465)			_hx_tmp46 = false;
            		}
HXDLIN( 465)		if (_hx_tmp46) {
HXLINE( 465)			this->listen_z(this->z);
            		}
HXLINE( 466)		bool _hx_tmp47;
HXDLIN( 466)		if (hx::IsNotNull( this->listen_w )) {
HXLINE( 466)			_hx_tmp47 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 466)			_hx_tmp47 = false;
            		}
HXDLIN( 466)		if (_hx_tmp47) {
HXLINE( 466)			this->listen_w(this->w);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC4(Quaternion_obj,set_xyzw,(void))

void Quaternion_obj::set_xyz(Float _x,Float _y,Float _z){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_470_set_xyz)
HXLINE( 472)		this->ignore_euler = true;
HXLINE( 474)		{
HXLINE( 474)			this->x = _x;
HXDLIN( 474)			if (!(this->_construct)) {
HXLINE( 474)				bool _hx_tmp;
HXDLIN( 474)				bool _hx_tmp1;
HXDLIN( 474)				if (hx::IsNotNull( this->euler )) {
HXLINE( 474)					_hx_tmp1 = this->ignore_euler;
            				}
            				else {
HXLINE( 474)					_hx_tmp1 = true;
            				}
HXDLIN( 474)				if (!(_hx_tmp1)) {
HXLINE( 474)					_hx_tmp = this->_construct;
            				}
            				else {
HXLINE( 474)					_hx_tmp = true;
            				}
HXDLIN( 474)				if (!(_hx_tmp)) {
HXLINE( 474)					 ::phoenix::Vector _this = this->euler;
HXDLIN( 474)					int order = (int)0;
HXDLIN( 474)					Float sqx = (this->x * this->x);
HXDLIN( 474)					Float sqy = (this->y * this->y);
HXDLIN( 474)					Float sqz = (this->z * this->z);
HXDLIN( 474)					Float sqw = (this->w * this->w);
HXDLIN( 474)					Float _x1 = _this->x;
HXDLIN( 474)					Float _y1 = _this->y;
HXDLIN( 474)					Float _z1 = _this->z;
HXDLIN( 474)					if ((order == (int)0)) {
HXLINE( 474)						Float _x2 = (this->x * this->w);
HXDLIN( 474)						Float _x3 = ((int)2 * (_x2 - (this->y * this->z)));
HXDLIN( 474)						_x1 = ::Math_obj::atan2(_x3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 474)						Float value = (this->x * this->z);
HXDLIN( 474)						Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 474)						Float _y2;
HXDLIN( 474)						if ((value1 < (int)-1)) {
HXLINE( 474)							_y2 = (int)-1;
            						}
            						else {
HXLINE( 474)							if ((value1 > (int)1)) {
HXLINE( 474)								_y2 = (int)1;
            							}
            							else {
HXLINE( 474)								_y2 = value1;
            							}
            						}
HXDLIN( 474)						_y1 = ::Math_obj::asin(_y2);
HXDLIN( 474)						Float _z2 = (this->z * this->w);
HXDLIN( 474)						Float _z3 = ((int)2 * (_z2 - (this->x * this->y)));
HXDLIN( 474)						_z1 = ::Math_obj::atan2(_z3,(((sqw + sqx) - sqy) - sqz));
            					}
            					else {
HXLINE( 474)						if ((order == (int)1)) {
HXLINE( 474)							Float value2 = (this->x * this->w);
HXDLIN( 474)							Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 474)							Float _x4;
HXDLIN( 474)							if ((value3 < (int)-1)) {
HXLINE( 474)								_x4 = (int)-1;
            							}
            							else {
HXLINE( 474)								if ((value3 > (int)1)) {
HXLINE( 474)									_x4 = (int)1;
            								}
            								else {
HXLINE( 474)									_x4 = value3;
            								}
            							}
HXDLIN( 474)							_x1 = ::Math_obj::asin(_x4);
HXDLIN( 474)							Float _y3 = (this->x * this->z);
HXDLIN( 474)							Float _y4 = ((int)2 * (_y3 + (this->y * this->w)));
HXDLIN( 474)							_y1 = ::Math_obj::atan2(_y4,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 474)							Float _z4 = (this->x * this->y);
HXDLIN( 474)							Float _z5 = ((int)2 * (_z4 + (this->z * this->w)));
HXDLIN( 474)							_z1 = ::Math_obj::atan2(_z5,(((sqw - sqx) + sqy) - sqz));
            						}
            						else {
HXLINE( 474)							if ((order == (int)2)) {
HXLINE( 474)								Float value4 = (this->x * this->w);
HXDLIN( 474)								Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 474)								Float _x5;
HXDLIN( 474)								if ((value5 < (int)-1)) {
HXLINE( 474)									_x5 = (int)-1;
            								}
            								else {
HXLINE( 474)									if ((value5 > (int)1)) {
HXLINE( 474)										_x5 = (int)1;
            									}
            									else {
HXLINE( 474)										_x5 = value5;
            									}
            								}
HXDLIN( 474)								_x1 = ::Math_obj::asin(_x5);
HXDLIN( 474)								Float _y5 = (this->y * this->w);
HXDLIN( 474)								Float _y6 = ((int)2 * (_y5 - (this->z * this->x)));
HXDLIN( 474)								_y1 = ::Math_obj::atan2(_y6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 474)								Float _z6 = (this->z * this->w);
HXDLIN( 474)								Float _z7 = ((int)2 * (_z6 - (this->x * this->y)));
HXDLIN( 474)								_z1 = ::Math_obj::atan2(_z7,(((sqw - sqx) + sqy) - sqz));
            							}
            							else {
HXLINE( 474)								if ((order == (int)3)) {
HXLINE( 474)									Float _x6 = (this->x * this->w);
HXDLIN( 474)									Float _x7 = ((int)2 * (_x6 + (this->z * this->y)));
HXDLIN( 474)									_x1 = ::Math_obj::atan2(_x7,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 474)									Float value6 = (this->y * this->w);
HXDLIN( 474)									Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 474)									Float _y7;
HXDLIN( 474)									if ((value7 < (int)-1)) {
HXLINE( 474)										_y7 = (int)-1;
            									}
            									else {
HXLINE( 474)										if ((value7 > (int)1)) {
HXLINE( 474)											_y7 = (int)1;
            										}
            										else {
HXLINE( 474)											_y7 = value7;
            										}
            									}
HXDLIN( 474)									_y1 = ::Math_obj::asin(_y7);
HXDLIN( 474)									Float _z8 = (this->x * this->y);
HXDLIN( 474)									Float _z9 = ((int)2 * (_z8 + (this->z * this->w)));
HXDLIN( 474)									_z1 = ::Math_obj::atan2(_z9,(((sqw + sqx) - sqy) - sqz));
            								}
            								else {
HXLINE( 474)									if ((order == (int)4)) {
HXLINE( 474)										Float _x8 = (this->x * this->w);
HXDLIN( 474)										Float _x9 = ((int)2 * (_x8 - (this->z * this->y)));
HXDLIN( 474)										_x1 = ::Math_obj::atan2(_x9,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 474)										Float _y8 = (this->y * this->w);
HXDLIN( 474)										Float _y9 = ((int)2 * (_y8 - (this->x * this->z)));
HXDLIN( 474)										_y1 = ::Math_obj::atan2(_y9,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 474)										Float value8 = (this->x * this->y);
HXDLIN( 474)										Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 474)										Float _z10;
HXDLIN( 474)										if ((value9 < (int)-1)) {
HXLINE( 474)											_z10 = (int)-1;
            										}
            										else {
HXLINE( 474)											if ((value9 > (int)1)) {
HXLINE( 474)												_z10 = (int)1;
            											}
            											else {
HXLINE( 474)												_z10 = value9;
            											}
            										}
HXDLIN( 474)										_z1 = ::Math_obj::asin(_z10);
            									}
            									else {
HXLINE( 474)										if ((order == (int)5)) {
HXLINE( 474)											Float _x10 = (this->x * this->w);
HXDLIN( 474)											Float _x11 = ((int)2 * (_x10 + (this->y * this->z)));
HXDLIN( 474)											_x1 = ::Math_obj::atan2(_x11,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 474)											Float _y10 = (this->x * this->z);
HXDLIN( 474)											Float _y11 = ((int)2 * (_y10 + (this->y * this->w)));
HXDLIN( 474)											_y1 = ::Math_obj::atan2(_y11,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 474)											Float value10 = (this->z * this->w);
HXDLIN( 474)											Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 474)											Float _z11;
HXDLIN( 474)											if ((value11 < (int)-1)) {
HXLINE( 474)												_z11 = (int)-1;
            											}
            											else {
HXLINE( 474)												if ((value11 > (int)1)) {
HXLINE( 474)													_z11 = (int)1;
            												}
            												else {
HXLINE( 474)													_z11 = value11;
            												}
            											}
HXDLIN( 474)											_z1 = ::Math_obj::asin(_z11);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 474)					{
HXLINE( 474)						bool prev = _this->ignore_listeners;
HXDLIN( 474)						_this->ignore_listeners = true;
HXDLIN( 474)						{
HXLINE( 474)							_this->x = _x1;
HXDLIN( 474)							if (!(_this->_construct)) {
HXLINE( 474)								bool _hx_tmp2;
HXDLIN( 474)								if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 474)									_hx_tmp2 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 474)									_hx_tmp2 = false;
            								}
HXDLIN( 474)								if (_hx_tmp2) {
HXLINE( 474)									_this->listen_x(_x1);
            								}
            							}
            						}
HXDLIN( 474)						{
HXLINE( 474)							_this->y = _y1;
HXDLIN( 474)							if (!(_this->_construct)) {
HXLINE( 474)								bool _hx_tmp3;
HXDLIN( 474)								if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 474)									_hx_tmp3 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 474)									_hx_tmp3 = false;
            								}
HXDLIN( 474)								if (_hx_tmp3) {
HXLINE( 474)									_this->listen_y(_y1);
            								}
            							}
            						}
HXDLIN( 474)						{
HXLINE( 474)							_this->z = _z1;
HXDLIN( 474)							if (!(_this->_construct)) {
HXLINE( 474)								bool _hx_tmp4;
HXDLIN( 474)								if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 474)									_hx_tmp4 = !(_this->ignore_listeners);
            								}
            								else {
HXLINE( 474)									_hx_tmp4 = false;
            								}
HXDLIN( 474)								if (_hx_tmp4) {
HXLINE( 474)									_this->listen_z(_z1);
            								}
            							}
            						}
HXDLIN( 474)						_this->ignore_listeners = prev;
HXDLIN( 474)						bool _hx_tmp5;
HXDLIN( 474)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 474)							_hx_tmp5 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 474)							_hx_tmp5 = false;
            						}
HXDLIN( 474)						if (_hx_tmp5) {
HXLINE( 474)							_this->listen_x(_this->x);
            						}
HXDLIN( 474)						bool _hx_tmp6;
HXDLIN( 474)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 474)							_hx_tmp6 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 474)							_hx_tmp6 = false;
            						}
HXDLIN( 474)						if (_hx_tmp6) {
HXLINE( 474)							_this->listen_y(_this->y);
            						}
HXDLIN( 474)						bool _hx_tmp7;
HXDLIN( 474)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 474)							_hx_tmp7 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 474)							_hx_tmp7 = false;
            						}
HXDLIN( 474)						if (_hx_tmp7) {
HXLINE( 474)							_this->listen_z(_this->z);
            						}
            					}
            				}
HXDLIN( 474)				bool _hx_tmp8;
HXDLIN( 474)				if (hx::IsNotNull( this->listen_x )) {
HXLINE( 474)					_hx_tmp8 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 474)					_hx_tmp8 = false;
            				}
HXDLIN( 474)				if (_hx_tmp8) {
HXLINE( 474)					this->listen_x(this->x);
            				}
            			}
            		}
HXLINE( 475)		{
HXLINE( 475)			this->y = _y;
HXDLIN( 475)			if (!(this->_construct)) {
HXLINE( 475)				bool _hx_tmp9;
HXDLIN( 475)				bool _hx_tmp10;
HXDLIN( 475)				if (hx::IsNotNull( this->euler )) {
HXLINE( 475)					_hx_tmp10 = this->ignore_euler;
            				}
            				else {
HXLINE( 475)					_hx_tmp10 = true;
            				}
HXDLIN( 475)				if (!(_hx_tmp10)) {
HXLINE( 475)					_hx_tmp9 = this->_construct;
            				}
            				else {
HXLINE( 475)					_hx_tmp9 = true;
            				}
HXDLIN( 475)				if (!(_hx_tmp9)) {
HXLINE( 475)					 ::phoenix::Vector _this1 = this->euler;
HXDLIN( 475)					int order1 = (int)0;
HXDLIN( 475)					Float sqx1 = (this->x * this->x);
HXDLIN( 475)					Float sqy1 = (this->y * this->y);
HXDLIN( 475)					Float sqz1 = (this->z * this->z);
HXDLIN( 475)					Float sqw1 = (this->w * this->w);
HXDLIN( 475)					Float _x12 = _this1->x;
HXDLIN( 475)					Float _y12 = _this1->y;
HXDLIN( 475)					Float _z12 = _this1->z;
HXDLIN( 475)					if ((order1 == (int)0)) {
HXLINE( 475)						Float _x13 = (this->x * this->w);
HXDLIN( 475)						Float _x14 = ((int)2 * (_x13 - (this->y * this->z)));
HXDLIN( 475)						_x12 = ::Math_obj::atan2(_x14,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 475)						Float value12 = (this->x * this->z);
HXDLIN( 475)						Float value13 = ((int)2 * (value12 + (this->y * this->w)));
HXDLIN( 475)						Float _y13;
HXDLIN( 475)						if ((value13 < (int)-1)) {
HXLINE( 475)							_y13 = (int)-1;
            						}
            						else {
HXLINE( 475)							if ((value13 > (int)1)) {
HXLINE( 475)								_y13 = (int)1;
            							}
            							else {
HXLINE( 475)								_y13 = value13;
            							}
            						}
HXDLIN( 475)						_y12 = ::Math_obj::asin(_y13);
HXDLIN( 475)						Float _z13 = (this->z * this->w);
HXDLIN( 475)						Float _z14 = ((int)2 * (_z13 - (this->x * this->y)));
HXDLIN( 475)						_z12 = ::Math_obj::atan2(_z14,(((sqw1 + sqx1) - sqy1) - sqz1));
            					}
            					else {
HXLINE( 475)						if ((order1 == (int)1)) {
HXLINE( 475)							Float value14 = (this->x * this->w);
HXDLIN( 475)							Float value15 = ((int)2 * (value14 - (this->y * this->z)));
HXDLIN( 475)							Float _x15;
HXDLIN( 475)							if ((value15 < (int)-1)) {
HXLINE( 475)								_x15 = (int)-1;
            							}
            							else {
HXLINE( 475)								if ((value15 > (int)1)) {
HXLINE( 475)									_x15 = (int)1;
            								}
            								else {
HXLINE( 475)									_x15 = value15;
            								}
            							}
HXDLIN( 475)							_x12 = ::Math_obj::asin(_x15);
HXDLIN( 475)							Float _y14 = (this->x * this->z);
HXDLIN( 475)							Float _y15 = ((int)2 * (_y14 + (this->y * this->w)));
HXDLIN( 475)							_y12 = ::Math_obj::atan2(_y15,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 475)							Float _z15 = (this->x * this->y);
HXDLIN( 475)							Float _z16 = ((int)2 * (_z15 + (this->z * this->w)));
HXDLIN( 475)							_z12 = ::Math_obj::atan2(_z16,(((sqw1 - sqx1) + sqy1) - sqz1));
            						}
            						else {
HXLINE( 475)							if ((order1 == (int)2)) {
HXLINE( 475)								Float value16 = (this->x * this->w);
HXDLIN( 475)								Float value17 = ((int)2 * (value16 + (this->y * this->z)));
HXDLIN( 475)								Float _x16;
HXDLIN( 475)								if ((value17 < (int)-1)) {
HXLINE( 475)									_x16 = (int)-1;
            								}
            								else {
HXLINE( 475)									if ((value17 > (int)1)) {
HXLINE( 475)										_x16 = (int)1;
            									}
            									else {
HXLINE( 475)										_x16 = value17;
            									}
            								}
HXDLIN( 475)								_x12 = ::Math_obj::asin(_x16);
HXDLIN( 475)								Float _y16 = (this->y * this->w);
HXDLIN( 475)								Float _y17 = ((int)2 * (_y16 - (this->z * this->x)));
HXDLIN( 475)								_y12 = ::Math_obj::atan2(_y17,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 475)								Float _z17 = (this->z * this->w);
HXDLIN( 475)								Float _z18 = ((int)2 * (_z17 - (this->x * this->y)));
HXDLIN( 475)								_z12 = ::Math_obj::atan2(_z18,(((sqw1 - sqx1) + sqy1) - sqz1));
            							}
            							else {
HXLINE( 475)								if ((order1 == (int)3)) {
HXLINE( 475)									Float _x17 = (this->x * this->w);
HXDLIN( 475)									Float _x18 = ((int)2 * (_x17 + (this->z * this->y)));
HXDLIN( 475)									_x12 = ::Math_obj::atan2(_x18,(((sqw1 - sqx1) - sqy1) + sqz1));
HXDLIN( 475)									Float value18 = (this->y * this->w);
HXDLIN( 475)									Float value19 = ((int)2 * (value18 - (this->x * this->z)));
HXDLIN( 475)									Float _y18;
HXDLIN( 475)									if ((value19 < (int)-1)) {
HXLINE( 475)										_y18 = (int)-1;
            									}
            									else {
HXLINE( 475)										if ((value19 > (int)1)) {
HXLINE( 475)											_y18 = (int)1;
            										}
            										else {
HXLINE( 475)											_y18 = value19;
            										}
            									}
HXDLIN( 475)									_y12 = ::Math_obj::asin(_y18);
HXDLIN( 475)									Float _z19 = (this->x * this->y);
HXDLIN( 475)									Float _z20 = ((int)2 * (_z19 + (this->z * this->w)));
HXDLIN( 475)									_z12 = ::Math_obj::atan2(_z20,(((sqw1 + sqx1) - sqy1) - sqz1));
            								}
            								else {
HXLINE( 475)									if ((order1 == (int)4)) {
HXLINE( 475)										Float _x19 = (this->x * this->w);
HXDLIN( 475)										Float _x20 = ((int)2 * (_x19 - (this->z * this->y)));
HXDLIN( 475)										_x12 = ::Math_obj::atan2(_x20,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 475)										Float _y19 = (this->y * this->w);
HXDLIN( 475)										Float _y20 = ((int)2 * (_y19 - (this->x * this->z)));
HXDLIN( 475)										_y12 = ::Math_obj::atan2(_y20,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 475)										Float value20 = (this->x * this->y);
HXDLIN( 475)										Float value21 = ((int)2 * (value20 + (this->z * this->w)));
HXDLIN( 475)										Float _z21;
HXDLIN( 475)										if ((value21 < (int)-1)) {
HXLINE( 475)											_z21 = (int)-1;
            										}
            										else {
HXLINE( 475)											if ((value21 > (int)1)) {
HXLINE( 475)												_z21 = (int)1;
            											}
            											else {
HXLINE( 475)												_z21 = value21;
            											}
            										}
HXDLIN( 475)										_z12 = ::Math_obj::asin(_z21);
            									}
            									else {
HXLINE( 475)										if ((order1 == (int)5)) {
HXLINE( 475)											Float _x21 = (this->x * this->w);
HXDLIN( 475)											Float _x22 = ((int)2 * (_x21 + (this->y * this->z)));
HXDLIN( 475)											_x12 = ::Math_obj::atan2(_x22,(((sqw1 - sqx1) + sqy1) - sqz1));
HXDLIN( 475)											Float _y21 = (this->x * this->z);
HXDLIN( 475)											Float _y22 = ((int)2 * (_y21 + (this->y * this->w)));
HXDLIN( 475)											_y12 = ::Math_obj::atan2(_y22,(((sqw1 + sqx1) - sqy1) - sqz1));
HXDLIN( 475)											Float value22 = (this->z * this->w);
HXDLIN( 475)											Float value23 = ((int)2 * (value22 - (this->x * this->y)));
HXDLIN( 475)											Float _z22;
HXDLIN( 475)											if ((value23 < (int)-1)) {
HXLINE( 475)												_z22 = (int)-1;
            											}
            											else {
HXLINE( 475)												if ((value23 > (int)1)) {
HXLINE( 475)													_z22 = (int)1;
            												}
            												else {
HXLINE( 475)													_z22 = value23;
            												}
            											}
HXDLIN( 475)											_z12 = ::Math_obj::asin(_z22);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 475)					{
HXLINE( 475)						bool prev1 = _this1->ignore_listeners;
HXDLIN( 475)						_this1->ignore_listeners = true;
HXDLIN( 475)						{
HXLINE( 475)							_this1->x = _x12;
HXDLIN( 475)							if (!(_this1->_construct)) {
HXLINE( 475)								bool _hx_tmp11;
HXDLIN( 475)								if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 475)									_hx_tmp11 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 475)									_hx_tmp11 = false;
            								}
HXDLIN( 475)								if (_hx_tmp11) {
HXLINE( 475)									_this1->listen_x(_x12);
            								}
            							}
            						}
HXDLIN( 475)						{
HXLINE( 475)							_this1->y = _y12;
HXDLIN( 475)							if (!(_this1->_construct)) {
HXLINE( 475)								bool _hx_tmp12;
HXDLIN( 475)								if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 475)									_hx_tmp12 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 475)									_hx_tmp12 = false;
            								}
HXDLIN( 475)								if (_hx_tmp12) {
HXLINE( 475)									_this1->listen_y(_y12);
            								}
            							}
            						}
HXDLIN( 475)						{
HXLINE( 475)							_this1->z = _z12;
HXDLIN( 475)							if (!(_this1->_construct)) {
HXLINE( 475)								bool _hx_tmp13;
HXDLIN( 475)								if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 475)									_hx_tmp13 = !(_this1->ignore_listeners);
            								}
            								else {
HXLINE( 475)									_hx_tmp13 = false;
            								}
HXDLIN( 475)								if (_hx_tmp13) {
HXLINE( 475)									_this1->listen_z(_z12);
            								}
            							}
            						}
HXDLIN( 475)						_this1->ignore_listeners = prev1;
HXDLIN( 475)						bool _hx_tmp14;
HXDLIN( 475)						if (hx::IsNotNull( _this1->listen_x )) {
HXLINE( 475)							_hx_tmp14 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 475)							_hx_tmp14 = false;
            						}
HXDLIN( 475)						if (_hx_tmp14) {
HXLINE( 475)							_this1->listen_x(_this1->x);
            						}
HXDLIN( 475)						bool _hx_tmp15;
HXDLIN( 475)						if (hx::IsNotNull( _this1->listen_y )) {
HXLINE( 475)							_hx_tmp15 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 475)							_hx_tmp15 = false;
            						}
HXDLIN( 475)						if (_hx_tmp15) {
HXLINE( 475)							_this1->listen_y(_this1->y);
            						}
HXDLIN( 475)						bool _hx_tmp16;
HXDLIN( 475)						if (hx::IsNotNull( _this1->listen_z )) {
HXLINE( 475)							_hx_tmp16 = !(_this1->ignore_listeners);
            						}
            						else {
HXLINE( 475)							_hx_tmp16 = false;
            						}
HXDLIN( 475)						if (_hx_tmp16) {
HXLINE( 475)							_this1->listen_z(_this1->z);
            						}
            					}
            				}
HXDLIN( 475)				bool _hx_tmp17;
HXDLIN( 475)				if (hx::IsNotNull( this->listen_y )) {
HXLINE( 475)					_hx_tmp17 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 475)					_hx_tmp17 = false;
            				}
HXDLIN( 475)				if (_hx_tmp17) {
HXLINE( 475)					this->listen_y(this->y);
            				}
            			}
            		}
HXLINE( 476)		{
HXLINE( 476)			this->z = _z;
HXDLIN( 476)			if (!(this->_construct)) {
HXLINE( 476)				bool _hx_tmp18;
HXDLIN( 476)				bool _hx_tmp19;
HXDLIN( 476)				if (hx::IsNotNull( this->euler )) {
HXLINE( 476)					_hx_tmp19 = this->ignore_euler;
            				}
            				else {
HXLINE( 476)					_hx_tmp19 = true;
            				}
HXDLIN( 476)				if (!(_hx_tmp19)) {
HXLINE( 476)					_hx_tmp18 = this->_construct;
            				}
            				else {
HXLINE( 476)					_hx_tmp18 = true;
            				}
HXDLIN( 476)				if (!(_hx_tmp18)) {
HXLINE( 476)					 ::phoenix::Vector _this2 = this->euler;
HXDLIN( 476)					int order2 = (int)0;
HXDLIN( 476)					Float sqx2 = (this->x * this->x);
HXDLIN( 476)					Float sqy2 = (this->y * this->y);
HXDLIN( 476)					Float sqz2 = (this->z * this->z);
HXDLIN( 476)					Float sqw2 = (this->w * this->w);
HXDLIN( 476)					Float _x23 = _this2->x;
HXDLIN( 476)					Float _y23 = _this2->y;
HXDLIN( 476)					Float _z23 = _this2->z;
HXDLIN( 476)					if ((order2 == (int)0)) {
HXLINE( 476)						Float _x24 = (this->x * this->w);
HXDLIN( 476)						Float _x25 = ((int)2 * (_x24 - (this->y * this->z)));
HXDLIN( 476)						_x23 = ::Math_obj::atan2(_x25,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 476)						Float value24 = (this->x * this->z);
HXDLIN( 476)						Float value25 = ((int)2 * (value24 + (this->y * this->w)));
HXDLIN( 476)						Float _y24;
HXDLIN( 476)						if ((value25 < (int)-1)) {
HXLINE( 476)							_y24 = (int)-1;
            						}
            						else {
HXLINE( 476)							if ((value25 > (int)1)) {
HXLINE( 476)								_y24 = (int)1;
            							}
            							else {
HXLINE( 476)								_y24 = value25;
            							}
            						}
HXDLIN( 476)						_y23 = ::Math_obj::asin(_y24);
HXDLIN( 476)						Float _z24 = (this->z * this->w);
HXDLIN( 476)						Float _z25 = ((int)2 * (_z24 - (this->x * this->y)));
HXDLIN( 476)						_z23 = ::Math_obj::atan2(_z25,(((sqw2 + sqx2) - sqy2) - sqz2));
            					}
            					else {
HXLINE( 476)						if ((order2 == (int)1)) {
HXLINE( 476)							Float value26 = (this->x * this->w);
HXDLIN( 476)							Float value27 = ((int)2 * (value26 - (this->y * this->z)));
HXDLIN( 476)							Float _x26;
HXDLIN( 476)							if ((value27 < (int)-1)) {
HXLINE( 476)								_x26 = (int)-1;
            							}
            							else {
HXLINE( 476)								if ((value27 > (int)1)) {
HXLINE( 476)									_x26 = (int)1;
            								}
            								else {
HXLINE( 476)									_x26 = value27;
            								}
            							}
HXDLIN( 476)							_x23 = ::Math_obj::asin(_x26);
HXDLIN( 476)							Float _y25 = (this->x * this->z);
HXDLIN( 476)							Float _y26 = ((int)2 * (_y25 + (this->y * this->w)));
HXDLIN( 476)							_y23 = ::Math_obj::atan2(_y26,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 476)							Float _z26 = (this->x * this->y);
HXDLIN( 476)							Float _z27 = ((int)2 * (_z26 + (this->z * this->w)));
HXDLIN( 476)							_z23 = ::Math_obj::atan2(_z27,(((sqw2 - sqx2) + sqy2) - sqz2));
            						}
            						else {
HXLINE( 476)							if ((order2 == (int)2)) {
HXLINE( 476)								Float value28 = (this->x * this->w);
HXDLIN( 476)								Float value29 = ((int)2 * (value28 + (this->y * this->z)));
HXDLIN( 476)								Float _x27;
HXDLIN( 476)								if ((value29 < (int)-1)) {
HXLINE( 476)									_x27 = (int)-1;
            								}
            								else {
HXLINE( 476)									if ((value29 > (int)1)) {
HXLINE( 476)										_x27 = (int)1;
            									}
            									else {
HXLINE( 476)										_x27 = value29;
            									}
            								}
HXDLIN( 476)								_x23 = ::Math_obj::asin(_x27);
HXDLIN( 476)								Float _y27 = (this->y * this->w);
HXDLIN( 476)								Float _y28 = ((int)2 * (_y27 - (this->z * this->x)));
HXDLIN( 476)								_y23 = ::Math_obj::atan2(_y28,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 476)								Float _z28 = (this->z * this->w);
HXDLIN( 476)								Float _z29 = ((int)2 * (_z28 - (this->x * this->y)));
HXDLIN( 476)								_z23 = ::Math_obj::atan2(_z29,(((sqw2 - sqx2) + sqy2) - sqz2));
            							}
            							else {
HXLINE( 476)								if ((order2 == (int)3)) {
HXLINE( 476)									Float _x28 = (this->x * this->w);
HXDLIN( 476)									Float _x29 = ((int)2 * (_x28 + (this->z * this->y)));
HXDLIN( 476)									_x23 = ::Math_obj::atan2(_x29,(((sqw2 - sqx2) - sqy2) + sqz2));
HXDLIN( 476)									Float value30 = (this->y * this->w);
HXDLIN( 476)									Float value31 = ((int)2 * (value30 - (this->x * this->z)));
HXDLIN( 476)									Float _y29;
HXDLIN( 476)									if ((value31 < (int)-1)) {
HXLINE( 476)										_y29 = (int)-1;
            									}
            									else {
HXLINE( 476)										if ((value31 > (int)1)) {
HXLINE( 476)											_y29 = (int)1;
            										}
            										else {
HXLINE( 476)											_y29 = value31;
            										}
            									}
HXDLIN( 476)									_y23 = ::Math_obj::asin(_y29);
HXDLIN( 476)									Float _z30 = (this->x * this->y);
HXDLIN( 476)									Float _z31 = ((int)2 * (_z30 + (this->z * this->w)));
HXDLIN( 476)									_z23 = ::Math_obj::atan2(_z31,(((sqw2 + sqx2) - sqy2) - sqz2));
            								}
            								else {
HXLINE( 476)									if ((order2 == (int)4)) {
HXLINE( 476)										Float _x30 = (this->x * this->w);
HXDLIN( 476)										Float _x31 = ((int)2 * (_x30 - (this->z * this->y)));
HXDLIN( 476)										_x23 = ::Math_obj::atan2(_x31,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 476)										Float _y30 = (this->y * this->w);
HXDLIN( 476)										Float _y31 = ((int)2 * (_y30 - (this->x * this->z)));
HXDLIN( 476)										_y23 = ::Math_obj::atan2(_y31,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 476)										Float value32 = (this->x * this->y);
HXDLIN( 476)										Float value33 = ((int)2 * (value32 + (this->z * this->w)));
HXDLIN( 476)										Float _z32;
HXDLIN( 476)										if ((value33 < (int)-1)) {
HXLINE( 476)											_z32 = (int)-1;
            										}
            										else {
HXLINE( 476)											if ((value33 > (int)1)) {
HXLINE( 476)												_z32 = (int)1;
            											}
            											else {
HXLINE( 476)												_z32 = value33;
            											}
            										}
HXDLIN( 476)										_z23 = ::Math_obj::asin(_z32);
            									}
            									else {
HXLINE( 476)										if ((order2 == (int)5)) {
HXLINE( 476)											Float _x32 = (this->x * this->w);
HXDLIN( 476)											Float _x33 = ((int)2 * (_x32 + (this->y * this->z)));
HXDLIN( 476)											_x23 = ::Math_obj::atan2(_x33,(((sqw2 - sqx2) + sqy2) - sqz2));
HXDLIN( 476)											Float _y32 = (this->x * this->z);
HXDLIN( 476)											Float _y33 = ((int)2 * (_y32 + (this->y * this->w)));
HXDLIN( 476)											_y23 = ::Math_obj::atan2(_y33,(((sqw2 + sqx2) - sqy2) - sqz2));
HXDLIN( 476)											Float value34 = (this->z * this->w);
HXDLIN( 476)											Float value35 = ((int)2 * (value34 - (this->x * this->y)));
HXDLIN( 476)											Float _z33;
HXDLIN( 476)											if ((value35 < (int)-1)) {
HXLINE( 476)												_z33 = (int)-1;
            											}
            											else {
HXLINE( 476)												if ((value35 > (int)1)) {
HXLINE( 476)													_z33 = (int)1;
            												}
            												else {
HXLINE( 476)													_z33 = value35;
            												}
            											}
HXDLIN( 476)											_z23 = ::Math_obj::asin(_z33);
            										}
            									}
            								}
            							}
            						}
            					}
HXDLIN( 476)					{
HXLINE( 476)						bool prev2 = _this2->ignore_listeners;
HXDLIN( 476)						_this2->ignore_listeners = true;
HXDLIN( 476)						{
HXLINE( 476)							_this2->x = _x23;
HXDLIN( 476)							if (!(_this2->_construct)) {
HXLINE( 476)								bool _hx_tmp20;
HXDLIN( 476)								if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 476)									_hx_tmp20 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 476)									_hx_tmp20 = false;
            								}
HXDLIN( 476)								if (_hx_tmp20) {
HXLINE( 476)									_this2->listen_x(_x23);
            								}
            							}
            						}
HXDLIN( 476)						{
HXLINE( 476)							_this2->y = _y23;
HXDLIN( 476)							if (!(_this2->_construct)) {
HXLINE( 476)								bool _hx_tmp21;
HXDLIN( 476)								if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 476)									_hx_tmp21 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 476)									_hx_tmp21 = false;
            								}
HXDLIN( 476)								if (_hx_tmp21) {
HXLINE( 476)									_this2->listen_y(_y23);
            								}
            							}
            						}
HXDLIN( 476)						{
HXLINE( 476)							_this2->z = _z23;
HXDLIN( 476)							if (!(_this2->_construct)) {
HXLINE( 476)								bool _hx_tmp22;
HXDLIN( 476)								if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 476)									_hx_tmp22 = !(_this2->ignore_listeners);
            								}
            								else {
HXLINE( 476)									_hx_tmp22 = false;
            								}
HXDLIN( 476)								if (_hx_tmp22) {
HXLINE( 476)									_this2->listen_z(_z23);
            								}
            							}
            						}
HXDLIN( 476)						_this2->ignore_listeners = prev2;
HXDLIN( 476)						bool _hx_tmp23;
HXDLIN( 476)						if (hx::IsNotNull( _this2->listen_x )) {
HXLINE( 476)							_hx_tmp23 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 476)							_hx_tmp23 = false;
            						}
HXDLIN( 476)						if (_hx_tmp23) {
HXLINE( 476)							_this2->listen_x(_this2->x);
            						}
HXDLIN( 476)						bool _hx_tmp24;
HXDLIN( 476)						if (hx::IsNotNull( _this2->listen_y )) {
HXLINE( 476)							_hx_tmp24 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 476)							_hx_tmp24 = false;
            						}
HXDLIN( 476)						if (_hx_tmp24) {
HXLINE( 476)							_this2->listen_y(_this2->y);
            						}
HXDLIN( 476)						bool _hx_tmp25;
HXDLIN( 476)						if (hx::IsNotNull( _this2->listen_z )) {
HXLINE( 476)							_hx_tmp25 = !(_this2->ignore_listeners);
            						}
            						else {
HXLINE( 476)							_hx_tmp25 = false;
            						}
HXDLIN( 476)						if (_hx_tmp25) {
HXLINE( 476)							_this2->listen_z(_this2->z);
            						}
            					}
            				}
HXDLIN( 476)				bool _hx_tmp26;
HXDLIN( 476)				if (hx::IsNotNull( this->listen_z )) {
HXLINE( 476)					_hx_tmp26 = !(this->ignore_listeners);
            				}
            				else {
HXLINE( 476)					_hx_tmp26 = false;
            				}
HXDLIN( 476)				if (_hx_tmp26) {
HXLINE( 476)					this->listen_z(this->z);
            				}
            			}
            		}
HXLINE( 478)		this->ignore_euler = false;
HXLINE( 480)		bool _hx_tmp27;
HXDLIN( 480)		bool _hx_tmp28;
HXDLIN( 480)		if (hx::IsNotNull( this->euler )) {
HXLINE( 480)			_hx_tmp28 = this->ignore_euler;
            		}
            		else {
HXLINE( 480)			_hx_tmp28 = true;
            		}
HXDLIN( 480)		if (!(_hx_tmp28)) {
HXLINE( 480)			_hx_tmp27 = this->_construct;
            		}
            		else {
HXLINE( 480)			_hx_tmp27 = true;
            		}
HXDLIN( 480)		if (!(_hx_tmp27)) {
HXLINE( 480)			 ::phoenix::Vector _this3 = this->euler;
HXDLIN( 480)			int order3 = (int)0;
HXDLIN( 480)			Float sqx3 = (this->x * this->x);
HXDLIN( 480)			Float sqy3 = (this->y * this->y);
HXDLIN( 480)			Float sqz3 = (this->z * this->z);
HXDLIN( 480)			Float sqw3 = (this->w * this->w);
HXDLIN( 480)			Float _x34 = _this3->x;
HXDLIN( 480)			Float _y34 = _this3->y;
HXDLIN( 480)			Float _z34 = _this3->z;
HXDLIN( 480)			if ((order3 == (int)0)) {
HXLINE( 480)				Float _x35 = (this->x * this->w);
HXDLIN( 480)				Float _x36 = ((int)2 * (_x35 - (this->y * this->z)));
HXDLIN( 480)				_x34 = ::Math_obj::atan2(_x36,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 480)				Float value36 = (this->x * this->z);
HXDLIN( 480)				Float value37 = ((int)2 * (value36 + (this->y * this->w)));
HXDLIN( 480)				Float _y35;
HXDLIN( 480)				if ((value37 < (int)-1)) {
HXLINE( 480)					_y35 = (int)-1;
            				}
            				else {
HXLINE( 480)					if ((value37 > (int)1)) {
HXLINE( 480)						_y35 = (int)1;
            					}
            					else {
HXLINE( 480)						_y35 = value37;
            					}
            				}
HXDLIN( 480)				_y34 = ::Math_obj::asin(_y35);
HXDLIN( 480)				Float _z35 = (this->z * this->w);
HXDLIN( 480)				Float _z36 = ((int)2 * (_z35 - (this->x * this->y)));
HXDLIN( 480)				_z34 = ::Math_obj::atan2(_z36,(((sqw3 + sqx3) - sqy3) - sqz3));
            			}
            			else {
HXLINE( 480)				if ((order3 == (int)1)) {
HXLINE( 480)					Float value38 = (this->x * this->w);
HXDLIN( 480)					Float value39 = ((int)2 * (value38 - (this->y * this->z)));
HXDLIN( 480)					Float _x37;
HXDLIN( 480)					if ((value39 < (int)-1)) {
HXLINE( 480)						_x37 = (int)-1;
            					}
            					else {
HXLINE( 480)						if ((value39 > (int)1)) {
HXLINE( 480)							_x37 = (int)1;
            						}
            						else {
HXLINE( 480)							_x37 = value39;
            						}
            					}
HXDLIN( 480)					_x34 = ::Math_obj::asin(_x37);
HXDLIN( 480)					Float _y36 = (this->x * this->z);
HXDLIN( 480)					Float _y37 = ((int)2 * (_y36 + (this->y * this->w)));
HXDLIN( 480)					_y34 = ::Math_obj::atan2(_y37,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 480)					Float _z37 = (this->x * this->y);
HXDLIN( 480)					Float _z38 = ((int)2 * (_z37 + (this->z * this->w)));
HXDLIN( 480)					_z34 = ::Math_obj::atan2(_z38,(((sqw3 - sqx3) + sqy3) - sqz3));
            				}
            				else {
HXLINE( 480)					if ((order3 == (int)2)) {
HXLINE( 480)						Float value40 = (this->x * this->w);
HXDLIN( 480)						Float value41 = ((int)2 * (value40 + (this->y * this->z)));
HXDLIN( 480)						Float _x38;
HXDLIN( 480)						if ((value41 < (int)-1)) {
HXLINE( 480)							_x38 = (int)-1;
            						}
            						else {
HXLINE( 480)							if ((value41 > (int)1)) {
HXLINE( 480)								_x38 = (int)1;
            							}
            							else {
HXLINE( 480)								_x38 = value41;
            							}
            						}
HXDLIN( 480)						_x34 = ::Math_obj::asin(_x38);
HXDLIN( 480)						Float _y38 = (this->y * this->w);
HXDLIN( 480)						Float _y39 = ((int)2 * (_y38 - (this->z * this->x)));
HXDLIN( 480)						_y34 = ::Math_obj::atan2(_y39,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 480)						Float _z39 = (this->z * this->w);
HXDLIN( 480)						Float _z40 = ((int)2 * (_z39 - (this->x * this->y)));
HXDLIN( 480)						_z34 = ::Math_obj::atan2(_z40,(((sqw3 - sqx3) + sqy3) - sqz3));
            					}
            					else {
HXLINE( 480)						if ((order3 == (int)3)) {
HXLINE( 480)							Float _x39 = (this->x * this->w);
HXDLIN( 480)							Float _x40 = ((int)2 * (_x39 + (this->z * this->y)));
HXDLIN( 480)							_x34 = ::Math_obj::atan2(_x40,(((sqw3 - sqx3) - sqy3) + sqz3));
HXDLIN( 480)							Float value42 = (this->y * this->w);
HXDLIN( 480)							Float value43 = ((int)2 * (value42 - (this->x * this->z)));
HXDLIN( 480)							Float _y40;
HXDLIN( 480)							if ((value43 < (int)-1)) {
HXLINE( 480)								_y40 = (int)-1;
            							}
            							else {
HXLINE( 480)								if ((value43 > (int)1)) {
HXLINE( 480)									_y40 = (int)1;
            								}
            								else {
HXLINE( 480)									_y40 = value43;
            								}
            							}
HXDLIN( 480)							_y34 = ::Math_obj::asin(_y40);
HXDLIN( 480)							Float _z41 = (this->x * this->y);
HXDLIN( 480)							Float _z42 = ((int)2 * (_z41 + (this->z * this->w)));
HXDLIN( 480)							_z34 = ::Math_obj::atan2(_z42,(((sqw3 + sqx3) - sqy3) - sqz3));
            						}
            						else {
HXLINE( 480)							if ((order3 == (int)4)) {
HXLINE( 480)								Float _x41 = (this->x * this->w);
HXDLIN( 480)								Float _x42 = ((int)2 * (_x41 - (this->z * this->y)));
HXDLIN( 480)								_x34 = ::Math_obj::atan2(_x42,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 480)								Float _y41 = (this->y * this->w);
HXDLIN( 480)								Float _y42 = ((int)2 * (_y41 - (this->x * this->z)));
HXDLIN( 480)								_y34 = ::Math_obj::atan2(_y42,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 480)								Float value44 = (this->x * this->y);
HXDLIN( 480)								Float value45 = ((int)2 * (value44 + (this->z * this->w)));
HXDLIN( 480)								Float _z43;
HXDLIN( 480)								if ((value45 < (int)-1)) {
HXLINE( 480)									_z43 = (int)-1;
            								}
            								else {
HXLINE( 480)									if ((value45 > (int)1)) {
HXLINE( 480)										_z43 = (int)1;
            									}
            									else {
HXLINE( 480)										_z43 = value45;
            									}
            								}
HXDLIN( 480)								_z34 = ::Math_obj::asin(_z43);
            							}
            							else {
HXLINE( 480)								if ((order3 == (int)5)) {
HXLINE( 480)									Float _x43 = (this->x * this->w);
HXDLIN( 480)									Float _x44 = ((int)2 * (_x43 + (this->y * this->z)));
HXDLIN( 480)									_x34 = ::Math_obj::atan2(_x44,(((sqw3 - sqx3) + sqy3) - sqz3));
HXDLIN( 480)									Float _y43 = (this->x * this->z);
HXDLIN( 480)									Float _y44 = ((int)2 * (_y43 + (this->y * this->w)));
HXDLIN( 480)									_y34 = ::Math_obj::atan2(_y44,(((sqw3 + sqx3) - sqy3) - sqz3));
HXDLIN( 480)									Float value46 = (this->z * this->w);
HXDLIN( 480)									Float value47 = ((int)2 * (value46 - (this->x * this->y)));
HXDLIN( 480)									Float _z44;
HXDLIN( 480)									if ((value47 < (int)-1)) {
HXLINE( 480)										_z44 = (int)-1;
            									}
            									else {
HXLINE( 480)										if ((value47 > (int)1)) {
HXLINE( 480)											_z44 = (int)1;
            										}
            										else {
HXLINE( 480)											_z44 = value47;
            										}
            									}
HXDLIN( 480)									_z34 = ::Math_obj::asin(_z44);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 480)			{
HXLINE( 480)				bool prev3 = _this3->ignore_listeners;
HXDLIN( 480)				_this3->ignore_listeners = true;
HXDLIN( 480)				{
HXLINE( 480)					_this3->x = _x34;
HXDLIN( 480)					if (!(_this3->_construct)) {
HXLINE( 480)						bool _hx_tmp29;
HXDLIN( 480)						if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 480)							_hx_tmp29 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 480)							_hx_tmp29 = false;
            						}
HXDLIN( 480)						if (_hx_tmp29) {
HXLINE( 480)							_this3->listen_x(_x34);
            						}
            					}
            				}
HXDLIN( 480)				{
HXLINE( 480)					_this3->y = _y34;
HXDLIN( 480)					if (!(_this3->_construct)) {
HXLINE( 480)						bool _hx_tmp30;
HXDLIN( 480)						if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 480)							_hx_tmp30 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 480)							_hx_tmp30 = false;
            						}
HXDLIN( 480)						if (_hx_tmp30) {
HXLINE( 480)							_this3->listen_y(_y34);
            						}
            					}
            				}
HXDLIN( 480)				{
HXLINE( 480)					_this3->z = _z34;
HXDLIN( 480)					if (!(_this3->_construct)) {
HXLINE( 480)						bool _hx_tmp31;
HXDLIN( 480)						if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 480)							_hx_tmp31 = !(_this3->ignore_listeners);
            						}
            						else {
HXLINE( 480)							_hx_tmp31 = false;
            						}
HXDLIN( 480)						if (_hx_tmp31) {
HXLINE( 480)							_this3->listen_z(_z34);
            						}
            					}
            				}
HXDLIN( 480)				_this3->ignore_listeners = prev3;
HXDLIN( 480)				bool _hx_tmp32;
HXDLIN( 480)				if (hx::IsNotNull( _this3->listen_x )) {
HXLINE( 480)					_hx_tmp32 = !(_this3->ignore_listeners);
            				}
            				else {
HXLINE( 480)					_hx_tmp32 = false;
            				}
HXDLIN( 480)				if (_hx_tmp32) {
HXLINE( 480)					_this3->listen_x(_this3->x);
            				}
HXDLIN( 480)				bool _hx_tmp33;
HXDLIN( 480)				if (hx::IsNotNull( _this3->listen_y )) {
HXLINE( 480)					_hx_tmp33 = !(_this3->ignore_listeners);
            				}
            				else {
HXLINE( 480)					_hx_tmp33 = false;
            				}
HXDLIN( 480)				if (_hx_tmp33) {
HXLINE( 480)					_this3->listen_y(_this3->y);
            				}
HXDLIN( 480)				bool _hx_tmp34;
HXDLIN( 480)				if (hx::IsNotNull( _this3->listen_z )) {
HXLINE( 480)					_hx_tmp34 = !(_this3->ignore_listeners);
            				}
            				else {
HXLINE( 480)					_hx_tmp34 = false;
            				}
HXDLIN( 480)				if (_hx_tmp34) {
HXLINE( 480)					_this3->listen_z(_this3->z);
            				}
            			}
            		}
HXLINE( 482)		bool _hx_tmp35;
HXDLIN( 482)		if (hx::IsNotNull( this->listen_x )) {
HXLINE( 482)			_hx_tmp35 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 482)			_hx_tmp35 = false;
            		}
HXDLIN( 482)		if (_hx_tmp35) {
HXLINE( 482)			this->listen_x(this->x);
            		}
HXLINE( 483)		bool _hx_tmp36;
HXDLIN( 483)		if (hx::IsNotNull( this->listen_y )) {
HXLINE( 483)			_hx_tmp36 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 483)			_hx_tmp36 = false;
            		}
HXDLIN( 483)		if (_hx_tmp36) {
HXLINE( 483)			this->listen_y(this->y);
            		}
HXLINE( 484)		bool _hx_tmp37;
HXDLIN( 484)		if (hx::IsNotNull( this->listen_z )) {
HXLINE( 484)			_hx_tmp37 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 484)			_hx_tmp37 = false;
            		}
HXDLIN( 484)		if (_hx_tmp37) {
HXLINE( 484)			this->listen_z(this->z);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Quaternion_obj,set_xyz,(void))

Float Quaternion_obj::set_x(Float _v){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_488_set_x)
HXLINE( 490)		this->x = _v;
HXLINE( 492)		if (this->_construct) {
HXLINE( 492)			return this->x;
            		}
HXLINE( 494)		bool _hx_tmp;
HXDLIN( 494)		bool _hx_tmp1;
HXDLIN( 494)		if (hx::IsNotNull( this->euler )) {
HXLINE( 494)			_hx_tmp1 = this->ignore_euler;
            		}
            		else {
HXLINE( 494)			_hx_tmp1 = true;
            		}
HXDLIN( 494)		if (!(_hx_tmp1)) {
HXLINE( 494)			_hx_tmp = this->_construct;
            		}
            		else {
HXLINE( 494)			_hx_tmp = true;
            		}
HXDLIN( 494)		if (!(_hx_tmp)) {
HXLINE( 494)			 ::phoenix::Vector _this = this->euler;
HXDLIN( 494)			int order = (int)0;
HXDLIN( 494)			Float sqx = (this->x * this->x);
HXDLIN( 494)			Float sqy = (this->y * this->y);
HXDLIN( 494)			Float sqz = (this->z * this->z);
HXDLIN( 494)			Float sqw = (this->w * this->w);
HXDLIN( 494)			Float _x = _this->x;
HXDLIN( 494)			Float _y = _this->y;
HXDLIN( 494)			Float _z = _this->z;
HXDLIN( 494)			if ((order == (int)0)) {
HXLINE( 494)				Float _x1 = (this->x * this->w);
HXDLIN( 494)				Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 494)				_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 494)				Float value = (this->x * this->z);
HXDLIN( 494)				Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 494)				Float _y1;
HXDLIN( 494)				if ((value1 < (int)-1)) {
HXLINE( 494)					_y1 = (int)-1;
            				}
            				else {
HXLINE( 494)					if ((value1 > (int)1)) {
HXLINE( 494)						_y1 = (int)1;
            					}
            					else {
HXLINE( 494)						_y1 = value1;
            					}
            				}
HXDLIN( 494)				_y = ::Math_obj::asin(_y1);
HXDLIN( 494)				Float _z1 = (this->z * this->w);
HXDLIN( 494)				Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 494)				_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            			}
            			else {
HXLINE( 494)				if ((order == (int)1)) {
HXLINE( 494)					Float value2 = (this->x * this->w);
HXDLIN( 494)					Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 494)					Float _x3;
HXDLIN( 494)					if ((value3 < (int)-1)) {
HXLINE( 494)						_x3 = (int)-1;
            					}
            					else {
HXLINE( 494)						if ((value3 > (int)1)) {
HXLINE( 494)							_x3 = (int)1;
            						}
            						else {
HXLINE( 494)							_x3 = value3;
            						}
            					}
HXDLIN( 494)					_x = ::Math_obj::asin(_x3);
HXDLIN( 494)					Float _y2 = (this->x * this->z);
HXDLIN( 494)					Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 494)					_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 494)					Float _z3 = (this->x * this->y);
HXDLIN( 494)					Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 494)					_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            				}
            				else {
HXLINE( 494)					if ((order == (int)2)) {
HXLINE( 494)						Float value4 = (this->x * this->w);
HXDLIN( 494)						Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 494)						Float _x4;
HXDLIN( 494)						if ((value5 < (int)-1)) {
HXLINE( 494)							_x4 = (int)-1;
            						}
            						else {
HXLINE( 494)							if ((value5 > (int)1)) {
HXLINE( 494)								_x4 = (int)1;
            							}
            							else {
HXLINE( 494)								_x4 = value5;
            							}
            						}
HXDLIN( 494)						_x = ::Math_obj::asin(_x4);
HXDLIN( 494)						Float _y4 = (this->y * this->w);
HXDLIN( 494)						Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 494)						_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 494)						Float _z5 = (this->z * this->w);
HXDLIN( 494)						Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 494)						_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            					}
            					else {
HXLINE( 494)						if ((order == (int)3)) {
HXLINE( 494)							Float _x5 = (this->x * this->w);
HXDLIN( 494)							Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 494)							_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 494)							Float value6 = (this->y * this->w);
HXDLIN( 494)							Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 494)							Float _y6;
HXDLIN( 494)							if ((value7 < (int)-1)) {
HXLINE( 494)								_y6 = (int)-1;
            							}
            							else {
HXLINE( 494)								if ((value7 > (int)1)) {
HXLINE( 494)									_y6 = (int)1;
            								}
            								else {
HXLINE( 494)									_y6 = value7;
            								}
            							}
HXDLIN( 494)							_y = ::Math_obj::asin(_y6);
HXDLIN( 494)							Float _z7 = (this->x * this->y);
HXDLIN( 494)							Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 494)							_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 494)							if ((order == (int)4)) {
HXLINE( 494)								Float _x7 = (this->x * this->w);
HXDLIN( 494)								Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 494)								_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 494)								Float _y7 = (this->y * this->w);
HXDLIN( 494)								Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 494)								_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 494)								Float value8 = (this->x * this->y);
HXDLIN( 494)								Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 494)								Float _z9;
HXDLIN( 494)								if ((value9 < (int)-1)) {
HXLINE( 494)									_z9 = (int)-1;
            								}
            								else {
HXLINE( 494)									if ((value9 > (int)1)) {
HXLINE( 494)										_z9 = (int)1;
            									}
            									else {
HXLINE( 494)										_z9 = value9;
            									}
            								}
HXDLIN( 494)								_z = ::Math_obj::asin(_z9);
            							}
            							else {
HXLINE( 494)								if ((order == (int)5)) {
HXLINE( 494)									Float _x9 = (this->x * this->w);
HXDLIN( 494)									Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 494)									_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 494)									Float _y9 = (this->x * this->z);
HXDLIN( 494)									Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 494)									_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 494)									Float value10 = (this->z * this->w);
HXDLIN( 494)									Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 494)									Float _z10;
HXDLIN( 494)									if ((value11 < (int)-1)) {
HXLINE( 494)										_z10 = (int)-1;
            									}
            									else {
HXLINE( 494)										if ((value11 > (int)1)) {
HXLINE( 494)											_z10 = (int)1;
            										}
            										else {
HXLINE( 494)											_z10 = value11;
            										}
            									}
HXDLIN( 494)									_z = ::Math_obj::asin(_z10);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 494)			{
HXLINE( 494)				bool prev = _this->ignore_listeners;
HXDLIN( 494)				_this->ignore_listeners = true;
HXDLIN( 494)				{
HXLINE( 494)					_this->x = _x;
HXDLIN( 494)					if (!(_this->_construct)) {
HXLINE( 494)						bool _hx_tmp2;
HXDLIN( 494)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 494)							_hx_tmp2 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 494)							_hx_tmp2 = false;
            						}
HXDLIN( 494)						if (_hx_tmp2) {
HXLINE( 494)							_this->listen_x(_x);
            						}
            					}
            				}
HXDLIN( 494)				{
HXLINE( 494)					_this->y = _y;
HXDLIN( 494)					if (!(_this->_construct)) {
HXLINE( 494)						bool _hx_tmp3;
HXDLIN( 494)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 494)							_hx_tmp3 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 494)							_hx_tmp3 = false;
            						}
HXDLIN( 494)						if (_hx_tmp3) {
HXLINE( 494)							_this->listen_y(_y);
            						}
            					}
            				}
HXDLIN( 494)				{
HXLINE( 494)					_this->z = _z;
HXDLIN( 494)					if (!(_this->_construct)) {
HXLINE( 494)						bool _hx_tmp4;
HXDLIN( 494)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 494)							_hx_tmp4 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 494)							_hx_tmp4 = false;
            						}
HXDLIN( 494)						if (_hx_tmp4) {
HXLINE( 494)							_this->listen_z(_z);
            						}
            					}
            				}
HXDLIN( 494)				_this->ignore_listeners = prev;
HXDLIN( 494)				bool _hx_tmp5;
HXDLIN( 494)				if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 494)					_hx_tmp5 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 494)					_hx_tmp5 = false;
            				}
HXDLIN( 494)				if (_hx_tmp5) {
HXLINE( 494)					_this->listen_x(_this->x);
            				}
HXDLIN( 494)				bool _hx_tmp6;
HXDLIN( 494)				if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 494)					_hx_tmp6 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 494)					_hx_tmp6 = false;
            				}
HXDLIN( 494)				if (_hx_tmp6) {
HXLINE( 494)					_this->listen_y(_this->y);
            				}
HXDLIN( 494)				bool _hx_tmp7;
HXDLIN( 494)				if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 494)					_hx_tmp7 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 494)					_hx_tmp7 = false;
            				}
HXDLIN( 494)				if (_hx_tmp7) {
HXLINE( 494)					_this->listen_z(_this->z);
            				}
            			}
            		}
HXLINE( 496)		bool _hx_tmp8;
HXDLIN( 496)		if (hx::IsNotNull( this->listen_x )) {
HXLINE( 496)			_hx_tmp8 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 496)			_hx_tmp8 = false;
            		}
HXDLIN( 496)		if (_hx_tmp8) {
HXLINE( 496)			this->listen_x(this->x);
            		}
HXLINE( 498)		return this->x;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,set_x,return )

Float Quaternion_obj::set_y(Float _v){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_502_set_y)
HXLINE( 504)		this->y = _v;
HXLINE( 506)		if (this->_construct) {
HXLINE( 506)			return this->y;
            		}
HXLINE( 508)		bool _hx_tmp;
HXDLIN( 508)		bool _hx_tmp1;
HXDLIN( 508)		if (hx::IsNotNull( this->euler )) {
HXLINE( 508)			_hx_tmp1 = this->ignore_euler;
            		}
            		else {
HXLINE( 508)			_hx_tmp1 = true;
            		}
HXDLIN( 508)		if (!(_hx_tmp1)) {
HXLINE( 508)			_hx_tmp = this->_construct;
            		}
            		else {
HXLINE( 508)			_hx_tmp = true;
            		}
HXDLIN( 508)		if (!(_hx_tmp)) {
HXLINE( 508)			 ::phoenix::Vector _this = this->euler;
HXDLIN( 508)			int order = (int)0;
HXDLIN( 508)			Float sqx = (this->x * this->x);
HXDLIN( 508)			Float sqy = (this->y * this->y);
HXDLIN( 508)			Float sqz = (this->z * this->z);
HXDLIN( 508)			Float sqw = (this->w * this->w);
HXDLIN( 508)			Float _x = _this->x;
HXDLIN( 508)			Float _y = _this->y;
HXDLIN( 508)			Float _z = _this->z;
HXDLIN( 508)			if ((order == (int)0)) {
HXLINE( 508)				Float _x1 = (this->x * this->w);
HXDLIN( 508)				Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 508)				_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 508)				Float value = (this->x * this->z);
HXDLIN( 508)				Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 508)				Float _y1;
HXDLIN( 508)				if ((value1 < (int)-1)) {
HXLINE( 508)					_y1 = (int)-1;
            				}
            				else {
HXLINE( 508)					if ((value1 > (int)1)) {
HXLINE( 508)						_y1 = (int)1;
            					}
            					else {
HXLINE( 508)						_y1 = value1;
            					}
            				}
HXDLIN( 508)				_y = ::Math_obj::asin(_y1);
HXDLIN( 508)				Float _z1 = (this->z * this->w);
HXDLIN( 508)				Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 508)				_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            			}
            			else {
HXLINE( 508)				if ((order == (int)1)) {
HXLINE( 508)					Float value2 = (this->x * this->w);
HXDLIN( 508)					Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 508)					Float _x3;
HXDLIN( 508)					if ((value3 < (int)-1)) {
HXLINE( 508)						_x3 = (int)-1;
            					}
            					else {
HXLINE( 508)						if ((value3 > (int)1)) {
HXLINE( 508)							_x3 = (int)1;
            						}
            						else {
HXLINE( 508)							_x3 = value3;
            						}
            					}
HXDLIN( 508)					_x = ::Math_obj::asin(_x3);
HXDLIN( 508)					Float _y2 = (this->x * this->z);
HXDLIN( 508)					Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 508)					_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 508)					Float _z3 = (this->x * this->y);
HXDLIN( 508)					Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 508)					_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            				}
            				else {
HXLINE( 508)					if ((order == (int)2)) {
HXLINE( 508)						Float value4 = (this->x * this->w);
HXDLIN( 508)						Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 508)						Float _x4;
HXDLIN( 508)						if ((value5 < (int)-1)) {
HXLINE( 508)							_x4 = (int)-1;
            						}
            						else {
HXLINE( 508)							if ((value5 > (int)1)) {
HXLINE( 508)								_x4 = (int)1;
            							}
            							else {
HXLINE( 508)								_x4 = value5;
            							}
            						}
HXDLIN( 508)						_x = ::Math_obj::asin(_x4);
HXDLIN( 508)						Float _y4 = (this->y * this->w);
HXDLIN( 508)						Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 508)						_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 508)						Float _z5 = (this->z * this->w);
HXDLIN( 508)						Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 508)						_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            					}
            					else {
HXLINE( 508)						if ((order == (int)3)) {
HXLINE( 508)							Float _x5 = (this->x * this->w);
HXDLIN( 508)							Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 508)							_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 508)							Float value6 = (this->y * this->w);
HXDLIN( 508)							Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 508)							Float _y6;
HXDLIN( 508)							if ((value7 < (int)-1)) {
HXLINE( 508)								_y6 = (int)-1;
            							}
            							else {
HXLINE( 508)								if ((value7 > (int)1)) {
HXLINE( 508)									_y6 = (int)1;
            								}
            								else {
HXLINE( 508)									_y6 = value7;
            								}
            							}
HXDLIN( 508)							_y = ::Math_obj::asin(_y6);
HXDLIN( 508)							Float _z7 = (this->x * this->y);
HXDLIN( 508)							Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 508)							_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 508)							if ((order == (int)4)) {
HXLINE( 508)								Float _x7 = (this->x * this->w);
HXDLIN( 508)								Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 508)								_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 508)								Float _y7 = (this->y * this->w);
HXDLIN( 508)								Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 508)								_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 508)								Float value8 = (this->x * this->y);
HXDLIN( 508)								Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 508)								Float _z9;
HXDLIN( 508)								if ((value9 < (int)-1)) {
HXLINE( 508)									_z9 = (int)-1;
            								}
            								else {
HXLINE( 508)									if ((value9 > (int)1)) {
HXLINE( 508)										_z9 = (int)1;
            									}
            									else {
HXLINE( 508)										_z9 = value9;
            									}
            								}
HXDLIN( 508)								_z = ::Math_obj::asin(_z9);
            							}
            							else {
HXLINE( 508)								if ((order == (int)5)) {
HXLINE( 508)									Float _x9 = (this->x * this->w);
HXDLIN( 508)									Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 508)									_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 508)									Float _y9 = (this->x * this->z);
HXDLIN( 508)									Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 508)									_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 508)									Float value10 = (this->z * this->w);
HXDLIN( 508)									Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 508)									Float _z10;
HXDLIN( 508)									if ((value11 < (int)-1)) {
HXLINE( 508)										_z10 = (int)-1;
            									}
            									else {
HXLINE( 508)										if ((value11 > (int)1)) {
HXLINE( 508)											_z10 = (int)1;
            										}
            										else {
HXLINE( 508)											_z10 = value11;
            										}
            									}
HXDLIN( 508)									_z = ::Math_obj::asin(_z10);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 508)			{
HXLINE( 508)				bool prev = _this->ignore_listeners;
HXDLIN( 508)				_this->ignore_listeners = true;
HXDLIN( 508)				{
HXLINE( 508)					_this->x = _x;
HXDLIN( 508)					if (!(_this->_construct)) {
HXLINE( 508)						bool _hx_tmp2;
HXDLIN( 508)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 508)							_hx_tmp2 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 508)							_hx_tmp2 = false;
            						}
HXDLIN( 508)						if (_hx_tmp2) {
HXLINE( 508)							_this->listen_x(_x);
            						}
            					}
            				}
HXDLIN( 508)				{
HXLINE( 508)					_this->y = _y;
HXDLIN( 508)					if (!(_this->_construct)) {
HXLINE( 508)						bool _hx_tmp3;
HXDLIN( 508)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 508)							_hx_tmp3 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 508)							_hx_tmp3 = false;
            						}
HXDLIN( 508)						if (_hx_tmp3) {
HXLINE( 508)							_this->listen_y(_y);
            						}
            					}
            				}
HXDLIN( 508)				{
HXLINE( 508)					_this->z = _z;
HXDLIN( 508)					if (!(_this->_construct)) {
HXLINE( 508)						bool _hx_tmp4;
HXDLIN( 508)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 508)							_hx_tmp4 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 508)							_hx_tmp4 = false;
            						}
HXDLIN( 508)						if (_hx_tmp4) {
HXLINE( 508)							_this->listen_z(_z);
            						}
            					}
            				}
HXDLIN( 508)				_this->ignore_listeners = prev;
HXDLIN( 508)				bool _hx_tmp5;
HXDLIN( 508)				if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 508)					_hx_tmp5 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 508)					_hx_tmp5 = false;
            				}
HXDLIN( 508)				if (_hx_tmp5) {
HXLINE( 508)					_this->listen_x(_this->x);
            				}
HXDLIN( 508)				bool _hx_tmp6;
HXDLIN( 508)				if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 508)					_hx_tmp6 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 508)					_hx_tmp6 = false;
            				}
HXDLIN( 508)				if (_hx_tmp6) {
HXLINE( 508)					_this->listen_y(_this->y);
            				}
HXDLIN( 508)				bool _hx_tmp7;
HXDLIN( 508)				if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 508)					_hx_tmp7 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 508)					_hx_tmp7 = false;
            				}
HXDLIN( 508)				if (_hx_tmp7) {
HXLINE( 508)					_this->listen_z(_this->z);
            				}
            			}
            		}
HXLINE( 510)		bool _hx_tmp8;
HXDLIN( 510)		if (hx::IsNotNull( this->listen_y )) {
HXLINE( 510)			_hx_tmp8 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 510)			_hx_tmp8 = false;
            		}
HXDLIN( 510)		if (_hx_tmp8) {
HXLINE( 510)			this->listen_y(this->y);
            		}
HXLINE( 512)		return this->y;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,set_y,return )

Float Quaternion_obj::set_z(Float _v){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_516_set_z)
HXLINE( 518)		this->z = _v;
HXLINE( 520)		if (this->_construct) {
HXLINE( 520)			return this->z;
            		}
HXLINE( 522)		bool _hx_tmp;
HXDLIN( 522)		bool _hx_tmp1;
HXDLIN( 522)		if (hx::IsNotNull( this->euler )) {
HXLINE( 522)			_hx_tmp1 = this->ignore_euler;
            		}
            		else {
HXLINE( 522)			_hx_tmp1 = true;
            		}
HXDLIN( 522)		if (!(_hx_tmp1)) {
HXLINE( 522)			_hx_tmp = this->_construct;
            		}
            		else {
HXLINE( 522)			_hx_tmp = true;
            		}
HXDLIN( 522)		if (!(_hx_tmp)) {
HXLINE( 522)			 ::phoenix::Vector _this = this->euler;
HXDLIN( 522)			int order = (int)0;
HXDLIN( 522)			Float sqx = (this->x * this->x);
HXDLIN( 522)			Float sqy = (this->y * this->y);
HXDLIN( 522)			Float sqz = (this->z * this->z);
HXDLIN( 522)			Float sqw = (this->w * this->w);
HXDLIN( 522)			Float _x = _this->x;
HXDLIN( 522)			Float _y = _this->y;
HXDLIN( 522)			Float _z = _this->z;
HXDLIN( 522)			if ((order == (int)0)) {
HXLINE( 522)				Float _x1 = (this->x * this->w);
HXDLIN( 522)				Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 522)				_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 522)				Float value = (this->x * this->z);
HXDLIN( 522)				Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 522)				Float _y1;
HXDLIN( 522)				if ((value1 < (int)-1)) {
HXLINE( 522)					_y1 = (int)-1;
            				}
            				else {
HXLINE( 522)					if ((value1 > (int)1)) {
HXLINE( 522)						_y1 = (int)1;
            					}
            					else {
HXLINE( 522)						_y1 = value1;
            					}
            				}
HXDLIN( 522)				_y = ::Math_obj::asin(_y1);
HXDLIN( 522)				Float _z1 = (this->z * this->w);
HXDLIN( 522)				Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 522)				_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            			}
            			else {
HXLINE( 522)				if ((order == (int)1)) {
HXLINE( 522)					Float value2 = (this->x * this->w);
HXDLIN( 522)					Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 522)					Float _x3;
HXDLIN( 522)					if ((value3 < (int)-1)) {
HXLINE( 522)						_x3 = (int)-1;
            					}
            					else {
HXLINE( 522)						if ((value3 > (int)1)) {
HXLINE( 522)							_x3 = (int)1;
            						}
            						else {
HXLINE( 522)							_x3 = value3;
            						}
            					}
HXDLIN( 522)					_x = ::Math_obj::asin(_x3);
HXDLIN( 522)					Float _y2 = (this->x * this->z);
HXDLIN( 522)					Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 522)					_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 522)					Float _z3 = (this->x * this->y);
HXDLIN( 522)					Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 522)					_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            				}
            				else {
HXLINE( 522)					if ((order == (int)2)) {
HXLINE( 522)						Float value4 = (this->x * this->w);
HXDLIN( 522)						Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 522)						Float _x4;
HXDLIN( 522)						if ((value5 < (int)-1)) {
HXLINE( 522)							_x4 = (int)-1;
            						}
            						else {
HXLINE( 522)							if ((value5 > (int)1)) {
HXLINE( 522)								_x4 = (int)1;
            							}
            							else {
HXLINE( 522)								_x4 = value5;
            							}
            						}
HXDLIN( 522)						_x = ::Math_obj::asin(_x4);
HXDLIN( 522)						Float _y4 = (this->y * this->w);
HXDLIN( 522)						Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 522)						_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 522)						Float _z5 = (this->z * this->w);
HXDLIN( 522)						Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 522)						_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            					}
            					else {
HXLINE( 522)						if ((order == (int)3)) {
HXLINE( 522)							Float _x5 = (this->x * this->w);
HXDLIN( 522)							Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 522)							_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 522)							Float value6 = (this->y * this->w);
HXDLIN( 522)							Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 522)							Float _y6;
HXDLIN( 522)							if ((value7 < (int)-1)) {
HXLINE( 522)								_y6 = (int)-1;
            							}
            							else {
HXLINE( 522)								if ((value7 > (int)1)) {
HXLINE( 522)									_y6 = (int)1;
            								}
            								else {
HXLINE( 522)									_y6 = value7;
            								}
            							}
HXDLIN( 522)							_y = ::Math_obj::asin(_y6);
HXDLIN( 522)							Float _z7 = (this->x * this->y);
HXDLIN( 522)							Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 522)							_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 522)							if ((order == (int)4)) {
HXLINE( 522)								Float _x7 = (this->x * this->w);
HXDLIN( 522)								Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 522)								_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 522)								Float _y7 = (this->y * this->w);
HXDLIN( 522)								Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 522)								_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 522)								Float value8 = (this->x * this->y);
HXDLIN( 522)								Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 522)								Float _z9;
HXDLIN( 522)								if ((value9 < (int)-1)) {
HXLINE( 522)									_z9 = (int)-1;
            								}
            								else {
HXLINE( 522)									if ((value9 > (int)1)) {
HXLINE( 522)										_z9 = (int)1;
            									}
            									else {
HXLINE( 522)										_z9 = value9;
            									}
            								}
HXDLIN( 522)								_z = ::Math_obj::asin(_z9);
            							}
            							else {
HXLINE( 522)								if ((order == (int)5)) {
HXLINE( 522)									Float _x9 = (this->x * this->w);
HXDLIN( 522)									Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 522)									_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 522)									Float _y9 = (this->x * this->z);
HXDLIN( 522)									Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 522)									_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 522)									Float value10 = (this->z * this->w);
HXDLIN( 522)									Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 522)									Float _z10;
HXDLIN( 522)									if ((value11 < (int)-1)) {
HXLINE( 522)										_z10 = (int)-1;
            									}
            									else {
HXLINE( 522)										if ((value11 > (int)1)) {
HXLINE( 522)											_z10 = (int)1;
            										}
            										else {
HXLINE( 522)											_z10 = value11;
            										}
            									}
HXDLIN( 522)									_z = ::Math_obj::asin(_z10);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 522)			{
HXLINE( 522)				bool prev = _this->ignore_listeners;
HXDLIN( 522)				_this->ignore_listeners = true;
HXDLIN( 522)				{
HXLINE( 522)					_this->x = _x;
HXDLIN( 522)					if (!(_this->_construct)) {
HXLINE( 522)						bool _hx_tmp2;
HXDLIN( 522)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 522)							_hx_tmp2 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 522)							_hx_tmp2 = false;
            						}
HXDLIN( 522)						if (_hx_tmp2) {
HXLINE( 522)							_this->listen_x(_x);
            						}
            					}
            				}
HXDLIN( 522)				{
HXLINE( 522)					_this->y = _y;
HXDLIN( 522)					if (!(_this->_construct)) {
HXLINE( 522)						bool _hx_tmp3;
HXDLIN( 522)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 522)							_hx_tmp3 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 522)							_hx_tmp3 = false;
            						}
HXDLIN( 522)						if (_hx_tmp3) {
HXLINE( 522)							_this->listen_y(_y);
            						}
            					}
            				}
HXDLIN( 522)				{
HXLINE( 522)					_this->z = _z;
HXDLIN( 522)					if (!(_this->_construct)) {
HXLINE( 522)						bool _hx_tmp4;
HXDLIN( 522)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 522)							_hx_tmp4 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 522)							_hx_tmp4 = false;
            						}
HXDLIN( 522)						if (_hx_tmp4) {
HXLINE( 522)							_this->listen_z(_z);
            						}
            					}
            				}
HXDLIN( 522)				_this->ignore_listeners = prev;
HXDLIN( 522)				bool _hx_tmp5;
HXDLIN( 522)				if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 522)					_hx_tmp5 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 522)					_hx_tmp5 = false;
            				}
HXDLIN( 522)				if (_hx_tmp5) {
HXLINE( 522)					_this->listen_x(_this->x);
            				}
HXDLIN( 522)				bool _hx_tmp6;
HXDLIN( 522)				if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 522)					_hx_tmp6 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 522)					_hx_tmp6 = false;
            				}
HXDLIN( 522)				if (_hx_tmp6) {
HXLINE( 522)					_this->listen_y(_this->y);
            				}
HXDLIN( 522)				bool _hx_tmp7;
HXDLIN( 522)				if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 522)					_hx_tmp7 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 522)					_hx_tmp7 = false;
            				}
HXDLIN( 522)				if (_hx_tmp7) {
HXLINE( 522)					_this->listen_z(_this->z);
            				}
            			}
            		}
HXLINE( 524)		bool _hx_tmp8;
HXDLIN( 524)		if (hx::IsNotNull( this->listen_z )) {
HXLINE( 524)			_hx_tmp8 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 524)			_hx_tmp8 = false;
            		}
HXDLIN( 524)		if (_hx_tmp8) {
HXLINE( 524)			this->listen_z(this->z);
            		}
HXLINE( 526)		return this->z;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,set_z,return )

Float Quaternion_obj::set_w(Float _v){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_530_set_w)
HXLINE( 532)		this->w = _v;
HXLINE( 534)		if (this->_construct) {
HXLINE( 534)			return this->w;
            		}
HXLINE( 536)		bool _hx_tmp;
HXDLIN( 536)		bool _hx_tmp1;
HXDLIN( 536)		if (hx::IsNotNull( this->euler )) {
HXLINE( 536)			_hx_tmp1 = this->ignore_euler;
            		}
            		else {
HXLINE( 536)			_hx_tmp1 = true;
            		}
HXDLIN( 536)		if (!(_hx_tmp1)) {
HXLINE( 536)			_hx_tmp = this->_construct;
            		}
            		else {
HXLINE( 536)			_hx_tmp = true;
            		}
HXDLIN( 536)		if (!(_hx_tmp)) {
HXLINE( 536)			 ::phoenix::Vector _this = this->euler;
HXDLIN( 536)			int order = (int)0;
HXDLIN( 536)			Float sqx = (this->x * this->x);
HXDLIN( 536)			Float sqy = (this->y * this->y);
HXDLIN( 536)			Float sqz = (this->z * this->z);
HXDLIN( 536)			Float sqw = (this->w * this->w);
HXDLIN( 536)			Float _x = _this->x;
HXDLIN( 536)			Float _y = _this->y;
HXDLIN( 536)			Float _z = _this->z;
HXDLIN( 536)			if ((order == (int)0)) {
HXLINE( 536)				Float _x1 = (this->x * this->w);
HXDLIN( 536)				Float _x2 = ((int)2 * (_x1 - (this->y * this->z)));
HXDLIN( 536)				_x = ::Math_obj::atan2(_x2,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 536)				Float value = (this->x * this->z);
HXDLIN( 536)				Float value1 = ((int)2 * (value + (this->y * this->w)));
HXDLIN( 536)				Float _y1;
HXDLIN( 536)				if ((value1 < (int)-1)) {
HXLINE( 536)					_y1 = (int)-1;
            				}
            				else {
HXLINE( 536)					if ((value1 > (int)1)) {
HXLINE( 536)						_y1 = (int)1;
            					}
            					else {
HXLINE( 536)						_y1 = value1;
            					}
            				}
HXDLIN( 536)				_y = ::Math_obj::asin(_y1);
HXDLIN( 536)				Float _z1 = (this->z * this->w);
HXDLIN( 536)				Float _z2 = ((int)2 * (_z1 - (this->x * this->y)));
HXDLIN( 536)				_z = ::Math_obj::atan2(_z2,(((sqw + sqx) - sqy) - sqz));
            			}
            			else {
HXLINE( 536)				if ((order == (int)1)) {
HXLINE( 536)					Float value2 = (this->x * this->w);
HXDLIN( 536)					Float value3 = ((int)2 * (value2 - (this->y * this->z)));
HXDLIN( 536)					Float _x3;
HXDLIN( 536)					if ((value3 < (int)-1)) {
HXLINE( 536)						_x3 = (int)-1;
            					}
            					else {
HXLINE( 536)						if ((value3 > (int)1)) {
HXLINE( 536)							_x3 = (int)1;
            						}
            						else {
HXLINE( 536)							_x3 = value3;
            						}
            					}
HXDLIN( 536)					_x = ::Math_obj::asin(_x3);
HXDLIN( 536)					Float _y2 = (this->x * this->z);
HXDLIN( 536)					Float _y3 = ((int)2 * (_y2 + (this->y * this->w)));
HXDLIN( 536)					_y = ::Math_obj::atan2(_y3,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 536)					Float _z3 = (this->x * this->y);
HXDLIN( 536)					Float _z4 = ((int)2 * (_z3 + (this->z * this->w)));
HXDLIN( 536)					_z = ::Math_obj::atan2(_z4,(((sqw - sqx) + sqy) - sqz));
            				}
            				else {
HXLINE( 536)					if ((order == (int)2)) {
HXLINE( 536)						Float value4 = (this->x * this->w);
HXDLIN( 536)						Float value5 = ((int)2 * (value4 + (this->y * this->z)));
HXDLIN( 536)						Float _x4;
HXDLIN( 536)						if ((value5 < (int)-1)) {
HXLINE( 536)							_x4 = (int)-1;
            						}
            						else {
HXLINE( 536)							if ((value5 > (int)1)) {
HXLINE( 536)								_x4 = (int)1;
            							}
            							else {
HXLINE( 536)								_x4 = value5;
            							}
            						}
HXDLIN( 536)						_x = ::Math_obj::asin(_x4);
HXDLIN( 536)						Float _y4 = (this->y * this->w);
HXDLIN( 536)						Float _y5 = ((int)2 * (_y4 - (this->z * this->x)));
HXDLIN( 536)						_y = ::Math_obj::atan2(_y5,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 536)						Float _z5 = (this->z * this->w);
HXDLIN( 536)						Float _z6 = ((int)2 * (_z5 - (this->x * this->y)));
HXDLIN( 536)						_z = ::Math_obj::atan2(_z6,(((sqw - sqx) + sqy) - sqz));
            					}
            					else {
HXLINE( 536)						if ((order == (int)3)) {
HXLINE( 536)							Float _x5 = (this->x * this->w);
HXDLIN( 536)							Float _x6 = ((int)2 * (_x5 + (this->z * this->y)));
HXDLIN( 536)							_x = ::Math_obj::atan2(_x6,(((sqw - sqx) - sqy) + sqz));
HXDLIN( 536)							Float value6 = (this->y * this->w);
HXDLIN( 536)							Float value7 = ((int)2 * (value6 - (this->x * this->z)));
HXDLIN( 536)							Float _y6;
HXDLIN( 536)							if ((value7 < (int)-1)) {
HXLINE( 536)								_y6 = (int)-1;
            							}
            							else {
HXLINE( 536)								if ((value7 > (int)1)) {
HXLINE( 536)									_y6 = (int)1;
            								}
            								else {
HXLINE( 536)									_y6 = value7;
            								}
            							}
HXDLIN( 536)							_y = ::Math_obj::asin(_y6);
HXDLIN( 536)							Float _z7 = (this->x * this->y);
HXDLIN( 536)							Float _z8 = ((int)2 * (_z7 + (this->z * this->w)));
HXDLIN( 536)							_z = ::Math_obj::atan2(_z8,(((sqw + sqx) - sqy) - sqz));
            						}
            						else {
HXLINE( 536)							if ((order == (int)4)) {
HXLINE( 536)								Float _x7 = (this->x * this->w);
HXDLIN( 536)								Float _x8 = ((int)2 * (_x7 - (this->z * this->y)));
HXDLIN( 536)								_x = ::Math_obj::atan2(_x8,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 536)								Float _y7 = (this->y * this->w);
HXDLIN( 536)								Float _y8 = ((int)2 * (_y7 - (this->x * this->z)));
HXDLIN( 536)								_y = ::Math_obj::atan2(_y8,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 536)								Float value8 = (this->x * this->y);
HXDLIN( 536)								Float value9 = ((int)2 * (value8 + (this->z * this->w)));
HXDLIN( 536)								Float _z9;
HXDLIN( 536)								if ((value9 < (int)-1)) {
HXLINE( 536)									_z9 = (int)-1;
            								}
            								else {
HXLINE( 536)									if ((value9 > (int)1)) {
HXLINE( 536)										_z9 = (int)1;
            									}
            									else {
HXLINE( 536)										_z9 = value9;
            									}
            								}
HXDLIN( 536)								_z = ::Math_obj::asin(_z9);
            							}
            							else {
HXLINE( 536)								if ((order == (int)5)) {
HXLINE( 536)									Float _x9 = (this->x * this->w);
HXDLIN( 536)									Float _x10 = ((int)2 * (_x9 + (this->y * this->z)));
HXDLIN( 536)									_x = ::Math_obj::atan2(_x10,(((sqw - sqx) + sqy) - sqz));
HXDLIN( 536)									Float _y9 = (this->x * this->z);
HXDLIN( 536)									Float _y10 = ((int)2 * (_y9 + (this->y * this->w)));
HXDLIN( 536)									_y = ::Math_obj::atan2(_y10,(((sqw + sqx) - sqy) - sqz));
HXDLIN( 536)									Float value10 = (this->z * this->w);
HXDLIN( 536)									Float value11 = ((int)2 * (value10 - (this->x * this->y)));
HXDLIN( 536)									Float _z10;
HXDLIN( 536)									if ((value11 < (int)-1)) {
HXLINE( 536)										_z10 = (int)-1;
            									}
            									else {
HXLINE( 536)										if ((value11 > (int)1)) {
HXLINE( 536)											_z10 = (int)1;
            										}
            										else {
HXLINE( 536)											_z10 = value11;
            										}
            									}
HXDLIN( 536)									_z = ::Math_obj::asin(_z10);
            								}
            							}
            						}
            					}
            				}
            			}
HXDLIN( 536)			{
HXLINE( 536)				bool prev = _this->ignore_listeners;
HXDLIN( 536)				_this->ignore_listeners = true;
HXDLIN( 536)				{
HXLINE( 536)					_this->x = _x;
HXDLIN( 536)					if (!(_this->_construct)) {
HXLINE( 536)						bool _hx_tmp2;
HXDLIN( 536)						if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 536)							_hx_tmp2 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 536)							_hx_tmp2 = false;
            						}
HXDLIN( 536)						if (_hx_tmp2) {
HXLINE( 536)							_this->listen_x(_x);
            						}
            					}
            				}
HXDLIN( 536)				{
HXLINE( 536)					_this->y = _y;
HXDLIN( 536)					if (!(_this->_construct)) {
HXLINE( 536)						bool _hx_tmp3;
HXDLIN( 536)						if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 536)							_hx_tmp3 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 536)							_hx_tmp3 = false;
            						}
HXDLIN( 536)						if (_hx_tmp3) {
HXLINE( 536)							_this->listen_y(_y);
            						}
            					}
            				}
HXDLIN( 536)				{
HXLINE( 536)					_this->z = _z;
HXDLIN( 536)					if (!(_this->_construct)) {
HXLINE( 536)						bool _hx_tmp4;
HXDLIN( 536)						if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 536)							_hx_tmp4 = !(_this->ignore_listeners);
            						}
            						else {
HXLINE( 536)							_hx_tmp4 = false;
            						}
HXDLIN( 536)						if (_hx_tmp4) {
HXLINE( 536)							_this->listen_z(_z);
            						}
            					}
            				}
HXDLIN( 536)				_this->ignore_listeners = prev;
HXDLIN( 536)				bool _hx_tmp5;
HXDLIN( 536)				if (hx::IsNotNull( _this->listen_x )) {
HXLINE( 536)					_hx_tmp5 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 536)					_hx_tmp5 = false;
            				}
HXDLIN( 536)				if (_hx_tmp5) {
HXLINE( 536)					_this->listen_x(_this->x);
            				}
HXDLIN( 536)				bool _hx_tmp6;
HXDLIN( 536)				if (hx::IsNotNull( _this->listen_y )) {
HXLINE( 536)					_hx_tmp6 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 536)					_hx_tmp6 = false;
            				}
HXDLIN( 536)				if (_hx_tmp6) {
HXLINE( 536)					_this->listen_y(_this->y);
            				}
HXDLIN( 536)				bool _hx_tmp7;
HXDLIN( 536)				if (hx::IsNotNull( _this->listen_z )) {
HXLINE( 536)					_hx_tmp7 = !(_this->ignore_listeners);
            				}
            				else {
HXLINE( 536)					_hx_tmp7 = false;
            				}
HXDLIN( 536)				if (_hx_tmp7) {
HXLINE( 536)					_this->listen_z(_this->z);
            				}
            			}
            		}
HXLINE( 538)		bool _hx_tmp8;
HXDLIN( 538)		if (hx::IsNotNull( this->listen_w )) {
HXLINE( 538)			_hx_tmp8 = !(this->ignore_listeners);
            		}
            		else {
HXLINE( 538)			_hx_tmp8 = false;
            		}
HXDLIN( 538)		if (_hx_tmp8) {
HXLINE( 538)			this->listen_w(this->w);
            		}
HXLINE( 540)		return this->w;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Quaternion_obj,set_w,return )

 ::phoenix::Quaternion Quaternion_obj::Add( ::phoenix::Quaternion _a, ::phoenix::Quaternion _b){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_275_Add)
HXDLIN( 275)		return _a->clone()->add(_b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,Add,return )

 ::phoenix::Quaternion Quaternion_obj::Multiply( ::phoenix::Quaternion _a, ::phoenix::Quaternion _b){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_279_Multiply)
HXDLIN( 279)		return _a->clone()->multiply(_b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,Multiply,return )

 ::phoenix::Quaternion Quaternion_obj::MultiplyScalar( ::phoenix::Quaternion _quaternion,Float _scalar){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_283_MultiplyScalar)
HXDLIN( 283)		return _quaternion->clone()->multiplyScalar(_scalar);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,MultiplyScalar,return )

 ::phoenix::Quaternion Quaternion_obj::Slerp( ::phoenix::Quaternion _qa, ::phoenix::Quaternion _qb, ::phoenix::Quaternion _qm,Float _t){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_430_Slerp)
HXDLIN( 430)		return _qm->copy(_qa)->slerp(_qb,_t);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Quaternion_obj,Slerp,return )

Float Quaternion_obj::Dot( ::phoenix::Quaternion _a, ::phoenix::Quaternion _b){
            	HX_GC_STACKFRAME(&_hx_pos_9ac8276792cde9b0_435_Dot)
HXDLIN( 435)		return  ::phoenix::Quaternion_obj::__alloc( HX_CTX ,_a->x,_a->y,_a->z,_a->w)->dot(_b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,Dot,return )

void Quaternion_obj::Listen( ::phoenix::Quaternion _q, ::Dynamic listener){
            	HX_STACKFRAME(&_hx_pos_9ac8276792cde9b0_544_Listen)
HXLINE( 546)		_q->listen_x = listener;
HXLINE( 547)		_q->listen_y = listener;
HXLINE( 548)		_q->listen_z = listener;
HXLINE( 549)		_q->listen_w = listener;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Quaternion_obj,Listen,(void))


hx::ObjectPtr< Quaternion_obj > Quaternion_obj::__new(hx::Null< Float >  __o__x,hx::Null< Float >  __o__y,hx::Null< Float >  __o__z,hx::Null< Float >  __o__w) {
	hx::ObjectPtr< Quaternion_obj > __this = new Quaternion_obj();
	__this->__construct(__o__x,__o__y,__o__z,__o__w);
	return __this;
}

hx::ObjectPtr< Quaternion_obj > Quaternion_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o__x,hx::Null< Float >  __o__y,hx::Null< Float >  __o__z,hx::Null< Float >  __o__w) {
	Quaternion_obj *__this = (Quaternion_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Quaternion_obj), true, "phoenix.Quaternion"));
	*(void **)__this = Quaternion_obj::_hx_vtable;
	__this->__construct(__o__x,__o__y,__o__z,__o__w);
	return __this;
}

Quaternion_obj::Quaternion_obj()
{
}

void Quaternion_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Quaternion);
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_MEMBER_NAME(z,"z");
	HX_MARK_MEMBER_NAME(w,"w");
	HX_MARK_MEMBER_NAME(euler,"euler");
	HX_MARK_MEMBER_NAME(ignore_listeners,"ignore_listeners");
	HX_MARK_MEMBER_NAME(listen_x,"listen_x");
	HX_MARK_MEMBER_NAME(listen_y,"listen_y");
	HX_MARK_MEMBER_NAME(listen_z,"listen_z");
	HX_MARK_MEMBER_NAME(listen_w,"listen_w");
	HX_MARK_MEMBER_NAME(_construct,"_construct");
	HX_MARK_MEMBER_NAME(ignore_euler,"ignore_euler");
	HX_MARK_END_CLASS();
}

void Quaternion_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
	HX_VISIT_MEMBER_NAME(z,"z");
	HX_VISIT_MEMBER_NAME(w,"w");
	HX_VISIT_MEMBER_NAME(euler,"euler");
	HX_VISIT_MEMBER_NAME(ignore_listeners,"ignore_listeners");
	HX_VISIT_MEMBER_NAME(listen_x,"listen_x");
	HX_VISIT_MEMBER_NAME(listen_y,"listen_y");
	HX_VISIT_MEMBER_NAME(listen_z,"listen_z");
	HX_VISIT_MEMBER_NAME(listen_w,"listen_w");
	HX_VISIT_MEMBER_NAME(_construct,"_construct");
	HX_VISIT_MEMBER_NAME(ignore_euler,"ignore_euler");
}

hx::Val Quaternion_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return hx::Val( y ); }
		if (HX_FIELD_EQ(inName,"z") ) { return hx::Val( z ); }
		if (HX_FIELD_EQ(inName,"w") ) { return hx::Val( w ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"dot") ) { return hx::Val( dot_dyn() ); }
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"euler") ) { return hx::Val( euler ); }
		if (HX_FIELD_EQ(inName,"slerp") ) { return hx::Val( slerp_dyn() ); }
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_x") ) { return hx::Val( set_x_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_y") ) { return hx::Val( set_y_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_z") ) { return hx::Val( set_z_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_w") ) { return hx::Val( set_w_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length_dyn() ); }
		if (HX_FIELD_EQ(inName,"equals") ) { return hx::Val( equals_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"inverse") ) { return hx::Val( inverse_dyn() ); }
		if (HX_FIELD_EQ(inName,"toArray") ) { return hx::Val( toArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"toeuler") ) { return hx::Val( toeuler_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_xyz") ) { return hx::Val( set_xyz_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"listen_x") ) { return hx::Val( listen_x ); }
		if (HX_FIELD_EQ(inName,"listen_y") ) { return hx::Val( listen_y ); }
		if (HX_FIELD_EQ(inName,"listen_z") ) { return hx::Val( listen_z ); }
		if (HX_FIELD_EQ(inName,"listen_w") ) { return hx::Val( listen_w ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		if (HX_FIELD_EQ(inName,"lengthSq") ) { return hx::Val( lengthSq_dyn() ); }
		if (HX_FIELD_EQ(inName,"multiply") ) { return hx::Val( multiply_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_xyzw") ) { return hx::Val( set_xyzw_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"conjugate") ) { return hx::Val( conjugate_dyn() ); }
		if (HX_FIELD_EQ(inName,"normalize") ) { return hx::Val( normalize_dyn() ); }
		if (HX_FIELD_EQ(inName,"fromArray") ) { return hx::Val( fromArray_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_construct") ) { return hx::Val( _construct ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setFromEuler") ) { return hx::Val( setFromEuler_dyn() ); }
		if (HX_FIELD_EQ(inName,"update_euler") ) { return hx::Val( update_euler_dyn() ); }
		if (HX_FIELD_EQ(inName,"ignore_euler") ) { return hx::Val( ignore_euler ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"addQuaternions") ) { return hx::Val( addQuaternions_dyn() ); }
		if (HX_FIELD_EQ(inName,"multiplyScalar") ) { return hx::Val( multiplyScalar_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"ignore_listeners") ) { return hx::Val( ignore_listeners ); }
		if (HX_FIELD_EQ(inName,"setFromAxisAngle") ) { return hx::Val( setFromAxisAngle_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"multiplyQuaternions") ) { return hx::Val( multiplyQuaternions_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"setFromRotationMatrix") ) { return hx::Val( setFromRotationMatrix_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Quaternion_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"Add") ) { outValue = Add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"Dot") ) { outValue = Dot_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"Slerp") ) { outValue = Slerp_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"Listen") ) { outValue = Listen_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"Multiply") ) { outValue = Multiply_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"MultiplyScalar") ) { outValue = MultiplyScalar_dyn(); return true; }
	}
	return false;
}

hx::Val Quaternion_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_x(inValue.Cast< Float >()) );x=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_y(inValue.Cast< Float >()) );y=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"z") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_z(inValue.Cast< Float >()) );z=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"w") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_w(inValue.Cast< Float >()) );w=inValue.Cast< Float >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"euler") ) { euler=inValue.Cast<  ::phoenix::Vector >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"listen_x") ) { listen_x=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"listen_y") ) { listen_y=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"listen_z") ) { listen_z=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"listen_w") ) { listen_w=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"_construct") ) { _construct=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"ignore_euler") ) { ignore_euler=inValue.Cast< bool >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"ignore_listeners") ) { ignore_listeners=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Quaternion_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("z","\x7a","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("w","\x77","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("euler","\x69","\xd9","\x20","\x75"));
	outFields->push(HX_HCSTRING("ignore_listeners","\xd2","\x64","\x1e","\xf7"));
	outFields->push(HX_HCSTRING("_construct","\xd8","\xd3","\x4f","\xab"));
	outFields->push(HX_HCSTRING("ignore_euler","\x3c","\xf3","\x23","\x39"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Quaternion_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(Quaternion_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(Quaternion_obj,y),HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(Quaternion_obj,z),HX_HCSTRING("z","\x7a","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(Quaternion_obj,w),HX_HCSTRING("w","\x77","\x00","\x00","\x00")},
	{hx::fsObject /*::phoenix::Vector*/ ,(int)offsetof(Quaternion_obj,euler),HX_HCSTRING("euler","\x69","\xd9","\x20","\x75")},
	{hx::fsBool,(int)offsetof(Quaternion_obj,ignore_listeners),HX_HCSTRING("ignore_listeners","\xd2","\x64","\x1e","\xf7")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Quaternion_obj,listen_x),HX_HCSTRING("listen_x","\x40","\xfb","\x31","\x38")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Quaternion_obj,listen_y),HX_HCSTRING("listen_y","\x41","\xfb","\x31","\x38")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Quaternion_obj,listen_z),HX_HCSTRING("listen_z","\x42","\xfb","\x31","\x38")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Quaternion_obj,listen_w),HX_HCSTRING("listen_w","\x3f","\xfb","\x31","\x38")},
	{hx::fsBool,(int)offsetof(Quaternion_obj,_construct),HX_HCSTRING("_construct","\xd8","\xd3","\x4f","\xab")},
	{hx::fsBool,(int)offsetof(Quaternion_obj,ignore_euler),HX_HCSTRING("ignore_euler","\x3c","\xf3","\x23","\x39")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Quaternion_obj_sStaticStorageInfo = 0;
#endif

static ::String Quaternion_obj_sMemberFields[] = {
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("z","\x7a","\x00","\x00","\x00"),
	HX_HCSTRING("w","\x77","\x00","\x00","\x00"),
	HX_HCSTRING("euler","\x69","\xd9","\x20","\x75"),
	HX_HCSTRING("ignore_listeners","\xd2","\x64","\x1e","\xf7"),
	HX_HCSTRING("listen_x","\x40","\xfb","\x31","\x38"),
	HX_HCSTRING("listen_y","\x41","\xfb","\x31","\x38"),
	HX_HCSTRING("listen_z","\x42","\xfb","\x31","\x38"),
	HX_HCSTRING("listen_w","\x3f","\xfb","\x31","\x38"),
	HX_HCSTRING("_construct","\xd8","\xd3","\x4f","\xab"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	HX_HCSTRING("dot","\x89","\x42","\x4c","\x00"),
	HX_HCSTRING("setFromEuler","\x9d","\x83","\xf9","\x4d"),
	HX_HCSTRING("setFromAxisAngle","\xa6","\x03","\xd2","\xb0"),
	HX_HCSTRING("setFromRotationMatrix","\x6b","\xd9","\xc3","\x9f"),
	HX_HCSTRING("inverse","\xb0","\x4b","\xf1","\x3d"),
	HX_HCSTRING("conjugate","\x18","\x36","\x89","\x42"),
	HX_HCSTRING("lengthSq","\x24","\x63","\xc3","\x1f"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("normalize","\x8d","\x37","\xa1","\xab"),
	HX_HCSTRING("multiply","\x24","\xe2","\x8c","\x9a"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("addQuaternions","\xf4","\x74","\xd8","\xca"),
	HX_HCSTRING("multiplyScalar","\x70","\x70","\x21","\x48"),
	HX_HCSTRING("multiplyQuaternions","\xd1","\xcd","\xd9","\xef"),
	HX_HCSTRING("slerp","\x6a","\xc8","\xc4","\x7e"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("fromArray","\xcf","\x57","\x18","\xda"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("toeuler","\x0e","\xb6","\x77","\xae"),
	HX_HCSTRING("update_euler","\x73","\x53","\x37","\x3c"),
	HX_HCSTRING("ignore_euler","\x3c","\xf3","\x23","\x39"),
	HX_HCSTRING("set_xyzw","\xfb","\xea","\xc5","\x7d"),
	HX_HCSTRING("set_xyz","\xfc","\xd1","\xd1","\x19"),
	HX_HCSTRING("set_x","\x5b","\x9b","\x2f","\x7a"),
	HX_HCSTRING("set_y","\x5c","\x9b","\x2f","\x7a"),
	HX_HCSTRING("set_z","\x5d","\x9b","\x2f","\x7a"),
	HX_HCSTRING("set_w","\x5a","\x9b","\x2f","\x7a"),
	::String(null()) };

static void Quaternion_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Quaternion_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Quaternion_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Quaternion_obj::__mClass,"__mClass");
};

#endif

hx::Class Quaternion_obj::__mClass;

static ::String Quaternion_obj_sStaticFields[] = {
	HX_HCSTRING("Add","\x01","\xaa","\x31","\x00"),
	HX_HCSTRING("Multiply","\x44","\x9e","\x3e","\x74"),
	HX_HCSTRING("MultiplyScalar","\x90","\x04","\x77","\xf2"),
	HX_HCSTRING("Slerp","\x4a","\x38","\xf2","\x11"),
	HX_HCSTRING("Dot","\x69","\xfa","\x33","\x00"),
	HX_HCSTRING("Listen","\x67","\x3c","\x8e","\x24"),
	::String(null())
};

void Quaternion_obj::__register()
{
	hx::Object *dummy = new Quaternion_obj;
	Quaternion_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("phoenix.Quaternion","\xbd","\xb3","\x88","\xb2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Quaternion_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Quaternion_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Quaternion_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Quaternion_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Quaternion_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Quaternion_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Quaternion_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Quaternion_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace phoenix
