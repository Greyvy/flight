// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_luxe_utils_unifill_Exception
#include <luxe/utils/unifill/Exception.h>
#endif
namespace luxe{
namespace utils{
namespace unifill{

::luxe::utils::unifill::Exception Exception_obj::InvalidCodePoint(int code)
{
	return hx::CreateEnum< Exception_obj >(HX_("InvalidCodePoint",0c,5a,fa,ab),0,1)->_hx_init(0,code);
}

::luxe::utils::unifill::Exception Exception_obj::InvalidCodeUnitSequence(int index)
{
	return hx::CreateEnum< Exception_obj >(HX_("InvalidCodeUnitSequence",a9,92,0c,23),1,1)->_hx_init(0,index);
}

bool Exception_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("InvalidCodePoint",0c,5a,fa,ab)) { outValue = Exception_obj::InvalidCodePoint_dyn(); return true; }
	if (inName==HX_("InvalidCodeUnitSequence",a9,92,0c,23)) { outValue = Exception_obj::InvalidCodeUnitSequence_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(Exception_obj)

int Exception_obj::__FindIndex(::String inName)
{
	if (inName==HX_("InvalidCodePoint",0c,5a,fa,ab)) return 0;
	if (inName==HX_("InvalidCodeUnitSequence",a9,92,0c,23)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Exception_obj,InvalidCodePoint,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(Exception_obj,InvalidCodeUnitSequence,return)

int Exception_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("InvalidCodePoint",0c,5a,fa,ab)) return 1;
	if (inName==HX_("InvalidCodeUnitSequence",a9,92,0c,23)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val Exception_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("InvalidCodePoint",0c,5a,fa,ab)) return InvalidCodePoint_dyn();
	if (inName==HX_("InvalidCodeUnitSequence",a9,92,0c,23)) return InvalidCodeUnitSequence_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String Exception_obj_sStaticFields[] = {
	HX_("InvalidCodePoint",0c,5a,fa,ab),
	HX_("InvalidCodeUnitSequence",a9,92,0c,23),
	::String(null())
};

static void Exception_obj_sMarkStatics(HX_MARK_PARAMS) {
};

#ifdef HXCPP_VISIT_ALLOCS
static void Exception_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Exception_obj::__mClass,"__mClass");
};
#endif

hx::Class Exception_obj::__mClass;

Dynamic __Create_Exception_obj() { return new Exception_obj; }

void Exception_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("luxe.utils.unifill.Exception","\x3f","\x40","\x6e","\x9f"), hx::TCanCast< Exception_obj >,Exception_obj_sStaticFields,0,
	&__Create_Exception_obj, &__Create,
	&super::__SGetClass(), &CreateException_obj, Exception_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , Exception_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &Exception_obj::__GetStatic;
}

void Exception_obj::__boot()
{
}


} // end namespace luxe
} // end namespace utils
} // end namespace unifill
