// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_luxe_Component
#include <luxe/Component.h>
#endif
#ifndef INCLUDED_luxe_ID
#include <luxe/ID.h>
#endif
#ifndef INCLUDED_luxe_structural_OrderedMapIterator_String_luxe_Component
#include <luxe/structural/OrderedMapIterator_String_luxe_Component.h>
#endif
#ifndef INCLUDED_luxe_structural_OrderedMap_String_luxe_Component
#include <luxe/structural/OrderedMap_String_luxe_Component.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e75153005fdf913a_32_new,"luxe.structural.OrderedMap_String_luxe_Component","new",0x0879511d,"luxe.structural.OrderedMap_String_luxe_Component.new","luxe/structural/OrderedMap.hx",32,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_45_set,"luxe.structural.OrderedMap_String_luxe_Component","set",0x087d1c5f,"luxe.structural.OrderedMap_String_luxe_Component.set","luxe/structural/OrderedMap.hx",45,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_50_toString,"luxe.structural.OrderedMap_String_luxe_Component","toString",0xc9cc82cf,"luxe.structural.OrderedMap_String_luxe_Component.toString","luxe/structural/OrderedMap.hx",50,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_56_iterator,"luxe.structural.OrderedMap_String_luxe_Component","iterator",0x24f7fc11,"luxe.structural.OrderedMap_String_luxe_Component.iterator","luxe/structural/OrderedMap.hx",56,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_57_remove,"luxe.structural.OrderedMap_String_luxe_Component","remove",0xf9c06fa7,"luxe.structural.OrderedMap_String_luxe_Component.remove","luxe/structural/OrderedMap.hx",57,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_58_exists,"luxe.structural.OrderedMap_String_luxe_Component","exists",0xb517f13f,"luxe.structural.OrderedMap_String_luxe_Component.exists","luxe/structural/OrderedMap.hx",58,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_59_get,"luxe.structural.OrderedMap_String_luxe_Component","get",0x08740153,"luxe.structural.OrderedMap_String_luxe_Component.get","luxe/structural/OrderedMap.hx",59,0x2ffa3116)
HX_LOCAL_STACK_FRAME(_hx_pos_e75153005fdf913a_60_keys,"luxe.structural.OrderedMap_String_luxe_Component","keys",0x5fb20697,"luxe.structural.OrderedMap_String_luxe_Component.keys","luxe/structural/OrderedMap.hx",60,0x2ffa3116)
namespace luxe{
namespace structural{

void OrderedMap_String_luxe_Component_obj::__construct( ::haxe::ds::StringMap _map){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_32_new)
HXLINE(  35)		this->idx = (int)0;
HXLINE(  41)		this->_keys = ::Array_obj< ::String >::__new(0);
HXLINE(  42)		this->map = _map;
            	}

Dynamic OrderedMap_String_luxe_Component_obj::__CreateEmpty() { return new OrderedMap_String_luxe_Component_obj; }

void *OrderedMap_String_luxe_Component_obj::_hx_vtable = 0;

Dynamic OrderedMap_String_luxe_Component_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< OrderedMap_String_luxe_Component_obj > _hx_result = new OrderedMap_String_luxe_Component_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool OrderedMap_String_luxe_Component_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5415d04d;
}

static ::haxe::IMap_obj _hx_luxe_structural_OrderedMap_String_luxe_Component__hx_haxe_IMap= {
	(  ::Dynamic (hx::Object::*)( ::Dynamic))&::luxe::structural::OrderedMap_String_luxe_Component_obj::get_dc94b8fa,
	( void (hx::Object::*)( ::Dynamic, ::Dynamic))&::luxe::structural::OrderedMap_String_luxe_Component_obj::set_41d0cb46,
	( bool (hx::Object::*)( ::Dynamic))&::luxe::structural::OrderedMap_String_luxe_Component_obj::exists_5889326f,
	( bool (hx::Object::*)( ::Dynamic))&::luxe::structural::OrderedMap_String_luxe_Component_obj::remove_5889326f,
	(  ::Dynamic (hx::Object::*)())&::luxe::structural::OrderedMap_String_luxe_Component_obj::iterator_8b3ae2fb,
};

 ::Dynamic OrderedMap_String_luxe_Component_obj::iterator_8b3ae2fb() {
			return iterator();
}

bool OrderedMap_String_luxe_Component_obj::remove_5889326f( ::Dynamic k) {
			return remove(k);
}

bool OrderedMap_String_luxe_Component_obj::exists_5889326f( ::Dynamic k) {
			return exists(k);
}

void OrderedMap_String_luxe_Component_obj::set_41d0cb46( ::Dynamic k, ::Dynamic v) {
			set(k,v);
}

 ::Dynamic OrderedMap_String_luxe_Component_obj::get_dc94b8fa( ::Dynamic k) {
			return get(k);
}
void *OrderedMap_String_luxe_Component_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x09c2bd39: return &_hx_luxe_structural_OrderedMap_String_luxe_Component__hx_haxe_IMap;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void OrderedMap_String_luxe_Component_obj::set(::String key, ::luxe::Component value){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_45_set)
HXLINE(  46)		if (!(::haxe::IMap_obj::exists(this->map,key))) {
HXLINE(  46)			this->_keys->push(key);
            		}
HXLINE(  47)		::haxe::IMap_obj::set(this->map,key,value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(OrderedMap_String_luxe_Component_obj,set,(void))

::String OrderedMap_String_luxe_Component_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_50_toString)
HXLINE(  51)		::String _ret = HX_("",00,00,00,00);
HXDLIN(  51)		int _cnt = (int)0;
HXDLIN(  51)		int _len = this->_keys->length;
HXLINE(  52)		{
HXLINE(  52)			int _g = (int)0;
HXDLIN(  52)			::Array< ::String > _g1 = this->_keys;
HXDLIN(  52)			while((_g < _g1->length)){
HXLINE(  52)				::String k = _g1->__get(_g);
HXDLIN(  52)				_g = (_g + (int)1);
HXDLIN(  52)				::String _ret1 = ((HX_("",00,00,00,00) + ::Std_obj::string(k)) + HX_(" => ",7f,53,55,15));
HXDLIN(  52)				::String _ret2 = (_ret1 + ::Std_obj::string(::haxe::IMap_obj::get(this->map,k)));
HXDLIN(  52)				::String _ret3;
HXDLIN(  52)				_cnt = (_cnt + (int)1);
HXDLIN(  52)				int _ret4 = (_cnt - (int)1);
HXDLIN(  52)				if ((_ret4 < (_len - (int)1))) {
HXLINE(  52)					_ret3 = HX_(", ",74,26,00,00);
            				}
            				else {
HXLINE(  52)					_ret3 = HX_("",00,00,00,00);
            				}
HXDLIN(  52)				_ret = (_ret + (_ret2 + _ret3));
            			}
            		}
HXLINE(  53)		return ((HX_("{",7b,00,00,00) + _ret) + HX_("}",7d,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMap_String_luxe_Component_obj,toString,return )

 ::luxe::structural::OrderedMapIterator_String_luxe_Component OrderedMap_String_luxe_Component_obj::iterator(){
            	HX_GC_STACKFRAME(&_hx_pos_e75153005fdf913a_56_iterator)
HXDLIN(  56)		return  ::luxe::structural::OrderedMapIterator_String_luxe_Component_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMap_String_luxe_Component_obj,iterator,return )

bool OrderedMap_String_luxe_Component_obj::remove(::String key){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_57_remove)
HXDLIN(  57)		if (::haxe::IMap_obj::remove(this->map,key)) {
HXDLIN(  57)			return this->_keys->remove(key);
            		}
            		else {
HXDLIN(  57)			return false;
            		}
HXDLIN(  57)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMap_String_luxe_Component_obj,remove,return )

bool OrderedMap_String_luxe_Component_obj::exists(::String key){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_58_exists)
HXDLIN(  58)		return ::haxe::IMap_obj::exists(this->map,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMap_String_luxe_Component_obj,exists,return )

 ::luxe::Component OrderedMap_String_luxe_Component_obj::get(::String key){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_59_get)
HXDLIN(  59)		return ( ( ::luxe::Component)(::haxe::IMap_obj::get(this->map,key)) );
            	}


HX_DEFINE_DYNAMIC_FUNC1(OrderedMap_String_luxe_Component_obj,get,return )

 ::Dynamic OrderedMap_String_luxe_Component_obj::keys(){
            	HX_STACKFRAME(&_hx_pos_e75153005fdf913a_60_keys)
HXDLIN(  60)		return this->_keys->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(OrderedMap_String_luxe_Component_obj,keys,return )


hx::ObjectPtr< OrderedMap_String_luxe_Component_obj > OrderedMap_String_luxe_Component_obj::__new( ::haxe::ds::StringMap _map) {
	hx::ObjectPtr< OrderedMap_String_luxe_Component_obj > __this = new OrderedMap_String_luxe_Component_obj();
	__this->__construct(_map);
	return __this;
}

hx::ObjectPtr< OrderedMap_String_luxe_Component_obj > OrderedMap_String_luxe_Component_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ds::StringMap _map) {
	OrderedMap_String_luxe_Component_obj *__this = (OrderedMap_String_luxe_Component_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(OrderedMap_String_luxe_Component_obj), true, "luxe.structural.OrderedMap_String_luxe_Component"));
	*(void **)__this = OrderedMap_String_luxe_Component_obj::_hx_vtable;
	__this->__construct(_map);
	return __this;
}

OrderedMap_String_luxe_Component_obj::OrderedMap_String_luxe_Component_obj()
{
}

void OrderedMap_String_luxe_Component_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(OrderedMap_String_luxe_Component);
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(idx,"idx");
	HX_MARK_MEMBER_NAME(_keys,"_keys");
	HX_MARK_END_CLASS();
}

void OrderedMap_String_luxe_Component_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(idx,"idx");
	HX_VISIT_MEMBER_NAME(_keys,"_keys");
}

hx::Val OrderedMap_String_luxe_Component_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map ); }
		if (HX_FIELD_EQ(inName,"idx") ) { return hx::Val( idx ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { return hx::Val( keys_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"_keys") ) { return hx::Val( _keys ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"exists") ) { return hx::Val( exists_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val OrderedMap_String_luxe_Component_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"idx") ) { idx=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"_keys") ) { _keys=inValue.Cast< ::Array< ::String > >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void OrderedMap_String_luxe_Component_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"));
	outFields->push(HX_HCSTRING("idx","\x3d","\x04","\x50","\x00"));
	outFields->push(HX_HCSTRING("_keys","\xd3","\xfd","\x17","\xfa"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo OrderedMap_String_luxe_Component_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(OrderedMap_String_luxe_Component_obj,map),HX_HCSTRING("map","\x9c","\x0a","\x53","\x00")},
	{hx::fsInt,(int)offsetof(OrderedMap_String_luxe_Component_obj,idx),HX_HCSTRING("idx","\x3d","\x04","\x50","\x00")},
	{hx::fsObject /*Array< ::String >*/ ,(int)offsetof(OrderedMap_String_luxe_Component_obj,_keys),HX_HCSTRING("_keys","\xd3","\xfd","\x17","\xfa")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *OrderedMap_String_luxe_Component_obj_sStaticStorageInfo = 0;
#endif

static ::String OrderedMap_String_luxe_Component_obj_sMemberFields[] = {
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("idx","\x3d","\x04","\x50","\x00"),
	HX_HCSTRING("_keys","\xd3","\xfd","\x17","\xfa"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("keys","\xf4","\xe1","\x06","\x47"),
	::String(null()) };

static void OrderedMap_String_luxe_Component_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(OrderedMap_String_luxe_Component_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void OrderedMap_String_luxe_Component_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(OrderedMap_String_luxe_Component_obj::__mClass,"__mClass");
};

#endif

hx::Class OrderedMap_String_luxe_Component_obj::__mClass;

void OrderedMap_String_luxe_Component_obj::__register()
{
	hx::Object *dummy = new OrderedMap_String_luxe_Component_obj;
	OrderedMap_String_luxe_Component_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.structural.OrderedMap_String_luxe_Component","\xab","\x7e","\xa1","\x92");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = OrderedMap_String_luxe_Component_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(OrderedMap_String_luxe_Component_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< OrderedMap_String_luxe_Component_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = OrderedMap_String_luxe_Component_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OrderedMap_String_luxe_Component_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OrderedMap_String_luxe_Component_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
} // end namespace structural
