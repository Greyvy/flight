// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_luxe_Component
#include <luxe/Component.h>
#endif
#ifndef INCLUDED_luxe_Emitter
#include <luxe/Emitter.h>
#endif
#ifndef INCLUDED_luxe_Entity
#include <luxe/Entity.h>
#endif
#ifndef INCLUDED_luxe_ID
#include <luxe/ID.h>
#endif
#ifndef INCLUDED_luxe_Objects
#include <luxe/Objects.h>
#endif
#ifndef INCLUDED_luxe_components_Components
#include <luxe/components/Components.h>
#endif
#ifndef INCLUDED_luxe_structural_OrderedMap_String_luxe_Component
#include <luxe/structural/OrderedMap_String_luxe_Component.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_054316114ba41d38_17_new,"luxe.components.Components","new",0x0c312ac8,"luxe.components.Components.new","luxe/components/Components.hx",17,0x8dc4d408)
HX_LOCAL_STACK_FRAME(_hx_pos_054316114ba41d38_25_destroy,"luxe.components.Components","destroy",0xd4c4db62,"luxe.components.Components.destroy","luxe/components/Components.hx",25,0x8dc4d408)
HX_LOCAL_STACK_FRAME(_hx_pos_054316114ba41d38_33_add,"luxe.components.Components","add",0x0c274c89,"luxe.components.Components.add","luxe/components/Components.hx",33,0x8dc4d408)
HX_LOCAL_STACK_FRAME(_hx_pos_054316114ba41d38_65_remove,"luxe.components.Components","remove",0xc2bdb2dc,"luxe.components.Components.remove","luxe/components/Components.hx",65,0x8dc4d408)
HX_LOCAL_STACK_FRAME(_hx_pos_054316114ba41d38_89_get,"luxe.components.Components","get",0x0c2bdafe,"luxe.components.Components.get","luxe/components/Components.hx",89,0x8dc4d408)
HX_LOCAL_STACK_FRAME(_hx_pos_054316114ba41d38_124_get_any,"luxe.components.Components","get_any",0xd6fd71eb,"luxe.components.Components.get_any","luxe/components/Components.hx",124,0x8dc4d408)
HX_LOCAL_STACK_FRAME(_hx_pos_054316114ba41d38_174_has,"luxe.components.Components","has",0x0c2c99c2,"luxe.components.Components.has","luxe/components/Components.hx",174,0x8dc4d408)
namespace luxe{
namespace components{

void Components_obj::__construct( ::luxe::Entity _entity){
            	HX_GC_STACKFRAME(&_hx_pos_054316114ba41d38_17_new)
HXLINE(  19)		 ::haxe::ds::StringMap _map =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  20)		this->components =  ::luxe::structural::OrderedMap_String_luxe_Component_obj::__alloc( HX_CTX ,_map);
HXLINE(  21)		this->entity = _entity;
            	}

Dynamic Components_obj::__CreateEmpty() { return new Components_obj; }

void *Components_obj::_hx_vtable = 0;

Dynamic Components_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Components_obj > _hx_result = new Components_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Components_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x51bd4a82;
}

void Components_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_054316114ba41d38_25_destroy)
HXLINE(  27)		this->components->map = null();
HXLINE(  28)		this->components = null();
HXLINE(  29)		this->entity = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Components_obj,destroy,(void))

 ::Dynamic Components_obj::add( ::Dynamic _component){
            	HX_STACKFRAME(&_hx_pos_054316114ba41d38_33_add)
HXLINE(  35)		if (hx::IsNull( _component )) {
HXLINE(  36)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  36)			::String _hx_tmp1 = (HX_("attempt to add null component to ",da,07,42,37) + this->entity->get_name());
HXDLIN(  36)			_hx_tmp(_hx_tmp1,hx::SourceInfo(HX_("Components.hx",48,af,de,46),36,HX_("luxe.components.Components",d6,66,8a,49),HX_("add",21,f2,49,00)));
HXLINE(  37)			return _component;
            		}
HXLINE(  40)		( ( ::luxe::Component)(_component) )->set_entity(this->entity);
HXLINE(  42)		{
HXLINE(  42)			 ::luxe::structural::OrderedMap_String_luxe_Component _this = this->components;
HXDLIN(  42)			::String key = ( ( ::luxe::ID)(_component) )->name;
HXDLIN(  42)			if (!(::haxe::IMap_obj::exists(_this->map,key))) {
HXLINE(  42)				_this->_keys->push(key);
            			}
HXDLIN(  42)			::haxe::IMap_obj::set(_this->map,key,_component);
            		}
HXLINE(  47)		( ( ::luxe::Component)(_component) )->onadded();
HXLINE(  51)		if (this->entity->inited) {
HXLINE(  53)			( ( ::luxe::Component)(_component) )->init();
            		}
HXLINE(  56)		if (this->entity->started) {
HXLINE(  58)			( ( ::luxe::Component)(_component) )->onreset();
            		}
HXLINE(  61)		return _component;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Components_obj,add,return )

bool Components_obj::remove(::String _name){
            	HX_STACKFRAME(&_hx_pos_054316114ba41d38_65_remove)
HXLINE(  68)		if (!(::haxe::IMap_obj::exists(this->components->map,_name))) {
HXLINE(  69)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  69)			::String _hx_tmp1 = ((((HX_("attempt to remove ",ea,0b,b9,57) + _name) + HX_(" from ",56,a3,f9,d1)) + this->entity->get_name()) + HX_(" failed because that component was not attached to this entity",d9,3d,b2,71));
HXDLIN(  69)			_hx_tmp(_hx_tmp1,hx::SourceInfo(HX_("Components.hx",48,af,de,46),69,HX_("luxe.components.Components",d6,66,8a,49),HX_("remove",44,9c,88,04)));
HXLINE(  70)			return false;
            		}
HXLINE(  75)		 ::luxe::Component _component = ( ( ::luxe::Component)(::haxe::IMap_obj::get(this->components->map,_name)) );
HXLINE(  76)		_component->onremoved();
HXLINE(  79)		_component->set_entity(null());
HXLINE(  81)		 ::luxe::structural::OrderedMap_String_luxe_Component _this = this->components;
HXDLIN(  81)		if (::haxe::IMap_obj::remove(_this->map,_name)) {
HXLINE(  81)			return _this->_keys->remove(_name);
            		}
            		else {
HXLINE(  81)			return false;
            		}
HXDLIN(  81)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Components_obj,remove,return )

 ::Dynamic Components_obj::get(::String _name, ::Dynamic __o_in_children){
 ::Dynamic in_children = __o_in_children.Default(false);
            	HX_STACKFRAME(&_hx_pos_054316114ba41d38_89_get)
HXDLIN(  89)		if (!(in_children)) {
HXLINE(  91)			return ::haxe::IMap_obj::get(this->components->map,_name);
            		}
            		else {
HXLINE(  96)			 ::luxe::Component in_this_entity = ( ( ::luxe::Component)(::haxe::IMap_obj::get(this->components->map,_name)) );
HXLINE(  97)			if (hx::IsNotNull( in_this_entity )) {
HXLINE(  98)				return in_this_entity;
            			}
HXLINE( 104)			{
HXLINE( 104)				int _g = (int)0;
HXDLIN( 104)				::Array< ::Dynamic> _g1 = this->entity->children;
HXDLIN( 104)				while((_g < _g1->length)){
HXLINE( 104)					 ::luxe::Entity _child = _g1->__get(_g).StaticCast<  ::luxe::Entity >();
HXDLIN( 104)					_g = (_g + (int)1);
HXLINE( 108)					 ::Dynamic found = _child->_components->get(_name,true);
HXLINE( 110)					if (hx::IsNotNull( found )) {
HXLINE( 111)						return found;
            					}
            				}
            			}
HXLINE( 116)			return null();
            		}
HXLINE(  89)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Components_obj,get,return )

::cpp::VirtualArray Components_obj::get_any(::String _name, ::Dynamic __o_in_children, ::Dynamic __o_first_only){
 ::Dynamic in_children = __o_in_children.Default(false);
 ::Dynamic first_only = __o_first_only.Default(true);
            	HX_STACKFRAME(&_hx_pos_054316114ba41d38_124_get_any)
HXLINE( 128)		::cpp::VirtualArray results = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 130)		if (!(in_children)) {
HXLINE( 132)			return ::cpp::VirtualArray_obj::__new(1)->init(0,::haxe::IMap_obj::get(this->components->map,_name));
            		}
            		else {
HXLINE( 136)			 ::luxe::Component in_this_entity = ( ( ::luxe::Component)(::haxe::IMap_obj::get(this->components->map,_name)) );
HXLINE( 137)			if (hx::IsNotNull( in_this_entity )) {
HXLINE( 138)				if (first_only) {
HXLINE( 139)					return ::cpp::VirtualArray_obj::__new(1)->init(0,in_this_entity);
            				}
            				else {
HXLINE( 141)					results->push(in_this_entity);
            				}
            			}
HXLINE( 148)			{
HXLINE( 148)				int _g = (int)0;
HXDLIN( 148)				::Array< ::Dynamic> _g1 = this->entity->children;
HXDLIN( 148)				while((_g < _g1->length)){
HXLINE( 148)					 ::luxe::Entity _child = _g1->__get(_g).StaticCast<  ::luxe::Entity >();
HXDLIN( 148)					_g = (_g + (int)1);
HXLINE( 152)					::cpp::VirtualArray found = _child->_components->get_any(_name,true,first_only);
HXLINE( 154)					if (hx::IsNotNull( found )) {
HXLINE( 157)						bool _hx_tmp;
HXDLIN( 157)						if (first_only) {
HXLINE( 157)							_hx_tmp = (found->get_length() > (int)0);
            						}
            						else {
HXLINE( 157)							_hx_tmp = false;
            						}
HXDLIN( 157)						if (_hx_tmp) {
HXLINE( 158)							return ::cpp::VirtualArray_obj::__new(1)->init(0,found->__get((int)0));
            						}
            						else {
HXLINE( 160)							results->concat(found);
            						}
            					}
            				}
            			}
            		}
HXLINE( 169)		return results;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Components_obj,get_any,return )

bool Components_obj::has(::String _name){
            	HX_STACKFRAME(&_hx_pos_054316114ba41d38_174_has)
HXDLIN( 174)		return ::haxe::IMap_obj::exists(this->components->map,_name);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Components_obj,has,return )


hx::ObjectPtr< Components_obj > Components_obj::__new( ::luxe::Entity _entity) {
	hx::ObjectPtr< Components_obj > __this = new Components_obj();
	__this->__construct(_entity);
	return __this;
}

hx::ObjectPtr< Components_obj > Components_obj::__alloc(hx::Ctx *_hx_ctx, ::luxe::Entity _entity) {
	Components_obj *__this = (Components_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Components_obj), true, "luxe.components.Components"));
	*(void **)__this = Components_obj::_hx_vtable;
	__this->__construct(_entity);
	return __this;
}

Components_obj::Components_obj()
{
}

void Components_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Components);
	HX_MARK_MEMBER_NAME(components,"components");
	HX_MARK_MEMBER_NAME(entity,"entity");
	HX_MARK_END_CLASS();
}

void Components_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(components,"components");
	HX_VISIT_MEMBER_NAME(entity,"entity");
}

hx::Val Components_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"has") ) { return hx::Val( has_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"entity") ) { return hx::Val( entity ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_any") ) { return hx::Val( get_any_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"components") ) { return hx::Val( components ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Components_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"entity") ) { entity=inValue.Cast<  ::luxe::Entity >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"components") ) { components=inValue.Cast<  ::luxe::structural::OrderedMap_String_luxe_Component >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Components_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("components","\x16","\xb5","\x1e","\x5a"));
	outFields->push(HX_HCSTRING("entity","\x23","\x13","\x1c","\x05"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Components_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::luxe::structural::OrderedMap_String_luxe_Component*/ ,(int)offsetof(Components_obj,components),HX_HCSTRING("components","\x16","\xb5","\x1e","\x5a")},
	{hx::fsObject /*::luxe::Entity*/ ,(int)offsetof(Components_obj,entity),HX_HCSTRING("entity","\x23","\x13","\x1c","\x05")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Components_obj_sStaticStorageInfo = 0;
#endif

static ::String Components_obj_sMemberFields[] = {
	HX_HCSTRING("components","\x16","\xb5","\x1e","\x5a"),
	HX_HCSTRING("entity","\x23","\x13","\x1c","\x05"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("get_any","\x83","\xc3","\xbe","\x26"),
	HX_HCSTRING("has","\x5a","\x3f","\x4f","\x00"),
	::String(null()) };

static void Components_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Components_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Components_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Components_obj::__mClass,"__mClass");
};

#endif

hx::Class Components_obj::__mClass;

void Components_obj::__register()
{
	hx::Object *dummy = new Components_obj;
	Components_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.components.Components","\xd6","\x66","\x8a","\x49");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Components_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Components_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Components_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Components_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Components_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Components_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
} // end namespace components
