// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_luxe_collision_shapes_InfiniteState
#include <luxe/collision/shapes/InfiniteState.h>
#endif
namespace luxe{
namespace collision{
namespace shapes{

::luxe::collision::shapes::InfiniteState InfiniteState_obj::infinite;

::luxe::collision::shapes::InfiniteState InfiniteState_obj::infinite_from_start;

::luxe::collision::shapes::InfiniteState InfiniteState_obj::not_infinite;

bool InfiniteState_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("infinite",d4,16,69,da)) { outValue = InfiniteState_obj::infinite; return true; }
	if (inName==HX_("infinite_from_start",58,8b,55,a3)) { outValue = InfiniteState_obj::infinite_from_start; return true; }
	if (inName==HX_("not_infinite",c0,fa,6e,64)) { outValue = InfiniteState_obj::not_infinite; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(InfiniteState_obj)

int InfiniteState_obj::__FindIndex(::String inName)
{
	if (inName==HX_("infinite",d4,16,69,da)) return 2;
	if (inName==HX_("infinite_from_start",58,8b,55,a3)) return 1;
	if (inName==HX_("not_infinite",c0,fa,6e,64)) return 0;
	return super::__FindIndex(inName);
}

int InfiniteState_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("infinite",d4,16,69,da)) return 0;
	if (inName==HX_("infinite_from_start",58,8b,55,a3)) return 0;
	if (inName==HX_("not_infinite",c0,fa,6e,64)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val InfiniteState_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("infinite",d4,16,69,da)) return infinite;
	if (inName==HX_("infinite_from_start",58,8b,55,a3)) return infinite_from_start;
	if (inName==HX_("not_infinite",c0,fa,6e,64)) return not_infinite;
	return super::__Field(inName,inCallProp);
}

static ::String InfiniteState_obj_sStaticFields[] = {
	HX_("not_infinite",c0,fa,6e,64),
	HX_("infinite_from_start",58,8b,55,a3),
	HX_("infinite",d4,16,69,da),
	::String(null())
};

static void InfiniteState_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(InfiniteState_obj::infinite,"infinite");
	HX_MARK_MEMBER_NAME(InfiniteState_obj::infinite_from_start,"infinite_from_start");
	HX_MARK_MEMBER_NAME(InfiniteState_obj::not_infinite,"not_infinite");
};

#ifdef HXCPP_VISIT_ALLOCS
static void InfiniteState_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(InfiniteState_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(InfiniteState_obj::infinite,"infinite");
	HX_VISIT_MEMBER_NAME(InfiniteState_obj::infinite_from_start,"infinite_from_start");
	HX_VISIT_MEMBER_NAME(InfiniteState_obj::not_infinite,"not_infinite");
};
#endif

hx::Class InfiniteState_obj::__mClass;

Dynamic __Create_InfiniteState_obj() { return new InfiniteState_obj; }

void InfiniteState_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("luxe.collision.shapes.InfiniteState","\x75","\x4e","\x1f","\xd4"), hx::TCanCast< InfiniteState_obj >,InfiniteState_obj_sStaticFields,0,
	&__Create_InfiniteState_obj, &__Create,
	&super::__SGetClass(), &CreateInfiniteState_obj, InfiniteState_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , InfiniteState_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &InfiniteState_obj::__GetStatic;
}

void InfiniteState_obj::__boot()
{
infinite = hx::CreateEnum< InfiniteState_obj >(HX_HCSTRING("infinite","\xd4","\x16","\x69","\xda"),2,0);
infinite_from_start = hx::CreateEnum< InfiniteState_obj >(HX_HCSTRING("infinite_from_start","\x58","\x8b","\x55","\xa3"),1,0);
not_infinite = hx::CreateEnum< InfiniteState_obj >(HX_HCSTRING("not_infinite","\xc0","\xfa","\x6e","\x64"),0,0);
}


} // end namespace luxe
} // end namespace collision
} // end namespace shapes
