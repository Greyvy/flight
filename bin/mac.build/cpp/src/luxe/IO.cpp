// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_luxe_Engine
#include <luxe/Engine.h>
#endif
#ifndef INCLUDED_luxe_IO
#include <luxe/IO.h>
#endif
#ifndef INCLUDED_snow_App
#include <snow/App.h>
#endif
#ifndef INCLUDED_snow_Snow
#include <snow/Snow.h>
#endif
#ifndef INCLUDED_snow_core_native_io_IO
#include <snow/core/native/io/IO.h>
#endif
#ifndef INCLUDED_snow_modules_interfaces_IO
#include <snow/modules/interfaces/IO.h>
#endif
#ifndef INCLUDED_snow_modules_sdl_IO
#include <snow/modules/sdl/IO.h>
#endif
#ifndef INCLUDED_snow_systems_io_IO
#include <snow/systems/io/IO.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_11_new,"luxe.IO","new",0xf63a6990,"luxe.IO.new","luxe/IO.hx",11,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_27_url_open,"luxe.IO","url_open",0x879d3aaa,"luxe.IO.url_open","luxe/IO.hx",27,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_39_string_save,"luxe.IO","string_save",0x981f31db,"luxe.IO.string_save","luxe/IO.hx",39,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_48_string_load,"luxe.IO","string_load",0x938940c4,"luxe.IO.string_load","luxe/IO.hx",48,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_56_string_destroy,"luxe.IO","string_destroy",0x732ffd1c,"luxe.IO.string_destroy","luxe/IO.hx",56,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_66_get_app_path,"luxe.IO","get_app_path",0x04eb121c,"luxe.IO.get_app_path","luxe/IO.hx",66,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_72_get_app_path_prefs,"luxe.IO","get_app_path_prefs",0xda4d1e8d,"luxe.IO.get_app_path_prefs","luxe/IO.hx",72,0xc6be543f)
HX_LOCAL_STACK_FRAME(_hx_pos_3ba59fd27f68eb8d_78_init,"luxe.IO","init",0x799aabe0,"luxe.IO.init","luxe/IO.hx",78,0xc6be543f)
namespace luxe{

void IO_obj::__construct( ::luxe::Engine _core){
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_11_new)
HXDLIN(  11)		this->core = _core;
            	}

Dynamic IO_obj::__CreateEmpty() { return new IO_obj; }

void *IO_obj::_hx_vtable = 0;

Dynamic IO_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IO_obj > _hx_result = new IO_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool IO_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6b65f15c;
}

void IO_obj::url_open(::String _url){
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_27_url_open)
HXDLIN(  27)		this->core->app->io->module->url_open(_url);
            	}


HX_DEFINE_DYNAMIC_FUNC1(IO_obj,url_open,(void))

bool IO_obj::string_save(::String _key,::String _value,hx::Null< int >  __o__slot){
int _slot = __o__slot.Default(0);
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_39_string_save)
HXDLIN(  39)		return this->core->app->io->string_save(_key,_value,_slot);
            	}


HX_DEFINE_DYNAMIC_FUNC3(IO_obj,string_save,return )

::String IO_obj::string_load(::String _key,hx::Null< int >  __o__slot){
int _slot = __o__slot.Default(0);
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_48_string_load)
HXDLIN(  48)		return this->core->app->io->string_load(_key,_slot);
            	}


HX_DEFINE_DYNAMIC_FUNC2(IO_obj,string_load,return )

bool IO_obj::string_destroy(hx::Null< int >  __o__slot){
int _slot = __o__slot.Default(0);
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_56_string_destroy)
HXDLIN(  56)		return this->core->app->io->string_destroy(_slot);
            	}


HX_DEFINE_DYNAMIC_FUNC1(IO_obj,string_destroy,return )

::String IO_obj::get_app_path(){
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_66_get_app_path)
HXDLIN(  66)		return this->core->app->io->module->app_path();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IO_obj,get_app_path,return )

::String IO_obj::get_app_path_prefs(){
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_72_get_app_path_prefs)
HXDLIN(  72)		return this->core->app->io->module->app_path_prefs();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IO_obj,get_app_path_prefs,return )

void IO_obj::init(){
            	HX_STACKFRAME(&_hx_pos_3ba59fd27f68eb8d_78_init)
            	}


HX_DEFINE_DYNAMIC_FUNC0(IO_obj,init,(void))


hx::ObjectPtr< IO_obj > IO_obj::__new( ::luxe::Engine _core) {
	hx::ObjectPtr< IO_obj > __this = new IO_obj();
	__this->__construct(_core);
	return __this;
}

hx::ObjectPtr< IO_obj > IO_obj::__alloc(hx::Ctx *_hx_ctx, ::luxe::Engine _core) {
	IO_obj *__this = (IO_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IO_obj), true, "luxe.IO"));
	*(void **)__this = IO_obj::_hx_vtable;
	__this->__construct(_core);
	return __this;
}

IO_obj::IO_obj()
{
}

void IO_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IO);
	HX_MARK_MEMBER_NAME(core,"core");
	HX_MARK_END_CLASS();
}

void IO_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(core,"core");
}

hx::Val IO_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"core") ) { return hx::Val( core ); }
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"app_path") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_app_path() ); }
		if (HX_FIELD_EQ(inName,"url_open") ) { return hx::Val( url_open_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"string_save") ) { return hx::Val( string_save_dyn() ); }
		if (HX_FIELD_EQ(inName,"string_load") ) { return hx::Val( string_load_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_app_path") ) { return hx::Val( get_app_path_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"app_path_prefs") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_app_path_prefs() ); }
		if (HX_FIELD_EQ(inName,"string_destroy") ) { return hx::Val( string_destroy_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"get_app_path_prefs") ) { return hx::Val( get_app_path_prefs_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val IO_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"core") ) { core=inValue.Cast<  ::luxe::Engine >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IO_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("core","\x5f","\xbd","\xc4","\x41"));
	outFields->push(HX_HCSTRING("app_path","\x43","\x9d","\xdc","\xa2"));
	outFields->push(HX_HCSTRING("app_path_prefs","\xf4","\x00","\x3e","\x80"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo IO_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::luxe::Engine*/ ,(int)offsetof(IO_obj,core),HX_HCSTRING("core","\x5f","\xbd","\xc4","\x41")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IO_obj_sStaticStorageInfo = 0;
#endif

static ::String IO_obj_sMemberFields[] = {
	HX_HCSTRING("core","\x5f","\xbd","\xc4","\x41"),
	HX_HCSTRING("url_open","\xda","\x21","\xed","\xd3"),
	HX_HCSTRING("string_save","\xab","\xe8","\x33","\x77"),
	HX_HCSTRING("string_load","\x94","\xf7","\x9d","\x72"),
	HX_HCSTRING("string_destroy","\x4c","\x68","\xed","\x0e"),
	HX_HCSTRING("get_app_path","\x4c","\x51","\xf6","\x57"),
	HX_HCSTRING("get_app_path_prefs","\xbd","\xe1","\xd7","\x1b"),
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	::String(null()) };

static void IO_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IO_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IO_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IO_obj::__mClass,"__mClass");
};

#endif

hx::Class IO_obj::__mClass;

void IO_obj::__register()
{
	hx::Object *dummy = new IO_obj;
	IO_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.IO","\x9e","\xa1","\xca","\xad");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IO_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IO_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IO_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IO_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IO_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IO_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
