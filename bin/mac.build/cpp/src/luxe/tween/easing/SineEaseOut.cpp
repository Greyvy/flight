// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_luxe_tween_easing_IEasing
#include <luxe/tween/easing/IEasing.h>
#endif
#ifndef INCLUDED_luxe_tween_easing_SineEaseOut
#include <luxe/tween/easing/SineEaseOut.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d5b6866df57ea45e_99_new,"luxe.tween.easing.SineEaseOut","new",0xd4bb6c5d,"luxe.tween.easing.SineEaseOut.new","luxe/tween/easing/Sine.hx",99,0xfb10166a)
HX_LOCAL_STACK_FRAME(_hx_pos_d5b6866df57ea45e_108_calculate,"luxe.tween.easing.SineEaseOut","calculate",0x38aecd23,"luxe.tween.easing.SineEaseOut.calculate","luxe/tween/easing/Sine.hx",108,0xfb10166a)
HX_LOCAL_STACK_FRAME(_hx_pos_d5b6866df57ea45e_115_ease,"luxe.tween.easing.SineEaseOut","ease",0x494d6d51,"luxe.tween.easing.SineEaseOut.ease","luxe/tween/easing/Sine.hx",115,0xfb10166a)
namespace luxe{
namespace tween{
namespace easing{

void SineEaseOut_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d5b6866df57ea45e_99_new)
            	}

Dynamic SineEaseOut_obj::__CreateEmpty() { return new SineEaseOut_obj; }

void *SineEaseOut_obj::_hx_vtable = 0;

Dynamic SineEaseOut_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SineEaseOut_obj > _hx_result = new SineEaseOut_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SineEaseOut_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4d4a80d7;
}

static ::luxe::tween::easing::IEasing_obj _hx_luxe_tween_easing_SineEaseOut__hx_luxe_tween_easing_IEasing= {
	( Float (hx::Object::*)(Float))&::luxe::tween::easing::SineEaseOut_obj::calculate,
	( Float (hx::Object::*)(Float,Float,Float,Float))&::luxe::tween::easing::SineEaseOut_obj::ease,
};

void *SineEaseOut_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xd1e8cbf4: return &_hx_luxe_tween_easing_SineEaseOut__hx_luxe_tween_easing_IEasing;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

Float SineEaseOut_obj::calculate(Float k){
            	HX_STACKFRAME(&_hx_pos_d5b6866df57ea45e_108_calculate)
HXDLIN( 108)		return ::Math_obj::sin((k * ((Float)::Math_obj::PI / (Float)(int)2)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(SineEaseOut_obj,calculate,return )

Float SineEaseOut_obj::ease(Float t,Float b,Float c,Float d){
            	HX_STACKFRAME(&_hx_pos_d5b6866df57ea45e_115_ease)
HXDLIN( 115)		return ((c * ::Math_obj::sin((((Float)t / (Float)d) * ((Float)::Math_obj::PI / (Float)(int)2)))) + b);
            	}


HX_DEFINE_DYNAMIC_FUNC4(SineEaseOut_obj,ease,return )


hx::ObjectPtr< SineEaseOut_obj > SineEaseOut_obj::__new() {
	hx::ObjectPtr< SineEaseOut_obj > __this = new SineEaseOut_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< SineEaseOut_obj > SineEaseOut_obj::__alloc(hx::Ctx *_hx_ctx) {
	SineEaseOut_obj *__this = (SineEaseOut_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SineEaseOut_obj), false, "luxe.tween.easing.SineEaseOut"));
	*(void **)__this = SineEaseOut_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SineEaseOut_obj::SineEaseOut_obj()
{
}

hx::Val SineEaseOut_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"ease") ) { return hx::Val( ease_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"calculate") ) { return hx::Val( calculate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *SineEaseOut_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *SineEaseOut_obj_sStaticStorageInfo = 0;
#endif

static ::String SineEaseOut_obj_sMemberFields[] = {
	HX_HCSTRING("calculate","\x66","\x95","\x6a","\x05"),
	HX_HCSTRING("ease","\xee","\x8b","\x0c","\x43"),
	::String(null()) };

static void SineEaseOut_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SineEaseOut_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SineEaseOut_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SineEaseOut_obj::__mClass,"__mClass");
};

#endif

hx::Class SineEaseOut_obj::__mClass;

void SineEaseOut_obj::__register()
{
	hx::Object *dummy = new SineEaseOut_obj;
	SineEaseOut_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.tween.easing.SineEaseOut","\xeb","\xf9","\x64","\x9e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SineEaseOut_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SineEaseOut_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SineEaseOut_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SineEaseOut_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SineEaseOut_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SineEaseOut_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
} // end namespace tween
} // end namespace easing
