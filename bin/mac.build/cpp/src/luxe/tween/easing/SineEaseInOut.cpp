// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_luxe_tween_easing_IEasing
#include <luxe/tween/easing/IEasing.h>
#endif
#ifndef INCLUDED_luxe_tween_easing_SineEaseInOut
#include <luxe/tween/easing/SineEaseInOut.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4ee03e6d4c95f2c9_72_new,"luxe.tween.easing.SineEaseInOut","new",0x3a6e2038,"luxe.tween.easing.SineEaseInOut.new","luxe/tween/easing/Sine.hx",72,0xfb10166a)
HX_LOCAL_STACK_FRAME(_hx_pos_4ee03e6d4c95f2c9_81_calculate,"luxe.tween.easing.SineEaseInOut","calculate",0x04c6573e,"luxe.tween.easing.SineEaseInOut.calculate","luxe/tween/easing/Sine.hx",81,0xfb10166a)
HX_LOCAL_STACK_FRAME(_hx_pos_4ee03e6d4c95f2c9_88_ease,"luxe.tween.easing.SineEaseInOut","ease",0xdff81916,"luxe.tween.easing.SineEaseInOut.ease","luxe/tween/easing/Sine.hx",88,0xfb10166a)
namespace luxe{
namespace tween{
namespace easing{

void SineEaseInOut_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_4ee03e6d4c95f2c9_72_new)
            	}

Dynamic SineEaseInOut_obj::__CreateEmpty() { return new SineEaseInOut_obj; }

void *SineEaseInOut_obj::_hx_vtable = 0;

Dynamic SineEaseInOut_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SineEaseInOut_obj > _hx_result = new SineEaseInOut_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SineEaseInOut_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6bee0cce;
}

static ::luxe::tween::easing::IEasing_obj _hx_luxe_tween_easing_SineEaseInOut__hx_luxe_tween_easing_IEasing= {
	( Float (hx::Object::*)(Float))&::luxe::tween::easing::SineEaseInOut_obj::calculate,
	( Float (hx::Object::*)(Float,Float,Float,Float))&::luxe::tween::easing::SineEaseInOut_obj::ease,
};

void *SineEaseInOut_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xd1e8cbf4: return &_hx_luxe_tween_easing_SineEaseInOut__hx_luxe_tween_easing_IEasing;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

Float SineEaseInOut_obj::calculate(Float k){
            	HX_STACKFRAME(&_hx_pos_4ee03e6d4c95f2c9_81_calculate)
HXDLIN(  81)		return ((Float)-((::Math_obj::cos((::Math_obj::PI * k)) - (int)1)) / (Float)(int)2);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SineEaseInOut_obj,calculate,return )

Float SineEaseInOut_obj::ease(Float t,Float b,Float c,Float d){
            	HX_STACKFRAME(&_hx_pos_4ee03e6d4c95f2c9_88_ease)
HXDLIN(  88)		return ((((Float)-(c) / (Float)(int)2) * (::Math_obj::cos(((Float)(::Math_obj::PI * t) / (Float)d)) - (int)1)) + b);
            	}


HX_DEFINE_DYNAMIC_FUNC4(SineEaseInOut_obj,ease,return )


hx::ObjectPtr< SineEaseInOut_obj > SineEaseInOut_obj::__new() {
	hx::ObjectPtr< SineEaseInOut_obj > __this = new SineEaseInOut_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< SineEaseInOut_obj > SineEaseInOut_obj::__alloc(hx::Ctx *_hx_ctx) {
	SineEaseInOut_obj *__this = (SineEaseInOut_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SineEaseInOut_obj), false, "luxe.tween.easing.SineEaseInOut"));
	*(void **)__this = SineEaseInOut_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SineEaseInOut_obj::SineEaseInOut_obj()
{
}

hx::Val SineEaseInOut_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"ease") ) { return hx::Val( ease_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"calculate") ) { return hx::Val( calculate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *SineEaseInOut_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *SineEaseInOut_obj_sStaticStorageInfo = 0;
#endif

static ::String SineEaseInOut_obj_sMemberFields[] = {
	HX_HCSTRING("calculate","\x66","\x95","\x6a","\x05"),
	HX_HCSTRING("ease","\xee","\x8b","\x0c","\x43"),
	::String(null()) };

static void SineEaseInOut_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SineEaseInOut_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SineEaseInOut_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SineEaseInOut_obj::__mClass,"__mClass");
};

#endif

hx::Class SineEaseInOut_obj::__mClass;

void SineEaseInOut_obj::__register()
{
	hx::Object *dummy = new SineEaseInOut_obj;
	SineEaseInOut_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.tween.easing.SineEaseInOut","\x46","\xe4","\xe3","\x43");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SineEaseInOut_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SineEaseInOut_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SineEaseInOut_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SineEaseInOut_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SineEaseInOut_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SineEaseInOut_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
} // end namespace tween
} // end namespace easing
