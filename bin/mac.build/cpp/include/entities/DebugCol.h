// Generated by Haxe 3.4.5
#ifndef INCLUDED_entities_DebugCol
#define INCLUDED_entities_DebugCol

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_luxe_collision_ShapeDrawer
#include <luxe/collision/ShapeDrawer.h>
#endif
HX_DECLARE_CLASS1(entities,DebugCol)
HX_DECLARE_CLASS2(luxe,collision,ShapeDrawer)

namespace entities{


class HXCPP_CLASS_ATTRIBUTES DebugCol_obj : public  ::luxe::collision::ShapeDrawer_obj
{
	public:
		typedef  ::luxe::collision::ShapeDrawer_obj super;
		typedef DebugCol_obj OBJ_;
		DebugCol_obj();

	public:
		enum { _hx_ClassId = 0x5038dc0e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="entities.DebugCol")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"entities.DebugCol"); }
		static hx::ObjectPtr< DebugCol_obj > __new();
		static hx::ObjectPtr< DebugCol_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~DebugCol_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("DebugCol","\xcd","\x97","\x81","\x6a"); }

		void drawLine(Float p0x,Float p0y,Float p1x,Float p1y, ::Dynamic startPoint);

};

} // end namespace entities

#endif /* INCLUDED_entities_DebugCol */ 
