// Generated by Haxe 3.4.5
#ifndef INCLUDED_entities_Swinger
#define INCLUDED_entities_Swinger

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_luxe_Visual
#include <luxe/Visual.h>
#endif
HX_DECLARE_CLASS1(entities,Swinger)
HX_DECLARE_CLASS1(luxe,Emitter)
HX_DECLARE_CLASS1(luxe,Entity)
HX_DECLARE_CLASS1(luxe,Objects)
HX_DECLARE_CLASS1(luxe,Visual)

namespace entities{


class HXCPP_CLASS_ATTRIBUTES Swinger_obj : public  ::luxe::Visual_obj
{
	public:
		typedef  ::luxe::Visual_obj super;
		typedef Swinger_obj OBJ_;
		Swinger_obj();

	public:
		enum { _hx_ClassId = 0x251d6086 };

		void __construct( ::Dynamic _options);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="entities.Swinger")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"entities.Swinger"); }
		static hx::ObjectPtr< Swinger_obj > __new( ::Dynamic _options);
		static hx::ObjectPtr< Swinger_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic _options);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Swinger_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Swinger","\x8b","\x52","\x04","\xce"); }

		void init();

		void update(Float dt);

		void ondestroy();

};

} // end namespace entities

#endif /* INCLUDED_entities_Swinger */ 
