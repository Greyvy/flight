// Generated by Haxe 3.4.5
#ifndef INCLUDED_phoenix_RendererStats
#define INCLUDED_phoenix_RendererStats

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_bead5b303057ff3e_445_new)
HX_DECLARE_CLASS1(phoenix,RendererStats)

namespace phoenix{


class HXCPP_CLASS_ATTRIBUTES RendererStats_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef RendererStats_obj OBJ_;
		RendererStats_obj();

	public:
		enum { _hx_ClassId = 0x116a6e79 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="phoenix.RendererStats")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"phoenix.RendererStats"); }

		hx::ObjectPtr< RendererStats_obj > __new() {
			hx::ObjectPtr< RendererStats_obj > __this = new RendererStats_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< RendererStats_obj > __alloc(hx::Ctx *_hx_ctx) {
			RendererStats_obj *__this = (RendererStats_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(RendererStats_obj), false, "phoenix.RendererStats"));
			*(void **)__this = RendererStats_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_bead5b303057ff3e_445_new)
HXLINE( 454)		( ( ::phoenix::RendererStats)(__this) )->vert_count = (int)0;
HXLINE( 453)		( ( ::phoenix::RendererStats)(__this) )->draw_calls = (int)0;
HXLINE( 452)		( ( ::phoenix::RendererStats)(__this) )->visible_count = (int)0;
HXLINE( 451)		( ( ::phoenix::RendererStats)(__this) )->static_batched_count = (int)0;
HXLINE( 450)		( ( ::phoenix::RendererStats)(__this) )->dynamic_batched_count = (int)0;
HXLINE( 449)		( ( ::phoenix::RendererStats)(__this) )->geometry_count = (int)0;
HXLINE( 448)		( ( ::phoenix::RendererStats)(__this) )->batchers = (int)0;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~RendererStats_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("RendererStats","\xbc","\x7d","\x6c","\x8a"); }

		int batchers;
		int geometry_count;
		int dynamic_batched_count;
		int static_batched_count;
		int visible_count;
		int draw_calls;
		int vert_count;
		void reset();
		::Dynamic reset_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

};

} // end namespace phoenix

#endif /* INCLUDED_phoenix_RendererStats */ 
