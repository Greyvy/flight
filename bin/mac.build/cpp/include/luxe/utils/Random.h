// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe_utils_Random
#define INCLUDED_luxe_utils_Random

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(luxe,utils,Random)

namespace luxe{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES Random_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Random_obj OBJ_;
		Random_obj();

	public:
		enum { _hx_ClassId = 0x13fe925e };

		void __construct(Float _initial_seed);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="luxe.utils.Random")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"luxe.utils.Random"); }
		static hx::ObjectPtr< Random_obj > __new(Float _initial_seed);
		static hx::ObjectPtr< Random_obj > __alloc(hx::Ctx *_hx_ctx,Float _initial_seed);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Random_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Random","\x23","\x96","\x23","\xec"); }

		Float get();
		::Dynamic get_dyn();

		Float _hx_float(Float min, ::Dynamic max);
		::Dynamic _hx_float_dyn();

		int _hx_int(Float min, ::Dynamic max);
		::Dynamic _hx_int_dyn();

		bool _hx_bool(hx::Null< Float >  chance);
		::Dynamic _hx_bool_dyn();

		int sign(hx::Null< Float >  chance);
		::Dynamic sign_dyn();

		int bit(hx::Null< Float >  chance);
		::Dynamic bit_dyn();

		void reset();
		::Dynamic reset_dyn();

		Float seed;
		Float initial;
		Float set_initial(Float _initial);
		::Dynamic set_initial_dyn();

};

} // end namespace luxe
} // end namespace utils

#endif /* INCLUDED_luxe_utils_Random */ 
