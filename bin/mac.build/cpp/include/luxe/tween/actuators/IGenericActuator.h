// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe_tween_actuators_IGenericActuator
#define INCLUDED_luxe_tween_actuators_IGenericActuator

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(luxe,tween,actuators,IGenericActuator)
HX_DECLARE_CLASS3(luxe,tween,easing,IEasing)

namespace luxe{
namespace tween{
namespace actuators{


class HXCPP_CLASS_ATTRIBUTES IGenericActuator_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		::Dynamic (hx::Object :: *_hx_autoVisible)( ::Dynamic value); 
		static inline ::Dynamic autoVisible( ::Dynamic _hx_, ::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_autoVisible)(value);
		}
		::Dynamic (hx::Object :: *_hx_delay)(Float duration); 
		static inline ::Dynamic delay( ::Dynamic _hx_,Float duration) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_delay)(duration);
		}
		::Dynamic (hx::Object :: *_hx_ease)(::Dynamic easing); 
		static inline ::Dynamic ease( ::Dynamic _hx_,::Dynamic easing) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_ease)(easing);
		}
		::Dynamic (hx::Object :: *_hx_onComplete)( ::Dynamic handler,::cpp::VirtualArray parameters); 
		static inline ::Dynamic onComplete( ::Dynamic _hx_, ::Dynamic handler,::cpp::VirtualArray parameters) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_onComplete)(handler,parameters);
		}
		::Dynamic (hx::Object :: *_hx_onRepeat)( ::Dynamic handler,::cpp::VirtualArray parameters); 
		static inline ::Dynamic onRepeat( ::Dynamic _hx_, ::Dynamic handler,::cpp::VirtualArray parameters) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_onRepeat)(handler,parameters);
		}
		::Dynamic (hx::Object :: *_hx_onUpdate)( ::Dynamic handler,::cpp::VirtualArray parameters); 
		static inline ::Dynamic onUpdate( ::Dynamic _hx_, ::Dynamic handler,::cpp::VirtualArray parameters) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_onUpdate)(handler,parameters);
		}
		::Dynamic (hx::Object :: *_hx_reflect)( ::Dynamic value); 
		static inline ::Dynamic reflect( ::Dynamic _hx_, ::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_reflect)(value);
		}
		::Dynamic (hx::Object :: *_hx_repeat)( ::Dynamic times); 
		static inline ::Dynamic repeat( ::Dynamic _hx_, ::Dynamic times) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_repeat)(times);
		}
		::Dynamic (hx::Object :: *_hx_reverse)( ::Dynamic value); 
		static inline ::Dynamic reverse( ::Dynamic _hx_, ::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_reverse)(value);
		}
		::Dynamic (hx::Object :: *_hx_timescale)(hx::Null< bool >  _value); 
		static inline ::Dynamic timescale( ::Dynamic _hx_,hx::Null< bool >  _value) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_timescale)(_value);
		}
		::Dynamic (hx::Object :: *_hx_smartRotation)( ::Dynamic value); 
		static inline ::Dynamic smartRotation( ::Dynamic _hx_, ::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_smartRotation)(value);
		}
		::Dynamic (hx::Object :: *_hx_snapping)( ::Dynamic value); 
		static inline ::Dynamic snapping( ::Dynamic _hx_, ::Dynamic value) {
			return (_hx_.mPtr->*( static_cast< ::luxe::tween::actuators::IGenericActuator_obj *>(_hx_.mPtr->_hx_getInterface(0xa07369ec)))->_hx_snapping)(value);
		}
};

} // end namespace luxe
} // end namespace tween
} // end namespace actuators

#endif /* INCLUDED_luxe_tween_actuators_IGenericActuator */ 
