// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe_macros_BuildVersion
#define INCLUDED_luxe_macros_BuildVersion

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(luxe,macros,BuildVersion)

namespace luxe{
namespace macros{


class HXCPP_CLASS_ATTRIBUTES BuildVersion_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BuildVersion_obj OBJ_;
		BuildVersion_obj();

	public:
		enum { _hx_ClassId = 0x02dd3c87 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="luxe.macros.BuildVersion")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"luxe.macros.BuildVersion"); }

		hx::ObjectPtr< BuildVersion_obj > __new() {
			hx::ObjectPtr< BuildVersion_obj > __this = new BuildVersion_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< BuildVersion_obj > __alloc(hx::Ctx *_hx_ctx) {
			BuildVersion_obj *__this = (BuildVersion_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BuildVersion_obj), false, "luxe.macros.BuildVersion"));
			*(void **)__this = BuildVersion_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BuildVersion_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BuildVersion","\xaa","\x61","\x5c","\x57"); }

		static void __boot();
		static bool _save;
		static ::String try_git(::String root);
		static ::Dynamic try_git_dyn();

};

} // end namespace luxe
} // end namespace macros

#endif /* INCLUDED_luxe_macros_BuildVersion */ 
