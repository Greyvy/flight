// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe_Tag
#define INCLUDED_luxe_Tag

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(luxe,Tag)

namespace luxe{


class HXCPP_CLASS_ATTRIBUTES Tag_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Tag_obj OBJ_;
		Tag_obj();

	public:
		enum { _hx_ClassId = 0x0230f474 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="luxe.Tag")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"luxe.Tag"); }

		hx::ObjectPtr< Tag_obj > __new() {
			hx::ObjectPtr< Tag_obj > __this = new Tag_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Tag_obj > __alloc(hx::Ctx *_hx_ctx) {
			Tag_obj *__this = (Tag_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Tag_obj), false, "luxe.Tag"));
			*(void **)__this = Tag_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Tag_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Tag","\x3a","\x12","\x40","\x00"); }

		static void __boot();
		static ::String update;
		static ::String tick;
		static ::String game_update;
		static ::String render;
		static ::String debug;
		static ::String updates;
		static ::String events;
		static ::String audio;
		static ::String input;
		static ::String timer;
		static ::String scene;
};

} // end namespace luxe

#endif /* INCLUDED_luxe_Tag */ 
