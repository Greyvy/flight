// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe__Events_EventObject
#define INCLUDED_luxe__Events_EventObject

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_c7a53f79898847d7_341_new)
HX_DECLARE_CLASS2(luxe,_Events,EventObject)

namespace luxe{
namespace _Events{


class HXCPP_CLASS_ATTRIBUTES EventObject_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef EventObject_obj OBJ_;
		EventObject_obj();

	public:
		enum { _hx_ClassId = 0x1509bae3 };

		void __construct(::String _id,::String _event_name, ::Dynamic _event_properties);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="luxe._Events.EventObject")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"luxe._Events.EventObject"); }

		hx::ObjectPtr< EventObject_obj > __new(::String _id,::String _event_name, ::Dynamic _event_properties) {
			hx::ObjectPtr< EventObject_obj > __this = new EventObject_obj();
			__this->__construct(_id,_event_name,_event_properties);
			return __this;
		}

		static hx::ObjectPtr< EventObject_obj > __alloc(hx::Ctx *_hx_ctx,::String _id,::String _event_name, ::Dynamic _event_properties) {
			EventObject_obj *__this = (EventObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(EventObject_obj), true, "luxe._Events.EventObject"));
			*(void **)__this = EventObject_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_c7a53f79898847d7_341_new)
HXLINE( 343)		( ( ::luxe::_Events::EventObject)(__this) )->id = _id;
HXLINE( 344)		( ( ::luxe::_Events::EventObject)(__this) )->name = _event_name;
HXLINE( 345)		( ( ::luxe::_Events::EventObject)(__this) )->properties = _event_properties;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~EventObject_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("EventObject","\x59","\x62","\xbf","\x4c"); }

		::String id;
		::String name;
		 ::Dynamic properties;
};

} // end namespace luxe
} // end namespace _Events

#endif /* INCLUDED_luxe__Events_EventObject */ 
