// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe_Screen
#define INCLUDED_luxe_Screen

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(luxe,Cursor)
HX_DECLARE_CLASS1(luxe,Engine)
HX_DECLARE_CLASS1(luxe,Screen)
HX_DECLARE_CLASS1(phoenix,Rectangle)
HX_DECLARE_CLASS1(phoenix,Vector)
HX_DECLARE_CLASS1(snow,App)

namespace luxe{


class HXCPP_CLASS_ATTRIBUTES Screen_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Screen_obj OBJ_;
		Screen_obj();

	public:
		enum { _hx_ClassId = 0x1afd5a66 };

		void __construct( ::luxe::Engine _core,int _w,int _h);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="luxe.Screen")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"luxe.Screen"); }
		static hx::ObjectPtr< Screen_obj > __new( ::luxe::Engine _core,int _w,int _h);
		static hx::ObjectPtr< Screen_obj > __alloc(hx::Ctx *_hx_ctx, ::luxe::Engine _core,int _w,int _h);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Screen_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Screen","\x8c","\xaf","\xf1","\x7b"); }

		 ::phoenix::Vector mid;
		 ::phoenix::Vector size;
		 ::phoenix::Rectangle bounds;
		int w;
		int h;
		Float device_pixel_ratio;
		Float width;
		Float height;
		 ::luxe::Cursor cursor;
		 ::luxe::Engine core;
		virtual ::String toString();
		::Dynamic toString_dyn();

		bool point_inside( ::phoenix::Vector _p);
		::Dynamic point_inside_dyn();

		bool point_inside_xy(Float _x,Float _y);
		::Dynamic point_inside_xy_dyn();

		void internal_resized(Float _w,Float _h);
		::Dynamic internal_resized_dyn();

		 ::phoenix::Vector get_mid();
		::Dynamic get_mid_dyn();

		 ::phoenix::Vector get_size();
		::Dynamic get_size_dyn();

		 ::phoenix::Rectangle get_bounds();
		::Dynamic get_bounds_dyn();

		int get_w();
		::Dynamic get_w_dyn();

		int get_h();
		::Dynamic get_h_dyn();

		Float get_device_pixel_ratio();
		::Dynamic get_device_pixel_ratio_dyn();

};

} // end namespace luxe

#endif /* INCLUDED_luxe_Screen */ 
