// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe__Events_EventConnection
#define INCLUDED_luxe__Events_EventConnection

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_538a56804173a9a8_322_new)
HX_DECLARE_CLASS2(luxe,_Events,EventConnection)

namespace luxe{
namespace _Events{


class HXCPP_CLASS_ATTRIBUTES EventConnection_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef EventConnection_obj OBJ_;
		EventConnection_obj();

	public:
		enum { _hx_ClassId = 0x190adf7a };

		void __construct(::String _id,::String _event_name, ::Dynamic _listener);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="luxe._Events.EventConnection")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"luxe._Events.EventConnection"); }

		hx::ObjectPtr< EventConnection_obj > __new(::String _id,::String _event_name, ::Dynamic _listener) {
			hx::ObjectPtr< EventConnection_obj > __this = new EventConnection_obj();
			__this->__construct(_id,_event_name,_listener);
			return __this;
		}

		static hx::ObjectPtr< EventConnection_obj > __alloc(hx::Ctx *_hx_ctx,::String _id,::String _event_name, ::Dynamic _listener) {
			EventConnection_obj *__this = (EventConnection_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(EventConnection_obj), true, "luxe._Events.EventConnection"));
			*(void **)__this = EventConnection_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_538a56804173a9a8_322_new)
HXLINE( 324)		( ( ::luxe::_Events::EventConnection)(__this) )->id = _id;
HXLINE( 325)		( ( ::luxe::_Events::EventConnection)(__this) )->listener = _listener;
HXLINE( 326)		( ( ::luxe::_Events::EventConnection)(__this) )->event_name = _event_name;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~EventConnection_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("EventConnection","\xb8","\x58","\x75","\xf9"); }

		 ::Dynamic listener;
		Dynamic listener_dyn() { return listener;}
		::String id;
		::String event_name;
};

} // end namespace luxe
} // end namespace _Events

#endif /* INCLUDED_luxe__Events_EventConnection */ 
