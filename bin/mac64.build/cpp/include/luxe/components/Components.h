// Generated by Haxe 3.4.5
#ifndef INCLUDED_luxe_components_Components
#define INCLUDED_luxe_components_Components

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS1(luxe,Emitter)
HX_DECLARE_CLASS1(luxe,Entity)
HX_DECLARE_CLASS1(luxe,Objects)
HX_DECLARE_CLASS2(luxe,components,Components)
HX_DECLARE_CLASS2(luxe,structural,OrderedMap_String_luxe_Component)

namespace luxe{
namespace components{


class HXCPP_CLASS_ATTRIBUTES Components_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Components_obj OBJ_;
		Components_obj();

	public:
		enum { _hx_ClassId = 0x51bd4a82 };

		void __construct( ::luxe::Entity _entity);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="luxe.components.Components")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"luxe.components.Components"); }
		static hx::ObjectPtr< Components_obj > __new( ::luxe::Entity _entity);
		static hx::ObjectPtr< Components_obj > __alloc(hx::Ctx *_hx_ctx, ::luxe::Entity _entity);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Components_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Components","\x36","\xb9","\xcf","\x50"); }

		 ::luxe::structural::OrderedMap_String_luxe_Component components;
		 ::luxe::Entity entity;
		void destroy();
		::Dynamic destroy_dyn();

		 ::Dynamic add( ::Dynamic _component);
		::Dynamic add_dyn();

		bool remove(::String _name);
		::Dynamic remove_dyn();

		 ::Dynamic get(::String _name, ::Dynamic in_children);
		::Dynamic get_dyn();

		::cpp::VirtualArray get_any(::String _name, ::Dynamic in_children, ::Dynamic first_only);
		::Dynamic get_any_dyn();

		bool has(::String _name);
		::Dynamic has_dyn();

};

} // end namespace luxe
} // end namespace components

#endif /* INCLUDED_luxe_components_Components */ 
