// Generated by Haxe 3.4.5
#ifndef INCLUDED_components_PlayerController
#define INCLUDED_components_PlayerController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_luxe_Component
#include <luxe/Component.h>
#endif
HX_DECLARE_CLASS1(components,PlayerController)
HX_DECLARE_CLASS1(luxe,Component)
HX_DECLARE_CLASS1(luxe,ID)

namespace components{


class HXCPP_CLASS_ATTRIBUTES PlayerController_obj : public  ::luxe::Component_obj
{
	public:
		typedef  ::luxe::Component_obj super;
		typedef PlayerController_obj OBJ_;
		PlayerController_obj();

	public:
		enum { _hx_ClassId = 0x312a3b37 };

		void __construct( ::Dynamic _options);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="components.PlayerController")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"components.PlayerController"); }
		static hx::ObjectPtr< PlayerController_obj > __new( ::Dynamic _options);
		static hx::ObjectPtr< PlayerController_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic _options);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~PlayerController_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("PlayerController","\x7d","\xc7","\xdd","\x23"); }

		Float speed;
		void update(Float dt);

		void init();

		void ondestroy();

		void onremoved();

};

} // end namespace components

#endif /* INCLUDED_components_PlayerController */ 
