// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_luxe_DebugError
#include <luxe/DebugError.h>
#endif
namespace luxe{

::luxe::DebugError DebugError_obj::assertion(::String expr)
{
	return hx::CreateEnum< DebugError_obj >(HX_("assertion",c2,c6,fc,9f),0,1)->_hx_init(0,expr);
}

::luxe::DebugError DebugError_obj::null_assertion(::String expr)
{
	return hx::CreateEnum< DebugError_obj >(HX_("null_assertion",ca,ef,a9,9d),1,1)->_hx_init(0,expr);
}

bool DebugError_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("assertion",c2,c6,fc,9f)) { outValue = DebugError_obj::assertion_dyn(); return true; }
	if (inName==HX_("null_assertion",ca,ef,a9,9d)) { outValue = DebugError_obj::null_assertion_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(DebugError_obj)

int DebugError_obj::__FindIndex(::String inName)
{
	if (inName==HX_("assertion",c2,c6,fc,9f)) return 0;
	if (inName==HX_("null_assertion",ca,ef,a9,9d)) return 1;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(DebugError_obj,assertion,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(DebugError_obj,null_assertion,return)

int DebugError_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("assertion",c2,c6,fc,9f)) return 1;
	if (inName==HX_("null_assertion",ca,ef,a9,9d)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val DebugError_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("assertion",c2,c6,fc,9f)) return assertion_dyn();
	if (inName==HX_("null_assertion",ca,ef,a9,9d)) return null_assertion_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String DebugError_obj_sStaticFields[] = {
	HX_("assertion",c2,c6,fc,9f),
	HX_("null_assertion",ca,ef,a9,9d),
	::String(null())
};

static void DebugError_obj_sMarkStatics(HX_MARK_PARAMS) {
};

#ifdef HXCPP_VISIT_ALLOCS
static void DebugError_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DebugError_obj::__mClass,"__mClass");
};
#endif

hx::Class DebugError_obj::__mClass;

Dynamic __Create_DebugError_obj() { return new DebugError_obj; }

void DebugError_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("luxe.DebugError","\x4d","\x7a","\xd5","\x06"), hx::TCanCast< DebugError_obj >,DebugError_obj_sStaticFields,0,
	&__Create_DebugError_obj, &__Create,
	&super::__SGetClass(), &CreateDebugError_obj, DebugError_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , DebugError_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &DebugError_obj::__GetStatic;
}

void DebugError_obj::__boot()
{
}


} // end namespace luxe
