// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_Luxe
#include <Luxe.h>
#endif
#ifndef INCLUDED_luxe_PhysicsEngine
#include <luxe/PhysicsEngine.h>
#endif
#ifndef INCLUDED_phoenix_Vector
#include <phoenix/Vector.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_27ee4527dcd52abb_195_new,"luxe.PhysicsEngine","new",0x3df79a83,"luxe.PhysicsEngine.new","luxe/Physics.hx",195,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_210_init,"luxe.PhysicsEngine","init",0xf7684f8d,"luxe.PhysicsEngine.init","luxe/Physics.hx",210,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_216__render,"luxe.PhysicsEngine","_render",0xd6f79498,"luxe.PhysicsEngine._render","luxe/Physics.hx",216,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_220_process,"luxe.PhysicsEngine","process",0x54a1ba12,"luxe.PhysicsEngine.process","luxe/Physics.hx",220,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_224_update,"luxe.PhysicsEngine","update",0xcd7e73c6,"luxe.PhysicsEngine.update","luxe/Physics.hx",224,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_228_render,"luxe.PhysicsEngine","render",0x4ba25913,"luxe.PhysicsEngine.render","luxe/Physics.hx",228,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_232_destroy,"luxe.PhysicsEngine","destroy",0x87dd449d,"luxe.PhysicsEngine.destroy","luxe/Physics.hx",232,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_240_get_paused,"luxe.PhysicsEngine","get_paused",0x8cbac0b4,"luxe.PhysicsEngine.get_paused","luxe/Physics.hx",240,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_246_set_paused,"luxe.PhysicsEngine","set_paused",0x90385f28,"luxe.PhysicsEngine.set_paused","luxe/Physics.hx",246,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_252_get_draw,"luxe.PhysicsEngine","get_draw",0x4b087e8a,"luxe.PhysicsEngine.get_draw","luxe/Physics.hx",252,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_258_set_draw,"luxe.PhysicsEngine","set_draw",0xf965d7fe,"luxe.PhysicsEngine.set_draw","luxe/Physics.hx",258,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_264_get_gravity,"luxe.PhysicsEngine","get_gravity",0x6a78f388,"luxe.PhysicsEngine.get_gravity","luxe/Physics.hx",264,0xe794c970)
HX_LOCAL_STACK_FRAME(_hx_pos_27ee4527dcd52abb_270_set_gravity,"luxe.PhysicsEngine","set_gravity",0x74e5fa94,"luxe.PhysicsEngine.set_gravity","luxe/Physics.hx",270,0xe794c970)
namespace luxe{

void PhysicsEngine_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_27ee4527dcd52abb_195_new)
HXLINE( 201)		this->draw = true;
HXLINE( 199)		this->paused = false;
HXLINE( 197)		this->name = HX_("engine",c2,47,84,fc);
HXLINE( 205)		this->set_gravity( ::phoenix::Vector_obj::__alloc( HX_CTX ,(int)0,((Float)-9.8),(int)0,null()));
HXLINE( 206)		::Luxe_obj::on((int)10,this->_render_dyn());
            	}

Dynamic PhysicsEngine_obj::__CreateEmpty() { return new PhysicsEngine_obj; }

void *PhysicsEngine_obj::_hx_vtable = 0;

Dynamic PhysicsEngine_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< PhysicsEngine_obj > _hx_result = new PhysicsEngine_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PhysicsEngine_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fba2d4b;
}

void PhysicsEngine_obj::init(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_210_init)
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,init,(void))

void PhysicsEngine_obj::_render( ::Dynamic _){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_216__render)
HXDLIN( 216)		this->render();
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhysicsEngine_obj,_render,(void))

void PhysicsEngine_obj::process(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_220_process)
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,process,(void))

void PhysicsEngine_obj::update(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_224_update)
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,update,(void))

void PhysicsEngine_obj::render(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_228_render)
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,render,(void))

void PhysicsEngine_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_232_destroy)
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,destroy,(void))

bool PhysicsEngine_obj::get_paused(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_240_get_paused)
HXDLIN( 240)		return this->paused;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,get_paused,return )

bool PhysicsEngine_obj::set_paused( ::Dynamic _pause){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_246_set_paused)
HXDLIN( 246)		return (this->paused = _pause);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhysicsEngine_obj,set_paused,return )

bool PhysicsEngine_obj::get_draw(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_252_get_draw)
HXDLIN( 252)		return this->draw;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,get_draw,return )

bool PhysicsEngine_obj::set_draw(bool _draw){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_258_set_draw)
HXDLIN( 258)		return (this->draw = _draw);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhysicsEngine_obj,set_draw,return )

 ::phoenix::Vector PhysicsEngine_obj::get_gravity(){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_264_get_gravity)
HXDLIN( 264)		return this->gravity;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PhysicsEngine_obj,get_gravity,return )

 ::phoenix::Vector PhysicsEngine_obj::set_gravity( ::phoenix::Vector _gravity){
            	HX_STACKFRAME(&_hx_pos_27ee4527dcd52abb_270_set_gravity)
HXDLIN( 270)		return (this->gravity = _gravity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(PhysicsEngine_obj,set_gravity,return )


hx::ObjectPtr< PhysicsEngine_obj > PhysicsEngine_obj::__new() {
	hx::ObjectPtr< PhysicsEngine_obj > __this = new PhysicsEngine_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< PhysicsEngine_obj > PhysicsEngine_obj::__alloc(hx::Ctx *_hx_ctx) {
	PhysicsEngine_obj *__this = (PhysicsEngine_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(PhysicsEngine_obj), true, "luxe.PhysicsEngine"));
	*(void **)__this = PhysicsEngine_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PhysicsEngine_obj::PhysicsEngine_obj()
{
}

void PhysicsEngine_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PhysicsEngine);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(paused,"paused");
	HX_MARK_MEMBER_NAME(gravity,"gravity");
	HX_MARK_MEMBER_NAME(draw,"draw");
	HX_MARK_END_CLASS();
}

void PhysicsEngine_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(paused,"paused");
	HX_VISIT_MEMBER_NAME(gravity,"gravity");
	HX_VISIT_MEMBER_NAME(draw,"draw");
}

hx::Val PhysicsEngine_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"draw") ) { return hx::Val( inCallProp == hx::paccAlways ? get_draw() : draw ); }
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"paused") ) { return hx::Val( inCallProp == hx::paccAlways ? get_paused() : paused ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		if (HX_FIELD_EQ(inName,"render") ) { return hx::Val( render_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"gravity") ) { return hx::Val( inCallProp == hx::paccAlways ? get_gravity() : gravity ); }
		if (HX_FIELD_EQ(inName,"_render") ) { return hx::Val( _render_dyn() ); }
		if (HX_FIELD_EQ(inName,"process") ) { return hx::Val( process_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_draw") ) { return hx::Val( get_draw_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_draw") ) { return hx::Val( set_draw_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_paused") ) { return hx::Val( get_paused_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_paused") ) { return hx::Val( set_paused_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_gravity") ) { return hx::Val( get_gravity_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_gravity") ) { return hx::Val( set_gravity_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val PhysicsEngine_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"draw") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_draw(inValue.Cast< bool >()) );draw=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"paused") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_paused(inValue.Cast< bool >()) );paused=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"gravity") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_gravity(inValue.Cast<  ::phoenix::Vector >()) );gravity=inValue.Cast<  ::phoenix::Vector >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PhysicsEngine_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("name","\x4b","\x72","\xff","\x48"));
	outFields->push(HX_HCSTRING("paused","\xae","\x40","\x84","\xef"));
	outFields->push(HX_HCSTRING("gravity","\x4e","\x6e","\xff","\x77"));
	outFields->push(HX_HCSTRING("draw","\x04","\x2c","\x70","\x42"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo PhysicsEngine_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(PhysicsEngine_obj,name),HX_HCSTRING("name","\x4b","\x72","\xff","\x48")},
	{hx::fsBool,(int)offsetof(PhysicsEngine_obj,paused),HX_HCSTRING("paused","\xae","\x40","\x84","\xef")},
	{hx::fsObject /*::phoenix::Vector*/ ,(int)offsetof(PhysicsEngine_obj,gravity),HX_HCSTRING("gravity","\x4e","\x6e","\xff","\x77")},
	{hx::fsBool,(int)offsetof(PhysicsEngine_obj,draw),HX_HCSTRING("draw","\x04","\x2c","\x70","\x42")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *PhysicsEngine_obj_sStaticStorageInfo = 0;
#endif

static ::String PhysicsEngine_obj_sMemberFields[] = {
	HX_HCSTRING("name","\x4b","\x72","\xff","\x48"),
	HX_HCSTRING("paused","\xae","\x40","\x84","\xef"),
	HX_HCSTRING("gravity","\x4e","\x6e","\xff","\x77"),
	HX_HCSTRING("draw","\x04","\x2c","\x70","\x42"),
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	HX_HCSTRING("_render","\xf5","\x7c","\xa0","\x73"),
	HX_HCSTRING("process","\x6f","\xa2","\x4a","\xf1"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("get_paused","\x77","\xb0","\x0b","\xe0"),
	HX_HCSTRING("set_paused","\xeb","\x4e","\x89","\xe3"),
	HX_HCSTRING("get_draw","\x8d","\xe7","\x2a","\xc2"),
	HX_HCSTRING("set_draw","\x01","\x41","\x88","\x70"),
	HX_HCSTRING("get_gravity","\x65","\xce","\xf9","\xfd"),
	HX_HCSTRING("set_gravity","\x71","\xd5","\x66","\x08"),
	::String(null()) };

static void PhysicsEngine_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PhysicsEngine_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PhysicsEngine_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PhysicsEngine_obj::__mClass,"__mClass");
};

#endif

hx::Class PhysicsEngine_obj::__mClass;

void PhysicsEngine_obj::__register()
{
	hx::Object *dummy = new PhysicsEngine_obj;
	PhysicsEngine_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.PhysicsEngine","\x11","\x9d","\xd9","\x0b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PhysicsEngine_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(PhysicsEngine_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< PhysicsEngine_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PhysicsEngine_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PhysicsEngine_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PhysicsEngine_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
