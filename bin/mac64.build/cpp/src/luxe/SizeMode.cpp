// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_luxe_SizeMode
#include <luxe/SizeMode.h>
#endif
namespace luxe{

::luxe::SizeMode SizeMode_obj::contain;

::luxe::SizeMode SizeMode_obj::cover;

::luxe::SizeMode SizeMode_obj::fit;

bool SizeMode_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("contain",d4,7f,74,19)) { outValue = SizeMode_obj::contain; return true; }
	if (inName==HX_("cover",37,ff,63,4a)) { outValue = SizeMode_obj::cover; return true; }
	if (inName==HX_("fit",d1,c1,4d,00)) { outValue = SizeMode_obj::fit; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(SizeMode_obj)

int SizeMode_obj::__FindIndex(::String inName)
{
	if (inName==HX_("contain",d4,7f,74,19)) return 2;
	if (inName==HX_("cover",37,ff,63,4a)) return 1;
	if (inName==HX_("fit",d1,c1,4d,00)) return 0;
	return super::__FindIndex(inName);
}

int SizeMode_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("contain",d4,7f,74,19)) return 0;
	if (inName==HX_("cover",37,ff,63,4a)) return 0;
	if (inName==HX_("fit",d1,c1,4d,00)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val SizeMode_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("contain",d4,7f,74,19)) return contain;
	if (inName==HX_("cover",37,ff,63,4a)) return cover;
	if (inName==HX_("fit",d1,c1,4d,00)) return fit;
	return super::__Field(inName,inCallProp);
}

static ::String SizeMode_obj_sStaticFields[] = {
	HX_("fit",d1,c1,4d,00),
	HX_("cover",37,ff,63,4a),
	HX_("contain",d4,7f,74,19),
	::String(null())
};

static void SizeMode_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SizeMode_obj::contain,"contain");
	HX_MARK_MEMBER_NAME(SizeMode_obj::cover,"cover");
	HX_MARK_MEMBER_NAME(SizeMode_obj::fit,"fit");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SizeMode_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SizeMode_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(SizeMode_obj::contain,"contain");
	HX_VISIT_MEMBER_NAME(SizeMode_obj::cover,"cover");
	HX_VISIT_MEMBER_NAME(SizeMode_obj::fit,"fit");
};
#endif

hx::Class SizeMode_obj::__mClass;

Dynamic __Create_SizeMode_obj() { return new SizeMode_obj; }

void SizeMode_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("luxe.SizeMode","\x9c","\xcc","\x9b","\x62"), hx::TCanCast< SizeMode_obj >,SizeMode_obj_sStaticFields,0,
	&__Create_SizeMode_obj, &__Create,
	&super::__SGetClass(), &CreateSizeMode_obj, SizeMode_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , SizeMode_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &SizeMode_obj::__GetStatic;
}

void SizeMode_obj::__boot()
{
contain = hx::CreateEnum< SizeMode_obj >(HX_HCSTRING("contain","\xd4","\x7f","\x74","\x19"),2,0);
cover = hx::CreateEnum< SizeMode_obj >(HX_HCSTRING("cover","\x37","\xff","\x63","\x4a"),1,0);
fit = hx::CreateEnum< SizeMode_obj >(HX_HCSTRING("fit","\xd1","\xc1","\x4d","\x00"),0,0);
}


} // end namespace luxe
