// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_luxe_tween_easing_IEasing
#include <luxe/tween/easing/IEasing.h>
#endif
#ifndef INCLUDED_luxe_tween_easing_QuadEaseInOut
#include <luxe/tween/easing/QuadEaseInOut.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0ed1d4278ce10acb_73_new,"luxe.tween.easing.QuadEaseInOut","new",0x3753f97e,"luxe.tween.easing.QuadEaseInOut.new","luxe/tween/easing/Quad.hx",73,0xf74ebc30)
HX_LOCAL_STACK_FRAME(_hx_pos_0ed1d4278ce10acb_80_calculate,"luxe.tween.easing.QuadEaseInOut","calculate",0x4bf36904,"luxe.tween.easing.QuadEaseInOut.calculate","luxe/tween/easing/Quad.hx",80,0xf74ebc30)
HX_LOCAL_STACK_FRAME(_hx_pos_0ed1d4278ce10acb_90_ease,"luxe.tween.easing.QuadEaseInOut","ease",0x2c305d10,"luxe.tween.easing.QuadEaseInOut.ease","luxe/tween/easing/Quad.hx",90,0xf74ebc30)
namespace luxe{
namespace tween{
namespace easing{

void QuadEaseInOut_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_0ed1d4278ce10acb_73_new)
            	}

Dynamic QuadEaseInOut_obj::__CreateEmpty() { return new QuadEaseInOut_obj; }

void *QuadEaseInOut_obj::_hx_vtable = 0;

Dynamic QuadEaseInOut_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< QuadEaseInOut_obj > _hx_result = new QuadEaseInOut_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool QuadEaseInOut_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0ac82ddc;
}

static ::luxe::tween::easing::IEasing_obj _hx_luxe_tween_easing_QuadEaseInOut__hx_luxe_tween_easing_IEasing= {
	( Float (hx::Object::*)(Float))&::luxe::tween::easing::QuadEaseInOut_obj::calculate,
	( Float (hx::Object::*)(Float,Float,Float,Float))&::luxe::tween::easing::QuadEaseInOut_obj::ease,
};

void *QuadEaseInOut_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xd1e8cbf4: return &_hx_luxe_tween_easing_QuadEaseInOut__hx_luxe_tween_easing_IEasing;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

Float QuadEaseInOut_obj::calculate(Float k){
            	HX_STACKFRAME(&_hx_pos_0ed1d4278ce10acb_80_calculate)
HXLINE(  82)		k = (k * (int)2);
HXDLIN(  82)		if ((k < (int)1)) {
HXLINE(  83)			return ((((Float)0.5) * k) * k);
            		}
HXLINE(  85)		return (((Float)-0.5) * (((k - (int)1) * (k - (int)3)) - (int)1));
            	}


HX_DEFINE_DYNAMIC_FUNC1(QuadEaseInOut_obj,calculate,return )

Float QuadEaseInOut_obj::ease(Float t,Float b,Float c,Float d){
            	HX_STACKFRAME(&_hx_pos_0ed1d4278ce10acb_90_ease)
HXLINE(  92)		t = ((Float)t / (Float)((Float)d / (Float)(int)2));
HXDLIN(  92)		if ((t < (int)1)) {
HXLINE(  93)			return (((((Float)c / (Float)(int)2) * t) * t) + b);
            		}
HXLINE(  95)		return ((((Float)-(c) / (Float)(int)2) * (((t - (int)1) * (t - (int)3)) - (int)1)) + b);
            	}


HX_DEFINE_DYNAMIC_FUNC4(QuadEaseInOut_obj,ease,return )


hx::ObjectPtr< QuadEaseInOut_obj > QuadEaseInOut_obj::__new() {
	hx::ObjectPtr< QuadEaseInOut_obj > __this = new QuadEaseInOut_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< QuadEaseInOut_obj > QuadEaseInOut_obj::__alloc(hx::Ctx *_hx_ctx) {
	QuadEaseInOut_obj *__this = (QuadEaseInOut_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(QuadEaseInOut_obj), false, "luxe.tween.easing.QuadEaseInOut"));
	*(void **)__this = QuadEaseInOut_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

QuadEaseInOut_obj::QuadEaseInOut_obj()
{
}

hx::Val QuadEaseInOut_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"ease") ) { return hx::Val( ease_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"calculate") ) { return hx::Val( calculate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *QuadEaseInOut_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *QuadEaseInOut_obj_sStaticStorageInfo = 0;
#endif

static ::String QuadEaseInOut_obj_sMemberFields[] = {
	HX_HCSTRING("calculate","\x66","\x95","\x6a","\x05"),
	HX_HCSTRING("ease","\xee","\x8b","\x0c","\x43"),
	::String(null()) };

static void QuadEaseInOut_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(QuadEaseInOut_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void QuadEaseInOut_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(QuadEaseInOut_obj::__mClass,"__mClass");
};

#endif

hx::Class QuadEaseInOut_obj::__mClass;

void QuadEaseInOut_obj::__register()
{
	hx::Object *dummy = new QuadEaseInOut_obj;
	QuadEaseInOut_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("luxe.tween.easing.QuadEaseInOut","\x8c","\x22","\xc6","\x81");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = QuadEaseInOut_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(QuadEaseInOut_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< QuadEaseInOut_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = QuadEaseInOut_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = QuadEaseInOut_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = QuadEaseInOut_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace luxe
} // end namespace tween
} // end namespace easing
