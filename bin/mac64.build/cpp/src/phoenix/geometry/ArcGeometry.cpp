// Generated by Haxe 3.4.5
#include <hxcpp.h>

#ifndef INCLUDED_phoenix_geometry_ArcGeometry
#include <phoenix/geometry/ArcGeometry.h>
#endif
#ifndef INCLUDED_phoenix_geometry_Geometry
#include <phoenix/geometry/Geometry.h>
#endif
#ifndef INCLUDED_phoenix_geometry_RingGeometry
#include <phoenix/geometry/RingGeometry.h>
#endif
#ifndef INCLUDED_phoenix_geometry_Vertex
#include <phoenix/geometry/Vertex.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_feaa3ca5524da2c8_13_new,"phoenix.geometry.ArcGeometry","new",0xa02c36f9,"phoenix.geometry.ArcGeometry.new","phoenix/geometry/ArcGeometry.hx",13,0x6c6a0a77)
namespace phoenix{
namespace geometry{

void ArcGeometry_obj::__construct( ::Dynamic _options){
            	HX_STACKFRAME(&_hx_pos_feaa3ca5524da2c8_13_new)
HXLINE(  15)		super::__construct(_options);
HXLINE(  19)		this->vertices->pop().StaticCast<  ::phoenix::geometry::Vertex >();
HXLINE(  20)		this->vertices->pop().StaticCast<  ::phoenix::geometry::Vertex >();
            	}

Dynamic ArcGeometry_obj::__CreateEmpty() { return new ArcGeometry_obj; }

void *ArcGeometry_obj::_hx_vtable = 0;

Dynamic ArcGeometry_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ArcGeometry_obj > _hx_result = new ArcGeometry_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ArcGeometry_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5272fae3) {
		if (inClassId<=(int)0x07d18947) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x07d18947;
		} else {
			return inClassId==(int)0x5272fae3;
		}
	} else {
		return inClassId==(int)0x6c1faa93;
	}
}


hx::ObjectPtr< ArcGeometry_obj > ArcGeometry_obj::__new( ::Dynamic _options) {
	hx::ObjectPtr< ArcGeometry_obj > __this = new ArcGeometry_obj();
	__this->__construct(_options);
	return __this;
}

hx::ObjectPtr< ArcGeometry_obj > ArcGeometry_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic _options) {
	ArcGeometry_obj *__this = (ArcGeometry_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ArcGeometry_obj), true, "phoenix.geometry.ArcGeometry"));
	*(void **)__this = ArcGeometry_obj::_hx_vtable;
	__this->__construct(_options);
	return __this;
}

ArcGeometry_obj::ArcGeometry_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ArcGeometry_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ArcGeometry_obj_sStaticStorageInfo = 0;
#endif

static void ArcGeometry_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ArcGeometry_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ArcGeometry_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ArcGeometry_obj::__mClass,"__mClass");
};

#endif

hx::Class ArcGeometry_obj::__mClass;

void ArcGeometry_obj::__register()
{
	hx::Object *dummy = new ArcGeometry_obj;
	ArcGeometry_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("phoenix.geometry.ArcGeometry","\x87","\x46","\x3d","\xd7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ArcGeometry_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ArcGeometry_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ArcGeometry_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ArcGeometry_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ArcGeometry_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace phoenix
} // end namespace geometry
